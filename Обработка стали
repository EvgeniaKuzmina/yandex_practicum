{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "53f53e81",
   "metadata": {},
   "source": [
    "# Промышленность\n",
    "\n",
    "Чтобы оптимизировать производственные расходы, металлургический комбинат ООО «Так закаляем сталь» решил уменьшить потребление электроэнергии на этапе обработки стали. Вам предстоит построить модель, которая предскажет температуру стали.\n",
    "\n",
    "**Описание этапа обработки**\n",
    "\n",
    "Сталь обрабатывают в металлическом ковше вместимостью около 100 тонн. Чтобы ковш выдерживал высокие температуры, изнутри его облицовывают огнеупорным кирпичом. Расплавленную сталь заливают в ковш и подогревают до нужной температуры графитовыми электродами. Они установлены в крышке ковша. \n",
    "Из сплава выводится сера (десульфурация), добавлением примесей корректируется химический состав и отбираются пробы. Сталь легируют — изменяют её состав — подавая куски сплава из бункера для сыпучих материалов или проволоку через специальный трайб-аппарат (англ. tribe, «масса»).\n",
    "Перед тем как первый раз ввести легирующие добавки, измеряют температуру стали и производят её химический анализ. Потом температуру на несколько минут повышают, добавляют легирующие материалы и продувают сплав инертным газом. Затем его перемешивают и снова проводят измерения. Такой цикл повторяется до достижения целевого химического состава и оптимальной температуры плавки.\n",
    "Тогда расплавленная сталь отправляется на доводку металла или поступает в машину непрерывной разливки. Оттуда готовый продукт выходит в виде заготовок-слябов (англ. slab, «плита»).\n",
    "\n",
    "**Описание данных** \n",
    "\n",
    "Данные состоят из файлов, полученных из разных источников:\n",
    "- data_arc_new.csv — данные об электродах;\n",
    "- data_bulk_new.csv — данные о подаче сыпучих материалов (объём);\n",
    "- data_bulk_time_new.csv — данные о подаче сыпучих материалов (время);\n",
    "- data_gas_new.csv — данные о продувке сплава газом;\n",
    "- data_temp_new.csv — результаты измерения температуры;\n",
    "- data_wire_new.csv — данные о проволочных материалах (объём);\n",
    "- data_wire_time_new.csv — данные о проволочных материалах (время).\n",
    "\n",
    "Во всех файлах столбец key содержит номер партии. В файлах может быть несколько строк с одинаковым значением key: они соответствуют разным итерациям обработки.\n",
    "\n",
    "**Цель проекта**\n",
    "Построить модель, которая предсказывает температуру стали."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0d9a0007",
   "metadata": {},
   "source": [
    "**План**\n",
    "1. Провести исследовательский анализ данных\n",
    "2. Объединение таблиц в один датасет\n",
    "3. Исследование объединенного датасета\n",
    "4. Обучение моделей\n",
    "5. Тестирование лучшей модели\n",
    "6. Общий вывод"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e8884dc3",
   "metadata": {},
   "source": [
    "## Исследовательский анализ данных (EDA)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9b0e81ee",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import time\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from catboost import CatBoostRegressor\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from lightgbm import LGBMRegressor\n",
    "from sklearn.dummy import DummyRegressor\n",
    "from sklearn.metrics import r2_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "86009b25",
   "metadata": {},
   "outputs": [],
   "source": [
    "random_state = 310723"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "53757a08",
   "metadata": {},
   "outputs": [],
   "source": [
    "try:\n",
    "    data_arc = pd.read_csv(r'C:\\Users\\kuzmi\\Downloads\\data_arc_new.csv')\n",
    "except:\n",
    "    data_arc = pd.read_csv(r'https://code.s3.yandex.net/datasets/data_arc_new.csv')\n",
    "try:    \n",
    "    data_bulk = pd.read_csv(r'C:\\Users\\kuzmi\\Downloads\\data_bulk_new.csv')\n",
    "except:\n",
    "    data_bulk = pd.read_csv(r'https://code.s3.yandex.net/datasets/data_bulk_new.csv')\n",
    "try:    \n",
    "    data_temp = pd.read_csv(r'C:\\Users\\kuzmi\\Downloads\\data_temp_new.csv')\n",
    "except:\n",
    "    data_temp = pd.read_csv(r'https://code.s3.yandex.net/datasets/data_temp_new.csv')\n",
    "try: \n",
    "    data_gas = pd.read_csv(r'C:\\Users\\kuzmi\\Downloads\\data_gas_new.csv')\n",
    "except:\n",
    "    data_gas = pd.read_csv(r'https://code.s3.yandex.net/datasets/data_gas_new.csv')\n",
    "try:\n",
    "    data_bulk_time = pd.read_csv(r'C:\\Users\\kuzmi\\Downloads\\data_bulk_time_new.csv')\n",
    "except:\n",
    "    data_bulk_time = pd.read_csv(r'https://code.s3.yandex.net/datasets/data_bulk_time_new.csv')\n",
    "try:    \n",
    "    data_wire = pd.read_csv(r'C:\\Users\\kuzmi\\Downloads\\data_wire_new.csv')\n",
    "except:\n",
    "    data_wire = pd.read_csv(r'https://code.s3.yandex.net/datasets/data_wire_new.csv')\n",
    "try:\n",
    "    data_wire_time = pd.read_csv(r'C:\\Users\\kuzmi\\Downloads\\data_wire_time_new.csv')\n",
    "except:\n",
    "    data_wire_time = pd.read_csv(r'https://code.s3.yandex.net/datasets/data_wire_time_new.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1b36fec8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 14876 entries, 0 to 14875\n",
      "Data columns (total 5 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   key                   14876 non-null  int64  \n",
      " 1   Начало нагрева дугой  14876 non-null  object \n",
      " 2   Конец нагрева дугой   14876 non-null  object \n",
      " 3   Активная мощность     14876 non-null  float64\n",
      " 4   Реактивная мощность   14876 non-null  float64\n",
      "dtypes: float64(2), int64(1), object(2)\n",
      "memory usage: 581.2+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Активная мощность</th>\n",
       "      <th>Реактивная мощность</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>14876.000000</td>\n",
       "      <td>14876.000000</td>\n",
       "      <td>14876.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1615.220422</td>\n",
       "      <td>0.662752</td>\n",
       "      <td>0.438986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>934.571502</td>\n",
       "      <td>0.258885</td>\n",
       "      <td>5.873485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.223120</td>\n",
       "      <td>-715.479924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>806.000000</td>\n",
       "      <td>0.467115</td>\n",
       "      <td>0.337175</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1617.000000</td>\n",
       "      <td>0.599587</td>\n",
       "      <td>0.441639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2429.000000</td>\n",
       "      <td>0.830070</td>\n",
       "      <td>0.608201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3241.000000</td>\n",
       "      <td>1.463773</td>\n",
       "      <td>1.270284</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                key  Активная мощность  Реактивная мощность\n",
       "count  14876.000000       14876.000000         14876.000000\n",
       "mean    1615.220422           0.662752             0.438986\n",
       "std      934.571502           0.258885             5.873485\n",
       "min        1.000000           0.223120          -715.479924\n",
       "25%      806.000000           0.467115             0.337175\n",
       "50%     1617.000000           0.599587             0.441639\n",
       "75%     2429.000000           0.830070             0.608201\n",
       "max     3241.000000           1.463773             1.270284"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_arc.info()\n",
    "data_arc.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "63db8d96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "key                     1\n",
       "Начало нагрева дугой    1\n",
       "Конец нагрева дугой     1\n",
       "Активная мощность       1\n",
       "Реактивная мощность     1\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_arc[data_arc['Реактивная мощность'] < 0].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "74eca2f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Начало нагрева дугой</th>\n",
       "      <th>Конец нагрева дугой</th>\n",
       "      <th>Активная мощность</th>\n",
       "      <th>Реактивная мощность</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:02:14</td>\n",
       "      <td>2019-05-03 11:06:02</td>\n",
       "      <td>0.305130</td>\n",
       "      <td>0.211253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:07:28</td>\n",
       "      <td>2019-05-03 11:10:33</td>\n",
       "      <td>0.765658</td>\n",
       "      <td>0.477438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:11:44</td>\n",
       "      <td>2019-05-03 11:14:36</td>\n",
       "      <td>0.580313</td>\n",
       "      <td>0.430460</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:18:14</td>\n",
       "      <td>2019-05-03 11:24:19</td>\n",
       "      <td>0.518496</td>\n",
       "      <td>0.379979</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:26:09</td>\n",
       "      <td>2019-05-03 11:28:37</td>\n",
       "      <td>0.867133</td>\n",
       "      <td>0.643691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2</td>\n",
       "      <td>2019-05-03 11:34:14</td>\n",
       "      <td>2019-05-03 11:36:31</td>\n",
       "      <td>0.381124</td>\n",
       "      <td>0.220351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2</td>\n",
       "      <td>2019-05-03 11:38:50</td>\n",
       "      <td>2019-05-03 11:44:28</td>\n",
       "      <td>0.261665</td>\n",
       "      <td>0.205527</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2</td>\n",
       "      <td>2019-05-03 11:46:19</td>\n",
       "      <td>2019-05-03 11:48:25</td>\n",
       "      <td>0.710297</td>\n",
       "      <td>0.484962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>2019-05-03 11:49:48</td>\n",
       "      <td>2019-05-03 11:53:18</td>\n",
       "      <td>0.786322</td>\n",
       "      <td>0.542517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>3</td>\n",
       "      <td>2019-05-03 12:06:54</td>\n",
       "      <td>2019-05-03 12:11:34</td>\n",
       "      <td>1.101678</td>\n",
       "      <td>0.820856</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   key Начало нагрева дугой  Конец нагрева дугой  Активная мощность  \\\n",
       "0    1  2019-05-03 11:02:14  2019-05-03 11:06:02           0.305130   \n",
       "1    1  2019-05-03 11:07:28  2019-05-03 11:10:33           0.765658   \n",
       "2    1  2019-05-03 11:11:44  2019-05-03 11:14:36           0.580313   \n",
       "3    1  2019-05-03 11:18:14  2019-05-03 11:24:19           0.518496   \n",
       "4    1  2019-05-03 11:26:09  2019-05-03 11:28:37           0.867133   \n",
       "5    2  2019-05-03 11:34:14  2019-05-03 11:36:31           0.381124   \n",
       "6    2  2019-05-03 11:38:50  2019-05-03 11:44:28           0.261665   \n",
       "7    2  2019-05-03 11:46:19  2019-05-03 11:48:25           0.710297   \n",
       "8    2  2019-05-03 11:49:48  2019-05-03 11:53:18           0.786322   \n",
       "9    3  2019-05-03 12:06:54  2019-05-03 12:11:34           1.101678   \n",
       "\n",
       "   Реактивная мощность  \n",
       "0             0.211253  \n",
       "1             0.477438  \n",
       "2             0.430460  \n",
       "3             0.379979  \n",
       "4             0.643691  \n",
       "5             0.220351  \n",
       "6             0.205527  \n",
       "7             0.484962  \n",
       "8             0.542517  \n",
       "9             0.820856  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_arc.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6ccaf6fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2108    16\n",
       "1689    15\n",
       "1513    15\n",
       "2567    14\n",
       "46      13\n",
       "        ..\n",
       "977      1\n",
       "247      1\n",
       "2582     1\n",
       "248      1\n",
       "530      1\n",
       "Name: key, Length: 3214, dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_arc['key'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d6097955",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3129 entries, 0 to 3128\n",
      "Data columns (total 16 columns):\n",
      " #   Column   Non-Null Count  Dtype  \n",
      "---  ------   --------------  -----  \n",
      " 0   key      3129 non-null   int64  \n",
      " 1   Bulk 1   252 non-null    float64\n",
      " 2   Bulk 2   22 non-null     float64\n",
      " 3   Bulk 3   1298 non-null   float64\n",
      " 4   Bulk 4   1014 non-null   float64\n",
      " 5   Bulk 5   77 non-null     float64\n",
      " 6   Bulk 6   576 non-null    float64\n",
      " 7   Bulk 7   25 non-null     float64\n",
      " 8   Bulk 8   1 non-null      float64\n",
      " 9   Bulk 9   19 non-null     float64\n",
      " 10  Bulk 10  176 non-null    float64\n",
      " 11  Bulk 11  177 non-null    float64\n",
      " 12  Bulk 12  2450 non-null   float64\n",
      " 13  Bulk 13  18 non-null     float64\n",
      " 14  Bulk 14  2806 non-null   float64\n",
      " 15  Bulk 15  2248 non-null   float64\n",
      "dtypes: float64(15), int64(1)\n",
      "memory usage: 391.2 KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Bulk 1</th>\n",
       "      <th>Bulk 2</th>\n",
       "      <th>Bulk 3</th>\n",
       "      <th>Bulk 4</th>\n",
       "      <th>Bulk 5</th>\n",
       "      <th>Bulk 6</th>\n",
       "      <th>Bulk 7</th>\n",
       "      <th>Bulk 8</th>\n",
       "      <th>Bulk 9</th>\n",
       "      <th>Bulk 10</th>\n",
       "      <th>Bulk 11</th>\n",
       "      <th>Bulk 12</th>\n",
       "      <th>Bulk 13</th>\n",
       "      <th>Bulk 14</th>\n",
       "      <th>Bulk 15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3129.000000</td>\n",
       "      <td>252.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>1298.000000</td>\n",
       "      <td>1014.000000</td>\n",
       "      <td>77.000000</td>\n",
       "      <td>576.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>176.000000</td>\n",
       "      <td>177.000000</td>\n",
       "      <td>2450.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>2806.000000</td>\n",
       "      <td>2248.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1624.383509</td>\n",
       "      <td>39.242063</td>\n",
       "      <td>253.045455</td>\n",
       "      <td>113.879045</td>\n",
       "      <td>104.394477</td>\n",
       "      <td>107.025974</td>\n",
       "      <td>118.925347</td>\n",
       "      <td>305.600000</td>\n",
       "      <td>49.0</td>\n",
       "      <td>76.315789</td>\n",
       "      <td>83.284091</td>\n",
       "      <td>76.819209</td>\n",
       "      <td>260.471020</td>\n",
       "      <td>181.111111</td>\n",
       "      <td>170.284747</td>\n",
       "      <td>160.513345</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>933.337642</td>\n",
       "      <td>18.277654</td>\n",
       "      <td>21.180578</td>\n",
       "      <td>75.483494</td>\n",
       "      <td>48.184126</td>\n",
       "      <td>81.790646</td>\n",
       "      <td>72.057776</td>\n",
       "      <td>191.022904</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21.720581</td>\n",
       "      <td>26.060347</td>\n",
       "      <td>59.655365</td>\n",
       "      <td>120.649269</td>\n",
       "      <td>46.088009</td>\n",
       "      <td>65.868652</td>\n",
       "      <td>51.765319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>228.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>47.000000</td>\n",
       "      <td>49.0</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>151.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>816.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>242.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>69.750000</td>\n",
       "      <td>155.000000</td>\n",
       "      <td>49.0</td>\n",
       "      <td>66.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>204.000000</td>\n",
       "      <td>153.250000</td>\n",
       "      <td>119.000000</td>\n",
       "      <td>105.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1622.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>251.500000</td>\n",
       "      <td>97.500000</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>86.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>298.000000</td>\n",
       "      <td>49.0</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>86.500000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>208.000000</td>\n",
       "      <td>155.500000</td>\n",
       "      <td>151.000000</td>\n",
       "      <td>160.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2431.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>257.750000</td>\n",
       "      <td>152.000000</td>\n",
       "      <td>133.000000</td>\n",
       "      <td>132.000000</td>\n",
       "      <td>157.000000</td>\n",
       "      <td>406.000000</td>\n",
       "      <td>49.0</td>\n",
       "      <td>70.500000</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>106.000000</td>\n",
       "      <td>316.000000</td>\n",
       "      <td>203.500000</td>\n",
       "      <td>205.750000</td>\n",
       "      <td>205.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3241.000000</td>\n",
       "      <td>185.000000</td>\n",
       "      <td>325.000000</td>\n",
       "      <td>454.000000</td>\n",
       "      <td>281.000000</td>\n",
       "      <td>603.000000</td>\n",
       "      <td>503.000000</td>\n",
       "      <td>772.000000</td>\n",
       "      <td>49.0</td>\n",
       "      <td>147.000000</td>\n",
       "      <td>159.000000</td>\n",
       "      <td>313.000000</td>\n",
       "      <td>1849.000000</td>\n",
       "      <td>305.000000</td>\n",
       "      <td>636.000000</td>\n",
       "      <td>405.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               key      Bulk 1      Bulk 2       Bulk 3       Bulk 4  \\\n",
       "count  3129.000000  252.000000   22.000000  1298.000000  1014.000000   \n",
       "mean   1624.383509   39.242063  253.045455   113.879045   104.394477   \n",
       "std     933.337642   18.277654   21.180578    75.483494    48.184126   \n",
       "min       1.000000   10.000000  228.000000     6.000000    12.000000   \n",
       "25%     816.000000   27.000000  242.000000    58.000000    72.000000   \n",
       "50%    1622.000000   31.000000  251.500000    97.500000   102.000000   \n",
       "75%    2431.000000   46.000000  257.750000   152.000000   133.000000   \n",
       "max    3241.000000  185.000000  325.000000   454.000000   281.000000   \n",
       "\n",
       "           Bulk 5      Bulk 6      Bulk 7  Bulk 8      Bulk 9     Bulk 10  \\\n",
       "count   77.000000  576.000000   25.000000     1.0   19.000000  176.000000   \n",
       "mean   107.025974  118.925347  305.600000    49.0   76.315789   83.284091   \n",
       "std     81.790646   72.057776  191.022904     NaN   21.720581   26.060347   \n",
       "min     11.000000   17.000000   47.000000    49.0   63.000000   24.000000   \n",
       "25%     70.000000   69.750000  155.000000    49.0   66.000000   64.000000   \n",
       "50%     86.000000  100.000000  298.000000    49.0   68.000000   86.500000   \n",
       "75%    132.000000  157.000000  406.000000    49.0   70.500000  102.000000   \n",
       "max    603.000000  503.000000  772.000000    49.0  147.000000  159.000000   \n",
       "\n",
       "          Bulk 11      Bulk 12     Bulk 13      Bulk 14      Bulk 15  \n",
       "count  177.000000  2450.000000   18.000000  2806.000000  2248.000000  \n",
       "mean    76.819209   260.471020  181.111111   170.284747   160.513345  \n",
       "std     59.655365   120.649269   46.088009    65.868652    51.765319  \n",
       "min      8.000000    53.000000  151.000000    16.000000     1.000000  \n",
       "25%     25.000000   204.000000  153.250000   119.000000   105.000000  \n",
       "50%     64.000000   208.000000  155.500000   151.000000   160.000000  \n",
       "75%    106.000000   316.000000  203.500000   205.750000   205.000000  \n",
       "max    313.000000  1849.000000  305.000000   636.000000   405.000000  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_bulk.info()\n",
    "data_bulk.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "22e8ee0c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Bulk 1</th>\n",
       "      <th>Bulk 2</th>\n",
       "      <th>Bulk 3</th>\n",
       "      <th>Bulk 4</th>\n",
       "      <th>Bulk 5</th>\n",
       "      <th>Bulk 6</th>\n",
       "      <th>Bulk 7</th>\n",
       "      <th>Bulk 8</th>\n",
       "      <th>Bulk 9</th>\n",
       "      <th>Bulk 10</th>\n",
       "      <th>Bulk 11</th>\n",
       "      <th>Bulk 12</th>\n",
       "      <th>Bulk 13</th>\n",
       "      <th>Bulk 14</th>\n",
       "      <th>Bulk 15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>43.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>206.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>150.0</td>\n",
       "      <td>154.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>73.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>206.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>149.0</td>\n",
       "      <td>154.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>34.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>205.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>152.0</td>\n",
       "      <td>153.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>81.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>207.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>153.0</td>\n",
       "      <td>154.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>78.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>203.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>151.0</td>\n",
       "      <td>152.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>117.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>204.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>201.0</td>\n",
       "      <td>154.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>117.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>204.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>152.0</td>\n",
       "      <td>154.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>99.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>410.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>252.0</td>\n",
       "      <td>153.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>117.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>107.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>99.0</td>\n",
       "      <td>203.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>203.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>102.0</td>\n",
       "      <td>204.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   key  Bulk 1  Bulk 2  Bulk 3  Bulk 4  Bulk 5  Bulk 6  Bulk 7  Bulk 8  \\\n",
       "0    1     NaN     NaN     NaN    43.0     NaN     NaN     NaN     NaN   \n",
       "1    2     NaN     NaN     NaN    73.0     NaN     NaN     NaN     NaN   \n",
       "2    3     NaN     NaN     NaN    34.0     NaN     NaN     NaN     NaN   \n",
       "3    4     NaN     NaN     NaN    81.0     NaN     NaN     NaN     NaN   \n",
       "4    5     NaN     NaN     NaN    78.0     NaN     NaN     NaN     NaN   \n",
       "5    6     NaN     NaN     NaN   117.0     NaN     NaN     NaN     NaN   \n",
       "6    7     NaN     NaN     NaN   117.0     NaN     NaN     NaN     NaN   \n",
       "7    8     NaN     NaN     NaN    99.0     NaN     NaN     NaN     NaN   \n",
       "8    9     NaN     NaN     NaN   117.0     NaN     NaN     NaN     NaN   \n",
       "9   10     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n",
       "\n",
       "   Bulk 9  Bulk 10  Bulk 11  Bulk 12  Bulk 13  Bulk 14  Bulk 15  \n",
       "0     NaN      NaN      NaN    206.0      NaN    150.0    154.0  \n",
       "1     NaN      NaN      NaN    206.0      NaN    149.0    154.0  \n",
       "2     NaN      NaN      NaN    205.0      NaN    152.0    153.0  \n",
       "3     NaN      NaN      NaN    207.0      NaN    153.0    154.0  \n",
       "4     NaN      NaN      NaN    203.0      NaN    151.0    152.0  \n",
       "5     NaN      NaN      NaN    204.0      NaN    201.0    154.0  \n",
       "6     NaN      NaN      NaN    204.0      NaN    152.0    154.0  \n",
       "7     NaN      NaN      NaN    410.0      NaN    252.0    153.0  \n",
       "8     NaN      NaN      NaN    107.0      NaN     99.0    203.0  \n",
       "9     NaN      NaN      NaN    203.0      NaN    102.0    204.0  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_bulk.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "9e3932db",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3129 entries, 0 to 3128\n",
      "Data columns (total 16 columns):\n",
      " #   Column   Non-Null Count  Dtype \n",
      "---  ------   --------------  ----- \n",
      " 0   key      3129 non-null   int64 \n",
      " 1   Bulk 1   252 non-null    object\n",
      " 2   Bulk 2   22 non-null     object\n",
      " 3   Bulk 3   1298 non-null   object\n",
      " 4   Bulk 4   1014 non-null   object\n",
      " 5   Bulk 5   77 non-null     object\n",
      " 6   Bulk 6   576 non-null    object\n",
      " 7   Bulk 7   25 non-null     object\n",
      " 8   Bulk 8   1 non-null      object\n",
      " 9   Bulk 9   19 non-null     object\n",
      " 10  Bulk 10  176 non-null    object\n",
      " 11  Bulk 11  177 non-null    object\n",
      " 12  Bulk 12  2450 non-null   object\n",
      " 13  Bulk 13  18 non-null     object\n",
      " 14  Bulk 14  2806 non-null   object\n",
      " 15  Bulk 15  2248 non-null   object\n",
      "dtypes: int64(1), object(15)\n",
      "memory usage: 391.2+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3129.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1624.383509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>933.337642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>816.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1622.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2431.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3241.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               key\n",
       "count  3129.000000\n",
       "mean   1624.383509\n",
       "std     933.337642\n",
       "min       1.000000\n",
       "25%     816.000000\n",
       "50%    1622.000000\n",
       "75%    2431.000000\n",
       "max    3241.000000"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_bulk_time.info()\n",
    "data_bulk_time.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a602c6a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Bulk 1</th>\n",
       "      <th>Bulk 2</th>\n",
       "      <th>Bulk 3</th>\n",
       "      <th>Bulk 4</th>\n",
       "      <th>Bulk 5</th>\n",
       "      <th>Bulk 6</th>\n",
       "      <th>Bulk 7</th>\n",
       "      <th>Bulk 8</th>\n",
       "      <th>Bulk 9</th>\n",
       "      <th>Bulk 10</th>\n",
       "      <th>Bulk 11</th>\n",
       "      <th>Bulk 12</th>\n",
       "      <th>Bulk 13</th>\n",
       "      <th>Bulk 14</th>\n",
       "      <th>Bulk 15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 11:28:48</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 11:24:31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 11:14:50</td>\n",
       "      <td>2019-05-03 11:10:43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 11:36:50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 11:53:30</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 11:48:37</td>\n",
       "      <td>2019-05-03 11:44:39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 12:32:39</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 12:27:13</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 12:21:01</td>\n",
       "      <td>2019-05-03 12:16:16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 12:43:22</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 12:58:00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 12:51:11</td>\n",
       "      <td>2019-05-03 12:46:36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 13:30:47</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 13:30:47</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 13:34:12</td>\n",
       "      <td>2019-05-03 13:30:47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 13:57:27</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 13:48:52</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 14:09:42</td>\n",
       "      <td>2019-05-03 14:03:15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 14:18:58</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 14:41:26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 14:30:50</td>\n",
       "      <td>2019-05-03 14:27:16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 15:17:58</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 15:17:58</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 15:13:18</td>\n",
       "      <td>2019-05-03 15:05:33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 16:03:08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 16:03:08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 16:00:16</td>\n",
       "      <td>2019-05-03 15:52:39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 16:38:11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-05-03 16:34:24</td>\n",
       "      <td>2019-05-03 16:29:56</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   key Bulk 1 Bulk 2 Bulk 3               Bulk 4 Bulk 5 Bulk 6 Bulk 7 Bulk 8  \\\n",
       "0    1    NaN    NaN    NaN  2019-05-03 11:28:48    NaN    NaN    NaN    NaN   \n",
       "1    2    NaN    NaN    NaN  2019-05-03 11:36:50    NaN    NaN    NaN    NaN   \n",
       "2    3    NaN    NaN    NaN  2019-05-03 12:32:39    NaN    NaN    NaN    NaN   \n",
       "3    4    NaN    NaN    NaN  2019-05-03 12:43:22    NaN    NaN    NaN    NaN   \n",
       "4    5    NaN    NaN    NaN  2019-05-03 13:30:47    NaN    NaN    NaN    NaN   \n",
       "5    6    NaN    NaN    NaN  2019-05-03 13:57:27    NaN    NaN    NaN    NaN   \n",
       "6    7    NaN    NaN    NaN  2019-05-03 14:18:58    NaN    NaN    NaN    NaN   \n",
       "7    8    NaN    NaN    NaN  2019-05-03 15:17:58    NaN    NaN    NaN    NaN   \n",
       "8    9    NaN    NaN    NaN  2019-05-03 16:03:08    NaN    NaN    NaN    NaN   \n",
       "9   10    NaN    NaN    NaN                  NaN    NaN    NaN    NaN    NaN   \n",
       "\n",
       "  Bulk 9 Bulk 10 Bulk 11              Bulk 12 Bulk 13              Bulk 14  \\\n",
       "0    NaN     NaN     NaN  2019-05-03 11:24:31     NaN  2019-05-03 11:14:50   \n",
       "1    NaN     NaN     NaN  2019-05-03 11:53:30     NaN  2019-05-03 11:48:37   \n",
       "2    NaN     NaN     NaN  2019-05-03 12:27:13     NaN  2019-05-03 12:21:01   \n",
       "3    NaN     NaN     NaN  2019-05-03 12:58:00     NaN  2019-05-03 12:51:11   \n",
       "4    NaN     NaN     NaN  2019-05-03 13:30:47     NaN  2019-05-03 13:34:12   \n",
       "5    NaN     NaN     NaN  2019-05-03 13:48:52     NaN  2019-05-03 14:09:42   \n",
       "6    NaN     NaN     NaN  2019-05-03 14:41:26     NaN  2019-05-03 14:30:50   \n",
       "7    NaN     NaN     NaN  2019-05-03 15:17:58     NaN  2019-05-03 15:13:18   \n",
       "8    NaN     NaN     NaN  2019-05-03 16:03:08     NaN  2019-05-03 16:00:16   \n",
       "9    NaN     NaN     NaN  2019-05-03 16:38:11     NaN  2019-05-03 16:34:24   \n",
       "\n",
       "               Bulk 15  \n",
       "0  2019-05-03 11:10:43  \n",
       "1  2019-05-03 11:44:39  \n",
       "2  2019-05-03 12:16:16  \n",
       "3  2019-05-03 12:46:36  \n",
       "4  2019-05-03 13:30:47  \n",
       "5  2019-05-03 14:03:15  \n",
       "6  2019-05-03 14:27:16  \n",
       "7  2019-05-03 15:05:33  \n",
       "8  2019-05-03 15:52:39  \n",
       "9  2019-05-03 16:29:56  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_bulk_time.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "dd64c7a8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 18092 entries, 0 to 18091\n",
      "Data columns (total 3 columns):\n",
      " #   Column        Non-Null Count  Dtype  \n",
      "---  ------        --------------  -----  \n",
      " 0   key           18092 non-null  int64  \n",
      " 1   Время замера  18092 non-null  object \n",
      " 2   Температура   14665 non-null  float64\n",
      "dtypes: float64(1), int64(1), object(1)\n",
      "memory usage: 424.2+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Температура</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>18092.000000</td>\n",
       "      <td>14665.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1616.460977</td>\n",
       "      <td>1590.722741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>934.641385</td>\n",
       "      <td>20.394381</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1191.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>807.750000</td>\n",
       "      <td>1580.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1618.000000</td>\n",
       "      <td>1590.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2429.000000</td>\n",
       "      <td>1599.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3241.000000</td>\n",
       "      <td>1705.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                key   Температура\n",
       "count  18092.000000  14665.000000\n",
       "mean    1616.460977   1590.722741\n",
       "std      934.641385     20.394381\n",
       "min        1.000000   1191.000000\n",
       "25%      807.750000   1580.000000\n",
       "50%     1618.000000   1590.000000\n",
       "75%     2429.000000   1599.000000\n",
       "max     3241.000000   1705.000000"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_temp.info()\n",
    "data_temp.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c4a9a8c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Время замера</th>\n",
       "      <th>Температура</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:02:04</td>\n",
       "      <td>1571.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:07:18</td>\n",
       "      <td>1604.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:11:34</td>\n",
       "      <td>1618.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:18:04</td>\n",
       "      <td>1601.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:25:59</td>\n",
       "      <td>1606.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:30:38</td>\n",
       "      <td>1613.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2</td>\n",
       "      <td>2019-05-03 11:34:04</td>\n",
       "      <td>1581.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2</td>\n",
       "      <td>2019-05-03 11:38:40</td>\n",
       "      <td>1577.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>2019-05-03 11:46:09</td>\n",
       "      <td>1589.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2</td>\n",
       "      <td>2019-05-03 11:49:38</td>\n",
       "      <td>1604.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   key         Время замера  Температура\n",
       "0    1  2019-05-03 11:02:04       1571.0\n",
       "1    1  2019-05-03 11:07:18       1604.0\n",
       "2    1  2019-05-03 11:11:34       1618.0\n",
       "3    1  2019-05-03 11:18:04       1601.0\n",
       "4    1  2019-05-03 11:25:59       1606.0\n",
       "5    1  2019-05-03 11:30:38       1613.0\n",
       "6    2  2019-05-03 11:34:04       1581.0\n",
       "7    2  2019-05-03 11:38:40       1577.0\n",
       "8    2  2019-05-03 11:46:09       1589.0\n",
       "9    2  2019-05-03 11:49:38       1604.0"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_temp.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "dcdd6e49",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_temp['Температура'].hist(bins=100);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4928324f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "key                0\n",
       "Время замера       0\n",
       "Температура     3427\n",
       "dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_temp.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "40e0b27f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "key             5\n",
       "Время замера    5\n",
       "Температура     5\n",
       "dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_temp[data_temp['Температура'] < 1500].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "86a3dfc1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3239 entries, 0 to 3238\n",
      "Data columns (total 2 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   key     3239 non-null   int64  \n",
      " 1   Газ 1   3239 non-null   float64\n",
      "dtypes: float64(1), int64(1)\n",
      "memory usage: 50.7 KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Газ 1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>29.749986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>12.555561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>28.554793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>18.841219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>5.413692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>11.273392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>9.836267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>15.171553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>8.216623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>6.529891</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   key      Газ 1\n",
       "0    1  29.749986\n",
       "1    2  12.555561\n",
       "2    3  28.554793\n",
       "3    4  18.841219\n",
       "4    5   5.413692\n",
       "5    6  11.273392\n",
       "6    7   9.836267\n",
       "7    8  15.171553\n",
       "8    9   8.216623\n",
       "9   10   6.529891"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_gas.info()\n",
    "data_gas.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "9213ad07",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3081 entries, 0 to 3080\n",
      "Data columns (total 10 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   key     3081 non-null   int64  \n",
      " 1   Wire 1  3055 non-null   float64\n",
      " 2   Wire 2  1079 non-null   float64\n",
      " 3   Wire 3  63 non-null     float64\n",
      " 4   Wire 4  14 non-null     float64\n",
      " 5   Wire 5  1 non-null      float64\n",
      " 6   Wire 6  73 non-null     float64\n",
      " 7   Wire 7  11 non-null     float64\n",
      " 8   Wire 8  19 non-null     float64\n",
      " 9   Wire 9  29 non-null     float64\n",
      "dtypes: float64(9), int64(1)\n",
      "memory usage: 240.8 KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Wire 1</th>\n",
       "      <th>Wire 2</th>\n",
       "      <th>Wire 3</th>\n",
       "      <th>Wire 4</th>\n",
       "      <th>Wire 5</th>\n",
       "      <th>Wire 6</th>\n",
       "      <th>Wire 7</th>\n",
       "      <th>Wire 8</th>\n",
       "      <th>Wire 9</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>60.059998</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>96.052315</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>91.160157</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>89.063515</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>89.238236</td>\n",
       "      <td>9.114560</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>99.109917</td>\n",
       "      <td>9.114560</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>98.061600</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>155.282394</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>113.393279</td>\n",
       "      <td>9.143681</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>81.244796</td>\n",
       "      <td>12.376000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   key      Wire 1     Wire 2  Wire 3  Wire 4  Wire 5  Wire 6  Wire 7  Wire 8  \\\n",
       "0    1   60.059998        NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n",
       "1    2   96.052315        NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n",
       "2    3   91.160157        NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n",
       "3    4   89.063515        NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n",
       "4    5   89.238236   9.114560     NaN     NaN     NaN     NaN     NaN     NaN   \n",
       "5    6   99.109917   9.114560     NaN     NaN     NaN     NaN     NaN     NaN   \n",
       "6    7   98.061600        NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n",
       "7    8  155.282394        NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n",
       "8    9  113.393279   9.143681     NaN     NaN     NaN     NaN     NaN     NaN   \n",
       "9   10   81.244796  12.376000     NaN     NaN     NaN     NaN     NaN     NaN   \n",
       "\n",
       "   Wire 9  \n",
       "0     NaN  \n",
       "1     NaN  \n",
       "2     NaN  \n",
       "3     NaN  \n",
       "4     NaN  \n",
       "5     NaN  \n",
       "6     NaN  \n",
       "7     NaN  \n",
       "8     NaN  \n",
       "9     NaN  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_wire.info()\n",
    "data_wire.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "600fed11",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3081 entries, 0 to 3080\n",
      "Data columns (total 10 columns):\n",
      " #   Column  Non-Null Count  Dtype \n",
      "---  ------  --------------  ----- \n",
      " 0   key     3081 non-null   int64 \n",
      " 1   Wire 1  3055 non-null   object\n",
      " 2   Wire 2  1079 non-null   object\n",
      " 3   Wire 3  63 non-null     object\n",
      " 4   Wire 4  14 non-null     object\n",
      " 5   Wire 5  1 non-null      object\n",
      " 6   Wire 6  73 non-null     object\n",
      " 7   Wire 7  11 non-null     object\n",
      " 8   Wire 8  19 non-null     object\n",
      " 9   Wire 9  29 non-null     object\n",
      "dtypes: int64(1), object(9)\n",
      "memory usage: 240.8+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Wire 1</th>\n",
       "      <th>Wire 2</th>\n",
       "      <th>Wire 3</th>\n",
       "      <th>Wire 4</th>\n",
       "      <th>Wire 5</th>\n",
       "      <th>Wire 6</th>\n",
       "      <th>Wire 7</th>\n",
       "      <th>Wire 8</th>\n",
       "      <th>Wire 9</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:06:19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2019-05-03 11:36:50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2019-05-03 12:11:46</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2019-05-03 12:43:22</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2019-05-03 13:20:44</td>\n",
       "      <td>2019-05-03 13:15:34</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>2019-05-03 13:57:27</td>\n",
       "      <td>2019-05-03 13:48:52</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>2019-05-03 14:18:58</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>2019-05-03 15:01:30</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>2019-05-03 15:45:44</td>\n",
       "      <td>2019-05-03 15:39:37</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>2019-05-03 16:27:00</td>\n",
       "      <td>2019-05-03 16:22:36</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   key               Wire 1               Wire 2 Wire 3 Wire 4 Wire 5 Wire 6  \\\n",
       "0    1  2019-05-03 11:06:19                  NaN    NaN    NaN    NaN    NaN   \n",
       "1    2  2019-05-03 11:36:50                  NaN    NaN    NaN    NaN    NaN   \n",
       "2    3  2019-05-03 12:11:46                  NaN    NaN    NaN    NaN    NaN   \n",
       "3    4  2019-05-03 12:43:22                  NaN    NaN    NaN    NaN    NaN   \n",
       "4    5  2019-05-03 13:20:44  2019-05-03 13:15:34    NaN    NaN    NaN    NaN   \n",
       "5    6  2019-05-03 13:57:27  2019-05-03 13:48:52    NaN    NaN    NaN    NaN   \n",
       "6    7  2019-05-03 14:18:58                  NaN    NaN    NaN    NaN    NaN   \n",
       "7    8  2019-05-03 15:01:30                  NaN    NaN    NaN    NaN    NaN   \n",
       "8    9  2019-05-03 15:45:44  2019-05-03 15:39:37    NaN    NaN    NaN    NaN   \n",
       "9   10  2019-05-03 16:27:00  2019-05-03 16:22:36    NaN    NaN    NaN    NaN   \n",
       "\n",
       "  Wire 7 Wire 8 Wire 9  \n",
       "0    NaN    NaN    NaN  \n",
       "1    NaN    NaN    NaN  \n",
       "2    NaN    NaN    NaN  \n",
       "3    NaN    NaN    NaN  \n",
       "4    NaN    NaN    NaN  \n",
       "5    NaN    NaN    NaN  \n",
       "6    NaN    NaN    NaN  \n",
       "7    NaN    NaN    NaN  \n",
       "8    NaN    NaN    NaN  \n",
       "9    NaN    NaN    NaN  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_wire_time.info()\n",
    "data_wire_time.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7b0c2d8",
   "metadata": {},
   "source": [
    "### Вывод\n",
    "- data_arc — данные об электродах. Есть отрицательное значение в реактивной мощности - весь ключ надо удалить. Данные по ключам необходимо объединить и агрегировать (суммированием).\n",
    "- data_bulk — данные о подаче сыпучих материалов (объём), также\n",
    "- data_bulk_time — данные о подаче сыпучих материалов (время), также\n",
    "- data_wire — данные о проволочных материалах (объём), также\n",
    "- data_wire_time — данные о проволочных материалах (время). Есть пропуски, заполним их нулями. Таблицы с временем подачи в итоговую таблицу не пойдут.\n",
    "- data_gas — данные о продувке сплава газом, также\n",
    "- data_temp — результаты измерения температуры. Есть температуры менее 1500 (5 наблюдений), эти ключи удаляем. В некоторых ковшах замеры делали несколько раз - данные надо агрегировать (получить среднее).\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7808a9a",
   "metadata": {},
   "source": [
    "## Предобработка данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "dcf917d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Начало нагрева дугой</th>\n",
       "      <th>Конец нагрева дугой</th>\n",
       "      <th>Активная мощность</th>\n",
       "      <th>Реактивная мощность</th>\n",
       "      <th>Продолжительность нагрева дугой, сек</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:02:14</td>\n",
       "      <td>2019-05-03 11:06:02</td>\n",
       "      <td>0.305130</td>\n",
       "      <td>0.211253</td>\n",
       "      <td>228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:07:28</td>\n",
       "      <td>2019-05-03 11:10:33</td>\n",
       "      <td>0.765658</td>\n",
       "      <td>0.477438</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:11:44</td>\n",
       "      <td>2019-05-03 11:14:36</td>\n",
       "      <td>0.580313</td>\n",
       "      <td>0.430460</td>\n",
       "      <td>172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:18:14</td>\n",
       "      <td>2019-05-03 11:24:19</td>\n",
       "      <td>0.518496</td>\n",
       "      <td>0.379979</td>\n",
       "      <td>365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2019-05-03 11:26:09</td>\n",
       "      <td>2019-05-03 11:28:37</td>\n",
       "      <td>0.867133</td>\n",
       "      <td>0.643691</td>\n",
       "      <td>148</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   key Начало нагрева дугой Конец нагрева дугой  Активная мощность  \\\n",
       "0    1  2019-05-03 11:02:14 2019-05-03 11:06:02           0.305130   \n",
       "1    1  2019-05-03 11:07:28 2019-05-03 11:10:33           0.765658   \n",
       "2    1  2019-05-03 11:11:44 2019-05-03 11:14:36           0.580313   \n",
       "3    1  2019-05-03 11:18:14 2019-05-03 11:24:19           0.518496   \n",
       "4    1  2019-05-03 11:26:09 2019-05-03 11:28:37           0.867133   \n",
       "\n",
       "   Реактивная мощность  Продолжительность нагрева дугой, сек  \n",
       "0             0.211253                                   228  \n",
       "1             0.477438                                   185  \n",
       "2             0.430460                                   172  \n",
       "3             0.379979                                   365  \n",
       "4             0.643691                                   148  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_arc = data_arc[data_arc['Реактивная мощность'] > 0]\n",
    "data_arc['Начало нагрева дугой'] = pd.to_datetime(data_arc['Начало нагрева дугой'])\n",
    "data_arc['Конец нагрева дугой'] = pd.to_datetime(data_arc['Конец нагрева дугой'])\n",
    "data_arc['Продолжительность нагрева дугой, сек'] = (data_arc['Конец нагрева дугой'] - data_arc['Начало нагрева дугой']) // pd.Timedelta('1s')\n",
    "\n",
    "data_arc.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "257128f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Активная мощность</th>\n",
       "      <th>Реактивная мощность</th>\n",
       "      <th>Продолжительность нагрева дугой, сек</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>3.036730</td>\n",
       "      <td>2.142821</td>\n",
       "      <td>1098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2.139408</td>\n",
       "      <td>1.453357</td>\n",
       "      <td>811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>4.063641</td>\n",
       "      <td>2.937457</td>\n",
       "      <td>655</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2.706489</td>\n",
       "      <td>2.056992</td>\n",
       "      <td>741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2.252950</td>\n",
       "      <td>1.687991</td>\n",
       "      <td>869</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>2.725274</td>\n",
       "      <td>1.881313</td>\n",
       "      <td>952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>2.626877</td>\n",
       "      <td>1.960419</td>\n",
       "      <td>673</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>2.678958</td>\n",
       "      <td>2.096952</td>\n",
       "      <td>913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>3.520820</td>\n",
       "      <td>2.527365</td>\n",
       "      <td>625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>3.118778</td>\n",
       "      <td>2.154941</td>\n",
       "      <td>825</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   key  Активная мощность  Реактивная мощность  \\\n",
       "0    1           3.036730             2.142821   \n",
       "1    2           2.139408             1.453357   \n",
       "2    3           4.063641             2.937457   \n",
       "3    4           2.706489             2.056992   \n",
       "4    5           2.252950             1.687991   \n",
       "5    6           2.725274             1.881313   \n",
       "6    7           2.626877             1.960419   \n",
       "7    8           2.678958             2.096952   \n",
       "8    9           3.520820             2.527365   \n",
       "9   10           3.118778             2.154941   \n",
       "\n",
       "   Продолжительность нагрева дугой, сек  \n",
       "0                                  1098  \n",
       "1                                   811  \n",
       "2                                   655  \n",
       "3                                   741  \n",
       "4                                   869  \n",
       "5                                   952  \n",
       "6                                   673  \n",
       "7                                   913  \n",
       "8                                   625  \n",
       "9                                   825  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_arc = data_arc.groupby(by='key', as_index=False).sum()\n",
    "data_arc.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c55e39d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9925176234568434"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_arc['Активная мощность'].corr(data_arc['Реактивная мощность'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f1b7121d",
   "metadata": {},
   "source": [
    "Корреляция очень высокая, поэтому объединим колонки в одну новую, а старые удалим"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "1269fdaf",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_arc['Полная мощность'] = np.sqrt(data_arc['Активная мощность'] ** 2 + data_arc['Реактивная мощность'] ** 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "cdce2a3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Полная мощность</th>\n",
       "      <th>Продолжительность нагрева дугой, сек</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>3.716640</td>\n",
       "      <td>1098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2.586371</td>\n",
       "      <td>811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>5.014163</td>\n",
       "      <td>655</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>3.399456</td>\n",
       "      <td>741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2.815155</td>\n",
       "      <td>869</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>3.311564</td>\n",
       "      <td>952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>3.277762</td>\n",
       "      <td>673</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>3.402062</td>\n",
       "      <td>913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>4.334022</td>\n",
       "      <td>625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>3.790850</td>\n",
       "      <td>825</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   key  Полная мощность  Продолжительность нагрева дугой, сек\n",
       "0    1         3.716640                                  1098\n",
       "1    2         2.586371                                   811\n",
       "2    3         5.014163                                   655\n",
       "3    4         3.399456                                   741\n",
       "4    5         2.815155                                   869\n",
       "5    6         3.311564                                   952\n",
       "6    7         3.277762                                   673\n",
       "7    8         3.402062                                   913\n",
       "8    9         4.334022                                   625\n",
       "9   10         3.790850                                   825"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_arc = data_arc[['key', 'Полная мощность', 'Продолжительность нагрева дугой, сек']]\n",
    "data_arc.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "92a7c73f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15, 5))\n",
    "fig = sns.kdeplot(data_arc['Полная мощность'])\n",
    "plt.title('Полная мощность');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "64852a13",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_bulk = data_bulk.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "98ac2b31",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Wire 1</th>\n",
       "      <th>Wire 2</th>\n",
       "      <th>Wire 3</th>\n",
       "      <th>Wire 4</th>\n",
       "      <th>Wire 5</th>\n",
       "      <th>Wire 6</th>\n",
       "      <th>Wire 7</th>\n",
       "      <th>Wire 8</th>\n",
       "      <th>Wire 9</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>60.059998</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>96.052315</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>91.160157</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>89.063515</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>89.238236</td>\n",
       "      <td>9.11456</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3076</th>\n",
       "      <td>3237</td>\n",
       "      <td>38.088959</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3077</th>\n",
       "      <td>3238</td>\n",
       "      <td>56.128799</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3078</th>\n",
       "      <td>3239</td>\n",
       "      <td>143.357761</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3079</th>\n",
       "      <td>3240</td>\n",
       "      <td>34.070400</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3080</th>\n",
       "      <td>3241</td>\n",
       "      <td>63.117595</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3081 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       key      Wire 1   Wire 2  Wire 3  Wire 4  Wire 5  Wire 6  Wire 7  \\\n",
       "0        1   60.059998  0.00000     0.0     0.0     0.0     0.0     0.0   \n",
       "1        2   96.052315  0.00000     0.0     0.0     0.0     0.0     0.0   \n",
       "2        3   91.160157  0.00000     0.0     0.0     0.0     0.0     0.0   \n",
       "3        4   89.063515  0.00000     0.0     0.0     0.0     0.0     0.0   \n",
       "4        5   89.238236  9.11456     0.0     0.0     0.0     0.0     0.0   \n",
       "...    ...         ...      ...     ...     ...     ...     ...     ...   \n",
       "3076  3237   38.088959  0.00000     0.0     0.0     0.0     0.0     0.0   \n",
       "3077  3238   56.128799  0.00000     0.0     0.0     0.0     0.0     0.0   \n",
       "3078  3239  143.357761  0.00000     0.0     0.0     0.0     0.0     0.0   \n",
       "3079  3240   34.070400  0.00000     0.0     0.0     0.0     0.0     0.0   \n",
       "3080  3241   63.117595  0.00000     0.0     0.0     0.0     0.0     0.0   \n",
       "\n",
       "      Wire 8  Wire 9  \n",
       "0        0.0     0.0  \n",
       "1        0.0     0.0  \n",
       "2        0.0     0.0  \n",
       "3        0.0     0.0  \n",
       "4        0.0     0.0  \n",
       "...      ...     ...  \n",
       "3076     0.0     0.0  \n",
       "3077     0.0     0.0  \n",
       "3078     0.0     0.0  \n",
       "3079     0.0     0.0  \n",
       "3080     0.0     0.0  \n",
       "\n",
       "[3081 rows x 10 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_wire = data_wire.fillna(0)\n",
    "data_wire"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "0a33a06d",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_temp = data_temp[data_temp['Температура'] >= 1500]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "eabb4a84",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Начальная температура</th>\n",
       "      <th>Конечная температура</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3215.000000</td>\n",
       "      <td>3215.000000</td>\n",
       "      <td>3215.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1621.907309</td>\n",
       "      <td>1589.195023</td>\n",
       "      <td>1594.049767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>935.087320</td>\n",
       "      <td>25.015034</td>\n",
       "      <td>18.649454</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1519.000000</td>\n",
       "      <td>1529.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>815.500000</td>\n",
       "      <td>1572.000000</td>\n",
       "      <td>1585.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1622.000000</td>\n",
       "      <td>1588.000000</td>\n",
       "      <td>1593.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2430.500000</td>\n",
       "      <td>1606.000000</td>\n",
       "      <td>1600.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3241.000000</td>\n",
       "      <td>1684.000000</td>\n",
       "      <td>1700.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               key  Начальная температура  Конечная температура\n",
       "count  3215.000000            3215.000000           3215.000000\n",
       "mean   1621.907309            1589.195023           1594.049767\n",
       "std     935.087320              25.015034             18.649454\n",
       "min       1.000000            1519.000000           1529.000000\n",
       "25%     815.500000            1572.000000           1585.000000\n",
       "50%    1622.000000            1588.000000           1593.000000\n",
       "75%    2430.500000            1606.000000           1600.000000\n",
       "max    3241.000000            1684.000000           1700.000000"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_temp = data_temp.groupby(by = 'key').agg(['first', 'last']).reset_index()\n",
    "data_temp.columns = data_temp.columns.droplevel()\n",
    "data_temp.columns = ['key', 'Первый замер', 'Последний замер', 'Начальная температура', 'Конечная температура']\n",
    "data_temp = data_temp[['key', 'Начальная температура', 'Конечная температура']]\n",
    "data_temp.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "fc3666bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Начальная температура</th>\n",
       "      <th>Конечная температура</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1571.0</td>\n",
       "      <td>1613.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1581.0</td>\n",
       "      <td>1602.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1596.0</td>\n",
       "      <td>1599.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1601.0</td>\n",
       "      <td>1625.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>1576.0</td>\n",
       "      <td>1602.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>1543.0</td>\n",
       "      <td>1596.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>1586.0</td>\n",
       "      <td>1599.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>1577.0</td>\n",
       "      <td>1598.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>1587.0</td>\n",
       "      <td>1592.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>1574.0</td>\n",
       "      <td>1593.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   key  Начальная температура  Конечная температура\n",
       "0    1                 1571.0                1613.0\n",
       "1    2                 1581.0                1602.0\n",
       "2    3                 1596.0                1599.0\n",
       "3    4                 1601.0                1625.0\n",
       "4    5                 1576.0                1602.0\n",
       "5    6                 1543.0                1596.0\n",
       "6    7                 1586.0                1599.0\n",
       "7    8                 1577.0                1598.0\n",
       "8    9                 1587.0                1592.0\n",
       "9   10                 1574.0                1593.0"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_temp.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "4fd9f260",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = (data_temp.merge(data_arc, how='inner', on = 'key').merge(data_wire, how='inner', on = 'key').merge(data_bulk, how='inner', on = 'key').merge(data_gas, how='inner', on='key'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "9c1310c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Начальная температура</th>\n",
       "      <th>Конечная температура</th>\n",
       "      <th>Полная мощность</th>\n",
       "      <th>Продолжительность нагрева дугой, сек</th>\n",
       "      <th>Wire 1</th>\n",
       "      <th>Wire 2</th>\n",
       "      <th>Wire 3</th>\n",
       "      <th>Wire 4</th>\n",
       "      <th>Wire 5</th>\n",
       "      <th>...</th>\n",
       "      <th>Bulk 7</th>\n",
       "      <th>Bulk 8</th>\n",
       "      <th>Bulk 9</th>\n",
       "      <th>Bulk 10</th>\n",
       "      <th>Bulk 11</th>\n",
       "      <th>Bulk 12</th>\n",
       "      <th>Bulk 13</th>\n",
       "      <th>Bulk 14</th>\n",
       "      <th>Bulk 15</th>\n",
       "      <th>Газ 1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1571.0</td>\n",
       "      <td>1613.0</td>\n",
       "      <td>3.716640</td>\n",
       "      <td>1098</td>\n",
       "      <td>60.059998</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>206.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>154.0</td>\n",
       "      <td>29.749986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1581.0</td>\n",
       "      <td>1602.0</td>\n",
       "      <td>2.586371</td>\n",
       "      <td>811</td>\n",
       "      <td>96.052315</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>206.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>149.0</td>\n",
       "      <td>154.0</td>\n",
       "      <td>12.555561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1596.0</td>\n",
       "      <td>1599.0</td>\n",
       "      <td>5.014163</td>\n",
       "      <td>655</td>\n",
       "      <td>91.160157</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>205.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>153.0</td>\n",
       "      <td>28.554793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1601.0</td>\n",
       "      <td>1625.0</td>\n",
       "      <td>3.399456</td>\n",
       "      <td>741</td>\n",
       "      <td>89.063515</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>207.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>153.0</td>\n",
       "      <td>154.0</td>\n",
       "      <td>18.841219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>1576.0</td>\n",
       "      <td>1602.0</td>\n",
       "      <td>2.815155</td>\n",
       "      <td>869</td>\n",
       "      <td>89.238236</td>\n",
       "      <td>9.114560</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>203.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>151.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>5.413692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>1543.0</td>\n",
       "      <td>1596.0</td>\n",
       "      <td>3.311564</td>\n",
       "      <td>952</td>\n",
       "      <td>99.109917</td>\n",
       "      <td>9.114560</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>204.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>201.0</td>\n",
       "      <td>154.0</td>\n",
       "      <td>11.273392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>1586.0</td>\n",
       "      <td>1599.0</td>\n",
       "      <td>3.277762</td>\n",
       "      <td>673</td>\n",
       "      <td>98.061600</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>204.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>154.0</td>\n",
       "      <td>9.836267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>1577.0</td>\n",
       "      <td>1598.0</td>\n",
       "      <td>3.402062</td>\n",
       "      <td>913</td>\n",
       "      <td>155.282394</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>410.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>252.0</td>\n",
       "      <td>153.0</td>\n",
       "      <td>15.171553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>1587.0</td>\n",
       "      <td>1592.0</td>\n",
       "      <td>4.334022</td>\n",
       "      <td>625</td>\n",
       "      <td>113.393279</td>\n",
       "      <td>9.143681</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>107.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>203.0</td>\n",
       "      <td>8.216623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>1574.0</td>\n",
       "      <td>1593.0</td>\n",
       "      <td>3.790850</td>\n",
       "      <td>825</td>\n",
       "      <td>81.244796</td>\n",
       "      <td>12.376000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>203.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>102.0</td>\n",
       "      <td>204.0</td>\n",
       "      <td>6.529891</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   key  Начальная температура  Конечная температура  Полная мощность  \\\n",
       "0    1                 1571.0                1613.0         3.716640   \n",
       "1    2                 1581.0                1602.0         2.586371   \n",
       "2    3                 1596.0                1599.0         5.014163   \n",
       "3    4                 1601.0                1625.0         3.399456   \n",
       "4    5                 1576.0                1602.0         2.815155   \n",
       "5    6                 1543.0                1596.0         3.311564   \n",
       "6    7                 1586.0                1599.0         3.277762   \n",
       "7    8                 1577.0                1598.0         3.402062   \n",
       "8    9                 1587.0                1592.0         4.334022   \n",
       "9   10                 1574.0                1593.0         3.790850   \n",
       "\n",
       "   Продолжительность нагрева дугой, сек      Wire 1     Wire 2  Wire 3  \\\n",
       "0                                  1098   60.059998   0.000000     0.0   \n",
       "1                                   811   96.052315   0.000000     0.0   \n",
       "2                                   655   91.160157   0.000000     0.0   \n",
       "3                                   741   89.063515   0.000000     0.0   \n",
       "4                                   869   89.238236   9.114560     0.0   \n",
       "5                                   952   99.109917   9.114560     0.0   \n",
       "6                                   673   98.061600   0.000000     0.0   \n",
       "7                                   913  155.282394   0.000000     0.0   \n",
       "8                                   625  113.393279   9.143681     0.0   \n",
       "9                                   825   81.244796  12.376000     0.0   \n",
       "\n",
       "   Wire 4  Wire 5  ...  Bulk 7  Bulk 8  Bulk 9  Bulk 10  Bulk 11  Bulk 12  \\\n",
       "0     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    206.0   \n",
       "1     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    206.0   \n",
       "2     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    205.0   \n",
       "3     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    207.0   \n",
       "4     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    203.0   \n",
       "5     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    204.0   \n",
       "6     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    204.0   \n",
       "7     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    410.0   \n",
       "8     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    107.0   \n",
       "9     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    203.0   \n",
       "\n",
       "   Bulk 13  Bulk 14  Bulk 15      Газ 1  \n",
       "0      0.0    150.0    154.0  29.749986  \n",
       "1      0.0    149.0    154.0  12.555561  \n",
       "2      0.0    152.0    153.0  28.554793  \n",
       "3      0.0    153.0    154.0  18.841219  \n",
       "4      0.0    151.0    152.0   5.413692  \n",
       "5      0.0    201.0    154.0  11.273392  \n",
       "6      0.0    152.0    154.0   9.836267  \n",
       "7      0.0    252.0    153.0  15.171553  \n",
       "8      0.0     99.0    203.0   8.216623  \n",
       "9      0.0    102.0    204.0   6.529891  \n",
       "\n",
       "[10 rows x 30 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e062da75",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Начальная температура</th>\n",
       "      <th>Конечная температура</th>\n",
       "      <th>Полная мощность</th>\n",
       "      <th>Продолжительность нагрева дугой, сек</th>\n",
       "      <th>Wire 1</th>\n",
       "      <th>Wire 2</th>\n",
       "      <th>Wire 3</th>\n",
       "      <th>Wire 4</th>\n",
       "      <th>Wire 5</th>\n",
       "      <th>...</th>\n",
       "      <th>Bulk 7</th>\n",
       "      <th>Bulk 8</th>\n",
       "      <th>Bulk 9</th>\n",
       "      <th>Bulk 10</th>\n",
       "      <th>Bulk 11</th>\n",
       "      <th>Bulk 12</th>\n",
       "      <th>Bulk 13</th>\n",
       "      <th>Bulk 14</th>\n",
       "      <th>Bulk 15</th>\n",
       "      <th>Газ 1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.000000</td>\n",
       "      <td>3021.00000</td>\n",
       "      <td>3021.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1623.002648</td>\n",
       "      <td>1587.413108</td>\n",
       "      <td>1592.022840</td>\n",
       "      <td>3.866589</td>\n",
       "      <td>801.617345</td>\n",
       "      <td>100.285615</td>\n",
       "      <td>17.561810</td>\n",
       "      <td>3.951476</td>\n",
       "      <td>0.266203</td>\n",
       "      <td>0.005009</td>\n",
       "      <td>...</td>\n",
       "      <td>2.513406</td>\n",
       "      <td>0.016220</td>\n",
       "      <td>0.479974</td>\n",
       "      <td>4.852036</td>\n",
       "      <td>4.500828</td>\n",
       "      <td>203.355180</td>\n",
       "      <td>1.079113</td>\n",
       "      <td>153.077789</td>\n",
       "      <td>118.70672</td>\n",
       "      <td>11.298667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>931.882945</td>\n",
       "      <td>23.549655</td>\n",
       "      <td>15.076597</td>\n",
       "      <td>1.498793</td>\n",
       "      <td>331.674437</td>\n",
       "      <td>42.737477</td>\n",
       "      <td>33.310289</td>\n",
       "      <td>30.605064</td>\n",
       "      <td>4.336150</td>\n",
       "      <td>0.275309</td>\n",
       "      <td>...</td>\n",
       "      <td>32.496789</td>\n",
       "      <td>0.891499</td>\n",
       "      <td>6.262842</td>\n",
       "      <td>20.494765</td>\n",
       "      <td>23.086759</td>\n",
       "      <td>152.272881</td>\n",
       "      <td>14.363010</td>\n",
       "      <td>80.874207</td>\n",
       "      <td>83.40315</td>\n",
       "      <td>6.230988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1519.000000</td>\n",
       "      <td>1529.000000</td>\n",
       "      <td>0.331897</td>\n",
       "      <td>57.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.008399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>821.000000</td>\n",
       "      <td>1571.000000</td>\n",
       "      <td>1585.000000</td>\n",
       "      <td>2.828313</td>\n",
       "      <td>576.000000</td>\n",
       "      <td>71.370002</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>105.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>104.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>7.281293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1618.000000</td>\n",
       "      <td>1587.000000</td>\n",
       "      <td>1592.000000</td>\n",
       "      <td>3.749005</td>\n",
       "      <td>776.000000</td>\n",
       "      <td>100.151993</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>206.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>148.000000</td>\n",
       "      <td>106.00000</td>\n",
       "      <td>10.015325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2429.000000</td>\n",
       "      <td>1603.000000</td>\n",
       "      <td>1599.000000</td>\n",
       "      <td>4.764798</td>\n",
       "      <td>987.000000</td>\n",
       "      <td>125.798405</td>\n",
       "      <td>23.162880</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>263.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>202.000000</td>\n",
       "      <td>204.00000</td>\n",
       "      <td>14.070262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3241.000000</td>\n",
       "      <td>1660.000000</td>\n",
       "      <td>1653.000000</td>\n",
       "      <td>15.272257</td>\n",
       "      <td>4189.000000</td>\n",
       "      <td>330.314424</td>\n",
       "      <td>282.780152</td>\n",
       "      <td>385.008668</td>\n",
       "      <td>113.231044</td>\n",
       "      <td>15.132000</td>\n",
       "      <td>...</td>\n",
       "      <td>772.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>147.000000</td>\n",
       "      <td>159.000000</td>\n",
       "      <td>313.000000</td>\n",
       "      <td>1849.000000</td>\n",
       "      <td>305.000000</td>\n",
       "      <td>636.000000</td>\n",
       "      <td>405.00000</td>\n",
       "      <td>77.995040</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               key  Начальная температура  Конечная температура  \\\n",
       "count  3021.000000            3021.000000           3021.000000   \n",
       "mean   1623.002648            1587.413108           1592.022840   \n",
       "std     931.882945              23.549655             15.076597   \n",
       "min       1.000000            1519.000000           1529.000000   \n",
       "25%     821.000000            1571.000000           1585.000000   \n",
       "50%    1618.000000            1587.000000           1592.000000   \n",
       "75%    2429.000000            1603.000000           1599.000000   \n",
       "max    3241.000000            1660.000000           1653.000000   \n",
       "\n",
       "       Полная мощность  Продолжительность нагрева дугой, сек       Wire 1  \\\n",
       "count      3021.000000                           3021.000000  3021.000000   \n",
       "mean          3.866589                            801.617345   100.285615   \n",
       "std           1.498793                            331.674437    42.737477   \n",
       "min           0.331897                             57.000000     0.000000   \n",
       "25%           2.828313                            576.000000    71.370002   \n",
       "50%           3.749005                            776.000000   100.151993   \n",
       "75%           4.764798                            987.000000   125.798405   \n",
       "max          15.272257                           4189.000000   330.314424   \n",
       "\n",
       "            Wire 2       Wire 3       Wire 4       Wire 5  ...       Bulk 7  \\\n",
       "count  3021.000000  3021.000000  3021.000000  3021.000000  ...  3021.000000   \n",
       "mean     17.561810     3.951476     0.266203     0.005009  ...     2.513406   \n",
       "std      33.310289    30.605064     4.336150     0.275309  ...    32.496789   \n",
       "min       0.000000     0.000000     0.000000     0.000000  ...     0.000000   \n",
       "25%       0.000000     0.000000     0.000000     0.000000  ...     0.000000   \n",
       "50%       0.000000     0.000000     0.000000     0.000000  ...     0.000000   \n",
       "75%      23.162880     0.000000     0.000000     0.000000  ...     0.000000   \n",
       "max     282.780152   385.008668   113.231044    15.132000  ...   772.000000   \n",
       "\n",
       "            Bulk 8       Bulk 9      Bulk 10      Bulk 11      Bulk 12  \\\n",
       "count  3021.000000  3021.000000  3021.000000  3021.000000  3021.000000   \n",
       "mean      0.016220     0.479974     4.852036     4.500828   203.355180   \n",
       "std       0.891499     6.262842    20.494765    23.086759   152.272881   \n",
       "min       0.000000     0.000000     0.000000     0.000000     0.000000   \n",
       "25%       0.000000     0.000000     0.000000     0.000000   105.000000   \n",
       "50%       0.000000     0.000000     0.000000     0.000000   206.000000   \n",
       "75%       0.000000     0.000000     0.000000     0.000000   263.000000   \n",
       "max      49.000000   147.000000   159.000000   313.000000  1849.000000   \n",
       "\n",
       "           Bulk 13      Bulk 14     Bulk 15        Газ 1  \n",
       "count  3021.000000  3021.000000  3021.00000  3021.000000  \n",
       "mean      1.079113   153.077789   118.70672    11.298667  \n",
       "std      14.363010    80.874207    83.40315     6.230988  \n",
       "min       0.000000     0.000000     0.00000     0.008399  \n",
       "25%       0.000000   104.000000     0.00000     7.281293  \n",
       "50%       0.000000   148.000000   106.00000    10.015325  \n",
       "75%       0.000000   202.000000   204.00000    14.070262  \n",
       "max     305.000000   636.000000   405.00000    77.995040  \n",
       "\n",
       "[8 rows x 30 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "0b242e4a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Начальная температура</th>\n",
       "      <th>Конечная температура</th>\n",
       "      <th>Полная мощность</th>\n",
       "      <th>Продолжительность нагрева дугой, сек</th>\n",
       "      <th>Wire 1</th>\n",
       "      <th>Wire 2</th>\n",
       "      <th>Wire 3</th>\n",
       "      <th>Wire 4</th>\n",
       "      <th>Wire 5</th>\n",
       "      <th>...</th>\n",
       "      <th>Bulk 7</th>\n",
       "      <th>Bulk 8</th>\n",
       "      <th>Bulk 9</th>\n",
       "      <th>Bulk 10</th>\n",
       "      <th>Bulk 11</th>\n",
       "      <th>Bulk 12</th>\n",
       "      <th>Bulk 13</th>\n",
       "      <th>Bulk 14</th>\n",
       "      <th>Bulk 15</th>\n",
       "      <th>Газ 1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3016</th>\n",
       "      <td>3237</td>\n",
       "      <td>1569.0</td>\n",
       "      <td>1569.0</td>\n",
       "      <td>3.250143</td>\n",
       "      <td>909</td>\n",
       "      <td>38.088959</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>252.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>206.0</td>\n",
       "      <td>5.543905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3017</th>\n",
       "      <td>3238</td>\n",
       "      <td>1584.0</td>\n",
       "      <td>1584.0</td>\n",
       "      <td>1.722728</td>\n",
       "      <td>546</td>\n",
       "      <td>56.128799</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>254.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>108.0</td>\n",
       "      <td>106.0</td>\n",
       "      <td>6.745669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3018</th>\n",
       "      <td>3239</td>\n",
       "      <td>1598.0</td>\n",
       "      <td>1598.0</td>\n",
       "      <td>6.003804</td>\n",
       "      <td>1216</td>\n",
       "      <td>143.357761</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>158.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>270.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>16.023518</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3019</th>\n",
       "      <td>3240</td>\n",
       "      <td>1617.0</td>\n",
       "      <td>1617.0</td>\n",
       "      <td>4.079307</td>\n",
       "      <td>839</td>\n",
       "      <td>34.070400</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>11.863103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3020</th>\n",
       "      <td>3241</td>\n",
       "      <td>1586.0</td>\n",
       "      <td>1586.0</td>\n",
       "      <td>3.722015</td>\n",
       "      <td>659</td>\n",
       "      <td>63.117595</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>12.680959</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       key  Начальная температура  Конечная температура  Полная мощность  \\\n",
       "3016  3237                 1569.0                1569.0         3.250143   \n",
       "3017  3238                 1584.0                1584.0         1.722728   \n",
       "3018  3239                 1598.0                1598.0         6.003804   \n",
       "3019  3240                 1617.0                1617.0         4.079307   \n",
       "3020  3241                 1586.0                1586.0         3.722015   \n",
       "\n",
       "      Продолжительность нагрева дугой, сек      Wire 1  Wire 2  Wire 3  \\\n",
       "3016                                   909   38.088959     0.0     0.0   \n",
       "3017                                   546   56.128799     0.0     0.0   \n",
       "3018                                  1216  143.357761     0.0     0.0   \n",
       "3019                                   839   34.070400     0.0     0.0   \n",
       "3020                                   659   63.117595     0.0     0.0   \n",
       "\n",
       "      Wire 4  Wire 5  ...  Bulk 7  Bulk 8  Bulk 9  Bulk 10  Bulk 11  Bulk 12  \\\n",
       "3016     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    252.0   \n",
       "3017     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    254.0   \n",
       "3018     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    158.0   \n",
       "3019     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0      0.0   \n",
       "3020     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0      0.0   \n",
       "\n",
       "      Bulk 13  Bulk 14  Bulk 15      Газ 1  \n",
       "3016      0.0    130.0    206.0   5.543905  \n",
       "3017      0.0    108.0    106.0   6.745669  \n",
       "3018      0.0    270.0     88.0  16.023518  \n",
       "3019      0.0    192.0     54.0  11.863103  \n",
       "3020      0.0    180.0     52.0  12.680959  \n",
       "\n",
       "[5 rows x 30 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2f2e06a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data[data['key'] <= 2500]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "e56c4b65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>Начальная температура</th>\n",
       "      <th>Конечная температура</th>\n",
       "      <th>Полная мощность</th>\n",
       "      <th>Продолжительность нагрева дугой, сек</th>\n",
       "      <th>Wire 1</th>\n",
       "      <th>Wire 2</th>\n",
       "      <th>Wire 3</th>\n",
       "      <th>Wire 4</th>\n",
       "      <th>Wire 5</th>\n",
       "      <th>...</th>\n",
       "      <th>Bulk 7</th>\n",
       "      <th>Bulk 8</th>\n",
       "      <th>Bulk 9</th>\n",
       "      <th>Bulk 10</th>\n",
       "      <th>Bulk 11</th>\n",
       "      <th>Bulk 12</th>\n",
       "      <th>Bulk 13</th>\n",
       "      <th>Bulk 14</th>\n",
       "      <th>Bulk 15</th>\n",
       "      <th>Газ 1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2325</th>\n",
       "      <td>2496</td>\n",
       "      <td>1554.0</td>\n",
       "      <td>1591.0</td>\n",
       "      <td>5.067396</td>\n",
       "      <td>940</td>\n",
       "      <td>114.179527</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>122.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>256.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>129.0</td>\n",
       "      <td>226.0</td>\n",
       "      <td>9.412616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2326</th>\n",
       "      <td>2497</td>\n",
       "      <td>1571.0</td>\n",
       "      <td>1589.0</td>\n",
       "      <td>4.360104</td>\n",
       "      <td>569</td>\n",
       "      <td>94.086723</td>\n",
       "      <td>9.048000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>230.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>226.0</td>\n",
       "      <td>6.271699</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2327</th>\n",
       "      <td>2498</td>\n",
       "      <td>1591.0</td>\n",
       "      <td>1594.0</td>\n",
       "      <td>3.907887</td>\n",
       "      <td>750</td>\n",
       "      <td>118.110717</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>206.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>129.0</td>\n",
       "      <td>207.0</td>\n",
       "      <td>14.953657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2328</th>\n",
       "      <td>2499</td>\n",
       "      <td>1569.0</td>\n",
       "      <td>1603.0</td>\n",
       "      <td>2.167774</td>\n",
       "      <td>883</td>\n",
       "      <td>110.160958</td>\n",
       "      <td>50.005280</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>233.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>126.0</td>\n",
       "      <td>227.0</td>\n",
       "      <td>11.336151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2329</th>\n",
       "      <td>2500</td>\n",
       "      <td>1539.0</td>\n",
       "      <td>1539.0</td>\n",
       "      <td>2.762583</td>\n",
       "      <td>854</td>\n",
       "      <td>83.166710</td>\n",
       "      <td>61.224798</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>255.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>226.0</td>\n",
       "      <td>9.990718</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       key  Начальная температура  Конечная температура  Полная мощность  \\\n",
       "2325  2496                 1554.0                1591.0         5.067396   \n",
       "2326  2497                 1571.0                1589.0         4.360104   \n",
       "2327  2498                 1591.0                1594.0         3.907887   \n",
       "2328  2499                 1569.0                1603.0         2.167774   \n",
       "2329  2500                 1539.0                1539.0         2.762583   \n",
       "\n",
       "      Продолжительность нагрева дугой, сек      Wire 1     Wire 2  Wire 3  \\\n",
       "2325                                   940  114.179527   0.000000     0.0   \n",
       "2326                                   569   94.086723   9.048000     0.0   \n",
       "2327                                   750  118.110717   0.000000     0.0   \n",
       "2328                                   883  110.160958  50.005280     0.0   \n",
       "2329                                   854   83.166710  61.224798     0.0   \n",
       "\n",
       "      Wire 4  Wire 5  ...  Bulk 7  Bulk 8  Bulk 9  Bulk 10  Bulk 11  Bulk 12  \\\n",
       "2325     0.0     0.0  ...     0.0     0.0     0.0    122.0      0.0    256.0   \n",
       "2326     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    230.0   \n",
       "2327     0.0     0.0  ...     0.0     0.0     0.0    101.0      0.0    206.0   \n",
       "2328     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    233.0   \n",
       "2329     0.0     0.0  ...     0.0     0.0     0.0      0.0      0.0    255.0   \n",
       "\n",
       "      Bulk 13  Bulk 14  Bulk 15      Газ 1  \n",
       "2325      0.0    129.0    226.0   9.412616  \n",
       "2326      0.0    124.0    226.0   6.271699  \n",
       "2327      0.0    129.0    207.0  14.953657  \n",
       "2328      0.0    126.0    227.0  11.336151  \n",
       "2329      0.0    120.0    226.0   9.990718  \n",
       "\n",
       "[5 rows x 30 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "b9d23c42",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "data['Начальная температура'].hist(bins=100);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "866741ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "data['Конечная температура'].hist(bins=100);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "480a639e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "data['Полная мощность'].hist(bins=100);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "88e25518",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAD4CAYAAAAXUaZHAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAAATTklEQVR4nO3df4xlZX3H8fe3/FB0LAtiJ3R308FKNJS1ChPE0NhZaRXBuPxBDIbogjSbtmhpxeiiSUn/MMU2ajVtbTZCXBNlQGrDBrVK0anxD1Z3EVh+iIyIupuFrQVWR4m69ts/7sN6HWa5Z+6Pufc+834lk3vOc84957nfnf3MM88990xkJpKkuvzWsDsgSeo/w12SKmS4S1KFDHdJqpDhLkkVOnrYHQA46aSTcmpqqtG+P/3pT3n+858/2A5VwDo1Y506s0bNDKNOu3fv/lFmvmipbSMR7lNTU+zatavRvnNzc8zMzAy2QxWwTs1Yp86sUTPDqFNEfP9I25yWkaQKGe6SVCHDXZIqZLhLUoUMd0mqkOEuSRUy3CWpQoa7JFWoY7hHxPURcSAi7l1i21URkRFxUlmPiPhYRMxHxD0RccYgOi1JenZNPqH6SeCfgU+1N0bEeuB1wA/amt8AnFq+XgV8vDxqkamtnz+8/Mi1FwyxJ5Jq1HHknplfAx5fYtNHgPcA7X/KaRPwqWy5A1gTESf3paeSpMa6mnOPiE3Avsy8e9GmtcAP29b3ljZJ0gpa9o3DIuJ5wPtoTcl0LSK2AFsAJicnmZuba/S8hYWFxvuOsqs2HDq8PIjXU0udBs06dWaNmhm1OnVzV8jfB04B7o4IgHXAnRFxFrAPWN+277rS9gyZuQ3YBjA9PZ1N76ZWyx3qLm2fc79kpu/Hr6VOg2adOrNGzYxanZY9LZOZezLzdzJzKjOnaE29nJGZjwI7gLeVq2bOBg5m5v7+dlmS1EnHkXtE3ADMACdFxF7gmsy87gi7fwE4H5gHfgZc1qd+Vs0rZyT1W8dwz8y3dNg+1bacwBW9d0uS1As/oSpJFTLcJalChrskVchwl6QKGe6SVCHDXZIqZLhLUoUMd0mqkOEuSRUy3CWpQoa7JFXIcJekChnuklQhw12SKmS4S1KFDHdJqpDhLkkVMtwlqUId/8yehse/rSqpW4b7iGkPdEnqltMyklShjuEeEddHxIGIuLet7R8j4tsRcU9E/EdErGnbdnVEzEfEgxHx+gH1W5L0LJqM3D8JnLeo7Tbg9Mx8OfAd4GqAiDgNuBj4g/Kcf42Io/rWW0lSIx3DPTO/Bjy+qO3LmXmorN4BrCvLm4DZzPx5Zn4PmAfO6mN/JUkN9OMN1bcDN5bltbTC/ml7S9szRMQWYAvA5OQkc3NzjU62sLDQeN9RdtWGQ513arPc11xLnQbNOnVmjZoZtTr1FO4R8X7gEPDp5T43M7cB2wCmp6dzZmam0fPm5uZouu8ou3SZV8U8csnMsvavpU6DZp06s0bNjFqdug73iLgUeCNwbmZmad4HrG/bbV1pkyStoK7CPSLOA94D/HFm/qxt0w7gMxHxYeB3gVOBb/TcS/mBJknL0jHcI+IGYAY4KSL2AtfQujrmOcBtEQFwR2b+eWbeFxE3AffTmq65IjN/NajOS5KW1jHcM/MtSzRf9yz7fwD4QC+dkiT1xtsPrCBvLSBppXj7AUmqkOEuSRUy3CWpQoa7JFXIN1THkNe8S+rEkbskVciR+5hzFC9pKY7cJalChrskVchwl6QKGe6SVCHDXZIqZLhLUoUMd0mqkOEuSRXyQ0wD4AeLJA2bI3dJqpDhLkkVMtwlqUIdwz0iro+IAxFxb1vbiRFxW0Q8VB5PKO0RER+LiPmIuCcizhhk5yVJS2sycv8kcN6itq3A7Zl5KnB7WQd4A3Bq+doCfLw/3ZQkLUfHcM/MrwGPL2reBGwvy9uBC9vaP5UtdwBrIuLkPvVVktRQZGbnnSKmgFsz8/Sy/mRmrinLATyRmWsi4lbg2sz8etl2O/DezNy1xDG30BrdMzk5eebs7GyjDi8sLDAxMdFo32HZs+/g4eUNa49fsn0Q2s81DnUaBdapM2vUzDDqtHHjxt2ZOb3Utp6vc8/MjIjOPyGe+bxtwDaA6enpnJmZafS8ubk5mu47LJe2X+d+ycyS7YPQfq5xqNMosE6dWaNmRq1O3V4t89jT0y3l8UBp3wesb9tvXWmTJK2gbkfuO4DNwLXl8Za29ndExCzwKuBgZu7vuZdjbGrAo3VJWkrHcI+IG4AZ4KSI2AtcQyvUb4qIy4HvA28uu38BOB+YB34GXDaAPkuSOugY7pn5liNsOneJfRO4otdOSZJ64ydUJalC3hWyT5xblzRKHLlLUoUMd0mqkOEuSRUy3CWpQoa7JFXIcJekChnuklQhw12SKmS4V2rPvoNMbf28H66SVinDXZIqZLhLUoUMd0mqkOEuSRUy3CWpQoa7JFXIcJekChnuklQhw12SKtRTuEfE30TEfRFxb0TcEBHPjYhTImJnRMxHxI0RcWy/OitJaqbrcI+ItcBfAdOZeTpwFHAx8EHgI5n5EuAJ4PJ+dFSS1Fyv0zJHA8dFxNHA84D9wGuBm8v27cCFPZ5DkrRMkZndPzniSuADwFPAl4ErgTvKqJ2IWA98sYzsFz93C7AFYHJy8szZ2dlG51xYWGBiYqLrPg/Knn0Hh92F3zB5HDz2VGt5w9rjh9uZETaq30+jxBo1M4w6bdy4cXdmTi+17ehuDxoRJwCbgFOAJ4HPAuc1fX5mbgO2AUxPT+fMzEyj583NzdF035V06YjdffGqDYf40J7WP+8jl8wMtzMjbFS/n0aJNWpm1OrUy7TMnwDfy8z/ycxfAp8DzgHWlGkagHXAvh77KElapl7C/QfA2RHxvIgI4FzgfuCrwEVln83ALb11UZK0XF2He2bupPXG6Z3AnnKsbcB7gXdFxDzwQuC6PvRTkrQMXc+5A2TmNcA1i5ofBs7q5biSpN70FO4aD4v/1N4j114wpJ5IWinefkCSKmS4S1KFDHdJqpBz7su0eP5akkaRI3dJqpDhLkkVMtwlqUKGuyRVyHCXpAp5tcwq1H7Fj59WlerkyF2SKmS4S1KFDHdJqpDhLkkVMtwlqUKGuyRVyEshG/BmYZLGjSN3SaqQ4S5JFeop3CNiTUTcHBHfjogHIuLVEXFiRNwWEQ+VxxP61VlJUjO9jtw/CvxnZr4M+EPgAWArcHtmngrcXtYlSSuo63CPiOOB1wDXAWTmLzLzSWATsL3sth24sLcuSpKWKzKzuydGvALYBtxPa9S+G7gS2JeZa8o+ATzx9Pqi528BtgBMTk6eOTs72+i8CwsLTExMdNXnbu3Zd3BFz9cPk8fBY0913m/D2uMH35kRNozvp3FjjZoZRp02bty4OzOnl9rWS7hPA3cA52Tmzoj4KPBj4J3tYR4RT2Tms867T09P565duxqdd25ujpmZma763K1xvBTyqg2H+NCezle6rva7Qg7j+2ncWKNmhlGniDhiuPcy574X2JuZO8v6zcAZwGMRcXI58cnAgR7OIUnqQtfhnpmPAj+MiJeWpnNpTdHsADaXts3ALT31UJK0bL1+QvWdwKcj4ljgYeAyWj8wboqIy4HvA2/u8RySpGXqKdwz8y5gqfmec3s5riSpN35CVZIqZLhLUoW8K2SbcbzkUZKW4shdkipkuEtShQx3SaqQ4S5JFTLcJalChrskVchwl6QKGe6SVCHDXZIqZLhLUoUMd0mqkOEuSRUy3CWpQoa7JFXIcJekChnuklQhw12SKtRzuEfEURHxrYi4tayfEhE7I2I+Im6MiGN776YkaTn6MXK/Enigbf2DwEcy8yXAE8DlfTiHJGkZegr3iFgHXAB8oqwH8Frg5rLLduDCXs6hlTO19fOHvySNt8jM7p8ccTPw98ALgHcDlwJ3lFE7EbEe+GJmnr7Ec7cAWwAmJyfPnJ2dbXTOhYUFJiYmuu7zs9mz7+BAjjsMk8fBY0913m/D2uMPL7e//vb2mg3y+6kW1qiZYdRp48aNuzNzeqltR3d70Ih4I3AgM3dHxMxyn5+Z24BtANPT0zkz0+wQc3NzNN13uS6taMR61YZDfGhP53/eRy6ZObzc/vrb22s2yO+nWlijZkatTl2HO3AO8KaIOB94LvDbwEeBNRFxdGYeAtYB+3rvplZa+9TMI9deMMSeSOpG1+GemVcDVwOUkfu7M/OSiPgscBEwC2wGbum9mxoU59elOg3iOvf3Au+KiHnghcB1AziHJOlZ9DItc1hmzgFzZflh4Kx+HFeS1B0/oSpJFTLcJalChrskVchwl6QKGe6SVCHDXZIqZLhLUoUMd0mqkOEuSRXqyydUx5n3VpFUI0fuklShVT9yV/e8LbA0ugx3dWSIS+NnVYa78+ySauecuyRVyHCXpAoZ7pJUIcNdkipkuEtShVbl1TLqnlcaSeOh65F7RKyPiK9GxP0RcV9EXFnaT4yI2yLiofJ4Qv+6K0lqopdpmUPAVZl5GnA2cEVEnAZsBW7PzFOB28u6JGkFdR3umbk/M+8syz8BHgDWApuA7WW37cCFPfZRkrRMfXlDNSKmgFcCO4HJzNxfNj0KTPbjHJKk5iIzeztAxATw38AHMvNzEfFkZq5p2/5EZj5j3j0itgBbACYnJ8+cnZ1tdL6FhQUmJiZ66vOefQd7ev44mDwOHntq5c63Ye3xK3eyPurH91PtrFEzw6jTxo0bd2fm9FLbegr3iDgGuBX4UmZ+uLQ9CMxk5v6IOBmYy8yXPttxpqenc9euXY3OOTc3x8zMTNd9htVxxcdVGw7xoT0rdzHUuN5QrB/fT7WzRs0Mo04RccRw7+VqmQCuAx54OtiLHcDmsrwZuKXbc0iSutPL0O4c4K3Anoi4q7S9D7gWuCkiLge+D7y5px5qrHm7YGk4ug73zPw6EEfYfG63x9V4MsSl0eInVLVi/AEgrRzvLSNJFapq5L74KhhHh5JWq6rCXaNhNVxqKo06p2UkqUKGuyRVyHCXpAoZ7pJUoVXzhqpv8klaTRy5S1KFDHdJqlDV0zJOxUharaoOd40u7zMjDZbTMpJUIcNdkirktIyGzikaqf8cuUtShRy5a6Qc6QqnJiN6fwOQfm3sw93LHbUUg16r3diHu1a3Jj/cmwa9PxBUE+fcJalCAxu5R8R5wEeBo4BPZOa1gzqX6tevUbWjc60WAwn3iDgK+BfgT4G9wDcjYkdm3j+I82l1Wen3WZr8QFjJHz5H2sc3o8fHStR7UNMyZwHzmflwZv4CmAU2DehckqRFIjP7f9CIi4DzMvPPyvpbgVdl5jva9tkCbCmrLwUebHj4k4Af9bG7tbJOzVinzqxRM8Oo0+9l5ouW2jC0q2UycxuwbbnPi4hdmTk9gC5VxTo1Y506s0bNjFqdBjUtsw9Y37a+rrRJklbAoML9m8CpEXFKRBwLXAzsGNC5JEmLDGRaJjMPRcQ7gC/RuhTy+sy8r0+HX/ZUziplnZqxTp1Zo2ZGqk4DeUNVkjRcfkJVkipkuEtShcYq3CPivIh4MCLmI2LrsPuzkiLi+og4EBH3trWdGBG3RcRD5fGE0h4R8bFSp3si4oy252wu+z8UEZuH8VoGKSLWR8RXI+L+iLgvIq4s7daqiIjnRsQ3IuLuUqO/K+2nRMTOUosby8UQRMRzyvp82T7VdqyrS/uDEfH6Ib2kgYqIoyLiWxFxa1kfjzpl5lh80Xpj9rvAi4FjgbuB04bdrxV8/a8BzgDubWv7B2BrWd4KfLAsnw98EQjgbGBnaT8ReLg8nlCWTxj2a+tznU4GzijLLwC+A5xmrX6jRgFMlOVjgJ3ltd8EXFza/w34i7L8l8C/leWLgRvL8mnl/+FzgFPK/8+jhv36BlCvdwGfAW4t62NRp3Eaua/qWxpk5teAxxc1bwK2l+XtwIVt7Z/KljuANRFxMvB64LbMfDwznwBuA84beOdXUGbuz8w7y/JPgAeAtVirw8prXSirx5SvBF4L3FzaF9fo6drdDJwbEVHaZzPz55n5PWCe1v/TakTEOuAC4BNlPRiTOo1TuK8Ffti2vre0rWaTmbm/LD8KTJblI9VqVdWw/Fr8SlojU2vVpkw13AUcoPWD67vAk5l5qOzS/noP16JsPwi8kMprVPwT8B7g/8r6CxmTOo1TuOtZZOv3P69rLSJiAvh34K8z88ft26wVZOavMvMVtD49fhbwsuH2aPRExBuBA5m5e9h96cY4hbu3NHimx8oUAuXxQGk/Uq1WRQ0j4hhawf7pzPxcabZWS8jMJ4GvAq+mNSX19Acb21/v4VqU7ccD/0v9NToHeFNEPEJrGvi1tP5GxVjUaZzC3VsaPNMO4OmrODYDt7S1v61cCXI2cLBMSXwJeF1EnFCuFnldaatGmeO8DnggMz/ctslaFRHxoohYU5aPo/V3Fx6gFfIXld0W1+jp2l0EfKX89rMDuLhcJXIKcCrwjRV5ESsgM6/OzHWZOUUrb76SmZcwLnUa9jvRy3zX+nxaVz98F3j/sPuzwq/9BmA/8Etac3aX05rPux14CPgv4MSyb9D6YynfBfYA023HeTutN3TmgcuG/boGUKc/ojXlcg9wV/k631r9Ro1eDnyr1Ohe4G9L+4tphc488FngOaX9uWV9vmx/cdux3l9q9yDwhmG/tgHWbIZfXy0zFnXy9gOSVKFxmpaRJDVkuEtShQx3SaqQ4S5JFTLcJalChrskVchwl6QK/T9Y7S0863k12wAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "data['Продолжительность нагрева дугой, сек'].hist(bins=100);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "3f82c6b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAD4CAYAAAAXUaZHAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAUUUlEQVR4nO3dfZBddX3H8fe3oBSzNgFDd9JAuzhFHE00mh3U0WF2fYzoiHYcSoaxRGmjM9hqmxkN6vhQxxnaitaOrTYKRavNYnlQGqxKKVu0I2qikQ1PChI1W0wEYnAx4xj89o97Vi6bu+zuuffm3v3l/Zq5s+f8ztN3z7n72XN/99xzIzORJJXlt3pdgCSp8wx3SSqQ4S5JBTLcJalAhrskFejYXhcAsHz58hwaGqq9/EMPPcSSJUs6V1AHWVs91laPtdWzWGvbsWPHfZl5UsuJmdnzx9q1a7MdN954Y1vLd5O11WNt9VhbPYu1NmB7zpKrdstIUoEMd0kqkOEuSQUy3CWpQIa7JBXIcJekAhnuklSgOcM9Ii6LiH0Rsaup7YqI2Fk9dkfEzqp9KCIONk37eBdrlyTNYj6fUL0c+Cjw6emGzPzj6eGIuAQ40DT/3Zm5pkP1SZJqmDPcM/OmiBhqNS0iAjgHeGGH61rUhjZf95vhy9f150eaJZUtch7fxFSF+7bMXDWj/UzgQ5k53DTfrcD3gAeBd2XmV2dZ50ZgI8Dg4ODasbGx2r/E1NQUAwMDtZfvtInJR17InLr0mL6qrVm/7bdm1laPtdWzWGsbHR3dMZ2/h5ntvgTND2AI2NWi/WPApqbx44AnVcNrgR8DvzPX+ku7t8wfvH3bbx79Vlsza6vH2uqxtnqO+L1lIuJY4I+AK5r+UfwyM++vhncAdwNPqbsNSVI97dzy98XAHZm5Z7ohIk4CHsjMhyPiycBpwA/arLGvNPen7774FT2sRJJmN59LIbcCXwdOj4g9EXFBNelcYOuM2c8EbqkujbwSeFNmPtDBeiVJ8zCfq2XWz9K+oUXbVcBV7ZclSWqHn1CVpAIZ7pJUIMNdkgpkuEtSgQx3SSqQ4S5JBTLcJalAhrskFchwl6QCGe6SVCDDXZIKZLhLUoEMd0kqkOEuSQUy3LtsYvIAQ5uve9SXfEhStxnuklQgw12SCmS4S1KBDHdJKpDhLkkFmjPcI+KyiNgXEbua2t4bEZMRsbN6nNU07aKIuCsi7oyIl3WrcEnS7OZz5n45sK5F+4czc031+CJARDwNOBd4erXMP0XEMZ0qVpI0P8fONUNm3hQRQ/Nc39nAWGb+ErgnIu4CzgC+Xr/E/tV87frui1/Rw0ok6dEiM+eeqRHu2zJzVTX+XmAD8CCwHdiUmfsj4qPAzZn5mWq+S4H/zMwrW6xzI7ARYHBwcO3Y2FjtX2JqaoqBgYHayy/ExOSBlu2rVy5tOc/g8bD34OHz9IMjud8WytrqsbZ6Fmtto6OjOzJzuNW0Oc/cZ/Ex4P1AVj8vAd6wkBVk5hZgC8Dw8HCOjIzULAXGx8dpZ/mF2DDLJ013nzfScp5Nqw9xycSxh83TD47kflsoa6vH2uopsbZaV8tk5t7MfDgzfw18gkbXC8AkcErTrCdXbZKkI6hWuEfEiqbR1wDTV9JcC5wbEcdFxKnAacA32ytRkrRQc3bLRMRWYARYHhF7gPcAIxGxhka3zG7gjQCZeWtEfA64DTgEXJiZD3elcknSrOZztcz6Fs2XPsb8HwA+0E5RkqT21H1DVTN4S19J/cTbD0hSgQx3SSqQ4S5JBbLPfR7sT5e02HjmLkkFMtwlqUCGuyQVyHCXpAIZ7pJUIMNdkgpkuEtSgQx3SSqQ4S5JBTLcJalAhrskFchwl6QCGe6SVCDDXZIKZLhLUoEMd0kq0JzhHhGXRcS+iNjV1PZ3EXFHRNwSEddExLKqfSgiDkbEzurx8S7WLkmaxXzO3C8H1s1oux5YlZnPAL4HXNQ07e7MXFM93tSZMiVJCzFnuGfmTcADM9q+kpmHqtGbgZO7UJskqabIzLlnihgCtmXmqhbT/gO4IjM/U813K42z+QeBd2XmV2dZ50ZgI8Dg4ODasbGxur8DU1NTDAwM1F5+LhOTB2ovO3g87D3YGF69cmmHKuqMbu+3dlhbPdZWz2KtbXR0dEdmDrea1tYXZEfEO4FDwGerpnuB38/M+yNiLfD5iHh6Zj44c9nM3AJsARgeHs6RkZHadYyPj9PO8nPZ0MYXZG9afYhLJhq7efd5Ix2qqDO6vd/aYW31WFs9JdZW+2qZiNgAvBI4L6vT/8z8ZWbeXw3vAO4GnlJ3G5KkemqFe0SsA94GvCozf9HUflJEHFMNPxk4DfhBJwqVJM3fnN0yEbEVGAGWR8Qe4D00ro45Drg+IgBurq6MORP464j4FfBr4E2Z+UDLFUuSumbOcM/M9S2aL51l3quAq9otSpLUnrbeUNXCDDW9Mbv74lf0sBJJpfP2A5JUIMNdkgpkuEtSgQx3SSqQ4S5JBTLcJalAhrskFchwl6QCGe6SVCDDXZIKZLhLUoEMd0kqkDcOm8VQG9++JEm95pm7JBXIcJekAhnuklQgw12SCmS4S1KBDHdJKtC8wj0iLouIfRGxq6ntxIi4PiK+X/08oWqPiPiHiLgrIm6JiGd3q3hJUmvzPXO/HFg3o20zcENmngbcUI0DvBw4rXpsBD7WfpnlGdp83W8ektRp8wr3zLwJeGBG89nAp6rhTwGvbmr/dDbcDCyLiBUdqFWSNE+RmfObMWII2JaZq6rxn2Xmsmo4gP2ZuSwitgEXZ+bXqmk3AG/PzO0z1reRxpk9g4ODa8fGxmr/ElNTUwwMDNRevpWJyQMdWc/g8bD34GPPs3rl0o5sa6G6sd86xdrqsbZ6Fmtto6OjOzJzuNW0jtx+IDMzIub3X+KRZbYAWwCGh4dzZGSk9vbHx8dpZ/lWNnSou2TT6kNcMvHYu3n3eSMd2dZCdWO/dYq11WNt9ZRYWztXy+yd7m6pfu6r2ieBU5rmO7lqkyQdIe2E+7XA+dXw+cAXmtr/pLpq5rnAgcy8t43tSJIWaF7dMhGxFRgBlkfEHuA9wMXA5yLiAuCHwDnV7F8EzgLuAn4BvL7DNRen+YqZ3Re/ooeVSCrFvMI9M9fPMulFLeZN4MJ2ipIktcdPqEpSgQx3SSqQ4S5JBTLcJalAhrskFchwl6QCGe6SVCDDXZIKZLhLUoEMd0kqkOEuSQUy3CWpQIa7JBXIcJekAhnuklQgw12SCmS4S1KBDHdJKtC8vmbvaNH8XaaStJgZ7n1mtn8wfnG2pIWoHe4RcTpwRVPTk4F3A8uAPwN+WrW/IzO/WHc7kqSFqx3umXknsAYgIo4BJoFrgNcDH87MD3aiQEnSwnXqDdUXAXdn5g87tD5JUhs6Fe7nAlubxt8cEbdExGURcUKHtiFJmqfIzPZWEPF44P+Ap2fm3ogYBO4DEng/sCIz39BiuY3ARoDBwcG1Y2NjtWuYmppiYGCg9vLTJiYPtL2OmQaPh70HO7vO1SuXdmQ9ndpv3WBt9VhbPYu1ttHR0R2ZOdxqWifC/Wzgwsx8aYtpQ8C2zFz1WOsYHh7O7du3165hfHyckZGR2stP68alkJtWH+KSic5elNSpK2c6td+6wdrqsbZ6FmttETFruHeiW2Y9TV0yEbGiadprgF0d2IYkaQHaOqWMiCXAS4A3NjX/bUSsodEts3vGNEnSEdBWuGfmQ8CTZrS9rq2KJElt894yklQgw12SCmS4S1KBDHdJKpDhLkkFMtwlqUCGuyQV6Kj/sg6/fUlSiTxzl6QCGe6SVKCjvltmMWruSvK7VSW14pm7JBXIcJekAhnuklQgw12SCmS4S1KBDHdJKpDhLkkFMtwlqUCGuyQVyHCXpAK1ffuBiNgN/Bx4GDiUmcMRcSJwBTAE7AbOycz97W5LkjQ/nbq3zGhm3tc0vhm4ITMvjojN1fjbO7QtPQbvOyMJutctczbwqWr4U8Cru7QdSVILkZntrSDiHmA/kMA/Z+aWiPhZZi6rpgewf3q8abmNwEaAwcHBtWNjY7VrmJqaYmBgoNayE5MHam93PgaPh70Hu7f+1SuXPmq8+feZOW2mdvZbt1lbPdZWz2KtbXR0dEdmDrea1olwX5mZkxHxu8D1wJ8D1zaHeUTsz8wTZlvH8PBwbt++vXYN4+PjjIyM1Fq229/EtGn1IS6Z6N6dlWd2vSykW6ad/dZt1laPtdWzWGuLiFnDve3UyczJ6ue+iLgGOAPYGxErMvPeiFgB7Gt3O2rNrwmU1Epbfe4RsSQinjg9DLwU2AVcC5xfzXY+8IV2tiNJWph2z9wHgWsa3eocC/xbZn4pIr4FfC4iLgB+CJzT5nYkSQvQVrhn5g+AZ7Zovx94UTvrliTV5ydUJalAhrskFchwl6QCGe6SVCDDXZIK1L2PTqrnvImYdPQ6KsPdT3VKKp3dMpJUIMNdkgp01HTL2BUj6WjimbskFchwl6QCFd0tY1eMpKOVZ+6SVKCiz9w1Nz/oJJXJM3dJKpDhLkkFMtwlqUD2uR8l7FuXji6euUtSgWqHe0ScEhE3RsRtEXFrRLylan9vRExGxM7qcVbnypUkzUc73TKHgE2Z+e2IeCKwIyKur6Z9ODM/2H55kqQ6aod7Zt4L3FsN/zwibgdWdqowSVJ9kZntryRiCLgJWAX8FbABeBDYTuPsfn+LZTYCGwEGBwfXjo2N1d7+1NQUAwMDh7VPTB6ovc5OGTwe9h7sdRWPtnrlUqCx3+458PBh7f1gtmPaD6ytHmur57FqGx0d3ZGZw62mtR3uETEA/A/wgcy8OiIGgfuABN4PrMjMNzzWOoaHh3P79u21axgfH2dkZOSw9n64t8ym1Ye4ZKK/LkqavlpmfHycDV966LD2fjDbMe0H1laPtdXzWLVFxKzh3tbVMhHxOOAq4LOZeTVAZu7NzIcz89fAJ4Az2tmGJGnh2rlaJoBLgdsz80NN7SuaZnsNsKt+eZKkOtrpL3g+8DpgIiJ2Vm3vANZHxBoa3TK7gTe2sQ1JUg3tXC3zNSBaTPpi/XLa1w/97JLUa35CVZIK1F+XceiImH51s2n1IebzFPC+NNLi45m7JBXIcJekAhnuklQgw12SCmS4S1KBvFpGvzGfzwjMduWMV9RI/cUzd0kqkOEuSQUy3CWpQPa5q+Psf5d6z3BXbd6kTepfhrt6wrN7qbvsc5ekAhnuklQgu2XUV5pvRzzS21KkRc1wV8/5xqzUeYa7uqpTb5z6Bqy0MIa7Fh3vbyPNrYhwn5g8wAZf2ve9hXa/LPRGZpIe0bVwj4h1wEeAY4BPZubF3dqWNJeFntXP9k/DVwRaLLpyKWREHAP8I/By4GnA+oh4Wje2JUk6XLfO3M8A7srMHwBExBhwNnBbl7YnPcp8u2u6/YbvfNbfyRo2rT7Ehs3X9f17Ef1Y05F0JH7/yMzOrzTitcC6zPzTavx1wHMy881N82wENlajpwN3trHJ5cB9bSzfTdZWj7XVY231LNba/iAzT2o1oWdvqGbmFmBLJ9YVEdszc7gT6+o0a6vH2uqxtnpKrK1btx+YBE5pGj+5apMkHQHdCvdvAadFxKkR8XjgXODaLm1LkjRDV7plMvNQRLwZ+DKNSyEvy8xbu7GtSke6d7rE2uqxtnqsrZ7iauvKG6qSpN7ylr+SVCDDXZIKtKjDPSLWRcSdEXFXRGzucS2XRcS+iNjV1HZiRFwfEd+vfp7Qo9pOiYgbI+K2iLg1It7SL/VFxG9HxDcj4rtVbe+r2k+NiG9Ux/aK6o35noiIYyLiOxGxrZ9qi4jdETERETsjYnvV1vNjWtWxLCKujIg7IuL2iHheP9QWEadX+2v68WBEvLUfaqvq+8vq72BXRGyt/j5qPd8Wbbj34S0OLgfWzWjbDNyQmacBN1TjvXAI2JSZTwOeC1xY7at+qO+XwAsz85nAGmBdRDwX+Bvgw5n5h8B+4IIe1DbtLcDtTeP9VNtoZq5pug66H44pNO4r9aXMfCrwTBr7r+e1Zead1f5aA6wFfgFc0w+1RcRK4C+A4cxcReNilHOp+3zLzEX5AJ4HfLlp/CLgoh7XNATsahq/E1hRDa8A7uz1fqtq+QLwkn6rD3gC8G3gOTQ+kXdsq2N9hGs6mcYf+wuBbUD0UW27geUz2np+TIGlwD1UF2z0U20z6nkp8L/9UhuwEvgxcCKNKxm3AS+r+3xbtGfuPLIjpu2p2vrJYGbeWw3/BBjsZTEAETEEPAv4Bn1SX9XtsRPYB1wP3A38LDMPVbP08tj+PfA24NfV+JPon9oS+EpE7Khu5wH9cUxPBX4K/EvVnfXJiFjSJ7U1OxfYWg33vLbMnAQ+CPwIuBc4AOyg5vNtMYf7opKNf7s9ve40IgaAq4C3ZuaDzdN6WV9mPpyNl8kn07jp3FN7UcdMEfFKYF9m7uh1LbN4QWY+m0bX5IURcWbzxB4e02OBZwMfy8xnAQ8xo5uj138PVb/1q4B/nzmtV7VV/fxn0/jn+HvAEg7v6p23xRzui+EWB3sjYgVA9XNfrwqJiMfRCPbPZubV/VYfQGb+DLiRxkvPZREx/SG7Xh3b5wOviojdwBiNrpmP9Elt02d6ZOY+Gv3GZ9Afx3QPsCczv1GNX0kj7PuhtmkvB76dmXur8X6o7cXAPZn508z8FXA1jedgrefbYg73xXCLg2uB86vh82n0dR9xERHApcDtmfmhpkk9ry8iToqIZdXw8TTeC7idRsi/tpe1ZeZFmXlyZg7ReH79d2ae1w+1RcSSiHji9DCN/uNd9MExzcyfAD+OiNOrphfRuN13z2trsp5HumSgP2r7EfDciHhC9Tc7vd/qPd96+YZGB96AOAv4Ho0+2nf2uJatNPrJfkXjzOUCGv2zNwDfB/4LOLFHtb2AxsvMW4Cd1eOsfqgPeAbwnaq2XcC7q/YnA98E7qLx0vm4Hh/fEWBbv9RW1fDd6nHr9PO/H45pVccaYHt1XD8PnNBHtS0B7geWNrX1S23vA+6o/hb+FTiu7vPN2w9IUoEWc7eMJGkWhrskFchwl6QCGe6SVCDDXZIKZLhLUoEMd0kq0P8DFxOA3ApvBzsAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "data['Газ 1'].hist(bins=100);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "3f419db0",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data.drop(['key'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "d86b4a88",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x1800 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(25, 25))\n",
    "matrix = np.triu(data.corr())\n",
    "heatmap = sns.heatmap(data.corr(),\n",
    "                      annot=True,\n",
    "                      mask=matrix,\n",
    "                      cbar=False,\n",
    "                      fmt='.2g')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e9783c2",
   "metadata": {},
   "source": [
    "По матрице корреляции видно, что столбец Wire_5 - пустой(его удалим), и высокая корреляция между Bulk_9 и Ware_8, один из них тоже удалим"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "b6ccfb1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data.drop(['Wire 5', 'Bulk 9'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "3f820d82",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.rename(columns={'Начальная температура' : 'start_temp', \n",
    "                     'Конечная температура' : 'final_temp',\n",
    "                     'Полная мощность' : 'full_power',\n",
    "                     'Продолжительность нагрева дугой, сек' : 'heating_time_sec',\n",
    "                     'Газ 1' : 'gas'}, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1e52818e",
   "metadata": {},
   "source": [
    "### Деление данных на выборки"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "f4c4e838",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1747, 27)"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train, test = train_test_split(data, test_size=0.25, random_state=310723)\n",
    "train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "88b3596d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 1747 entries, 1723 to 1992\n",
      "Data columns (total 27 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   start_temp        1747 non-null   float64\n",
      " 1   final_temp        1747 non-null   float64\n",
      " 2   full_power        1747 non-null   float64\n",
      " 3   heating_time_sec  1747 non-null   int64  \n",
      " 4   Wire 1            1747 non-null   float64\n",
      " 5   Wire 2            1747 non-null   float64\n",
      " 6   Wire 3            1747 non-null   float64\n",
      " 7   Wire 4            1747 non-null   float64\n",
      " 8   Wire 6            1747 non-null   float64\n",
      " 9   Wire 7            1747 non-null   float64\n",
      " 10  Wire 8            1747 non-null   float64\n",
      " 11  Wire 9            1747 non-null   float64\n",
      " 12  Bulk 1            1747 non-null   float64\n",
      " 13  Bulk 2            1747 non-null   float64\n",
      " 14  Bulk 3            1747 non-null   float64\n",
      " 15  Bulk 4            1747 non-null   float64\n",
      " 16  Bulk 5            1747 non-null   float64\n",
      " 17  Bulk 6            1747 non-null   float64\n",
      " 18  Bulk 7            1747 non-null   float64\n",
      " 19  Bulk 8            1747 non-null   float64\n",
      " 20  Bulk 10           1747 non-null   float64\n",
      " 21  Bulk 11           1747 non-null   float64\n",
      " 22  Bulk 12           1747 non-null   float64\n",
      " 23  Bulk 13           1747 non-null   float64\n",
      " 24  Bulk 14           1747 non-null   float64\n",
      " 25  Bulk 15           1747 non-null   float64\n",
      " 26  gas               1747 non-null   float64\n",
      "dtypes: float64(26), int64(1)\n",
      "memory usage: 382.2 KB\n"
     ]
    }
   ],
   "source": [
    "train.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "3990db45",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1747\n"
     ]
    }
   ],
   "source": [
    "features_train_before_scaler = train.drop(['final_temp'], axis=1)\n",
    "target_train = train['final_temp']\n",
    "\n",
    "features_test = test.drop(['final_temp'], axis=1)\n",
    "target_test = test['final_temp']\n",
    "\n",
    "scaler = StandardScaler()\n",
    "scaler.fit(features_train_before_scaler)\n",
    "features_train = scaler.transform(features_train_before_scaler)\n",
    "features_test = scaler.transform(features_test)\n",
    "print(len(features_train))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a8f6e82",
   "metadata": {},
   "source": [
    "## Обучение моделей"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "359311a5",
   "metadata": {},
   "source": [
    "### Линейная регрессия"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "a30e9a3d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE на линейной регрессии -6.862568351100745\n"
     ]
    }
   ],
   "source": [
    "model_lr = LinearRegression()\n",
    "cv_model_lr = (cross_val_score(model_lr, \n",
    "                             features_train, \n",
    "                             target_train, \n",
    "                             cv=7, \n",
    "                             scoring='neg_mean_absolute_error').mean())\n",
    "print('MAE на линейной регрессии', cv_model_lr.mean())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe24eff4",
   "metadata": {},
   "source": [
    "### CatBoost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "4c389530",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "# Train for mean_absolute_error\n",
      "\n",
      "CPU times: user 16.7 s, sys: 700 ms, total: 17.4 s\n",
      "Wall time: 23.2 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "regressor = CatBoostRegressor(verbose=False, random_state=random_state)\n",
    "print('# Train for mean_absolute_error')\n",
    "print()\n",
    "cv_MAE_CBR = (cross_val_score(regressor, \n",
    "                             features_train, \n",
    "                             target_train, \n",
    "                             cv=5, \n",
    "                             scoring='neg_mean_absolute_error').mean() * -1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "7d7e01fc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean MAE from CV of CatBoostRegressor = 6.325392825393903\n",
      "\n",
      "Best parameters set found on development set:\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "{'nan_mode': 'Min',\n",
       " 'eval_metric': 'RMSE',\n",
       " 'iterations': 1000,\n",
       " 'sampling_frequency': 'PerTree',\n",
       " 'leaf_estimation_method': 'Newton',\n",
       " 'grow_policy': 'SymmetricTree',\n",
       " 'penalties_coefficient': 1,\n",
       " 'boosting_type': 'Plain',\n",
       " 'model_shrink_mode': 'Constant',\n",
       " 'feature_border_type': 'GreedyLogSum',\n",
       " 'bayesian_matrix_reg': 0.10000000149011612,\n",
       " 'force_unit_auto_pair_weights': False,\n",
       " 'l2_leaf_reg': 3,\n",
       " 'random_strength': 1,\n",
       " 'rsm': 1,\n",
       " 'boost_from_average': True,\n",
       " 'model_size_reg': 0.5,\n",
       " 'pool_metainfo_options': {'tags': {}},\n",
       " 'subsample': 0.800000011920929,\n",
       " 'use_best_model': False,\n",
       " 'random_seed': 310723,\n",
       " 'depth': 6,\n",
       " 'posterior_sampling': False,\n",
       " 'border_count': 254,\n",
       " 'classes_count': 0,\n",
       " 'auto_class_weights': 'None',\n",
       " 'sparse_features_conflict_fraction': 0,\n",
       " 'leaf_estimation_backtracking': 'AnyImprovement',\n",
       " 'best_model_min_trees': 1,\n",
       " 'model_shrink_rate': 0,\n",
       " 'min_data_in_leaf': 1,\n",
       " 'loss_function': 'RMSE',\n",
       " 'learning_rate': 0.0447160005569458,\n",
       " 'score_function': 'Cosine',\n",
       " 'task_type': 'CPU',\n",
       " 'leaf_estimation_iterations': 1,\n",
       " 'bootstrap_type': 'MVS',\n",
       " 'max_leaves': 64}"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print('Mean MAE from CV of CatBoostRegressor =', cv_MAE_CBR.mean())\n",
    "print()\n",
    "print(\"Best parameters set found on development set:\")\n",
    "print()\n",
    "best_params_CBR = CatBoostRegressor(verbose=False, \n",
    "                                    random_state=random_state).fit(features_train, \n",
    "                                        target_train).get_all_params()\n",
    "best_params_CBR"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ebaf3667",
   "metadata": {},
   "source": [
    "### LGBM "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "7d7d5602",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=7, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=7\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=13, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=13\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=19, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=19\n",
      "[LightGBM] [Warning] min_data_in_leaf is set with min_samples_leaf=1, min_child_samples=20 will be ignored. Current value: min_data_in_leaf=1\n",
      "Параметры: {'learning_rate': 0.1, 'max_depth': 1, 'min_samples_leaf': 1, 'n_estimators': 300, 'num_leaves': 2, 'random_state': 310723}\n",
      "\n",
      "MAE для LGBMRegressor - 6.30429494124146\n",
      "\n",
      "CPU times: user 26min 39s, sys: 18.2 s, total: 26min 58s\n",
      "Wall time: 27min 10s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "model_lgbm = LGBMRegressor()\n",
    "lgbm_params = [{'num_leaves':[x for x in range(2,31, 10)],\n",
    "                'max_depth':[x for x in range(1, 6, 2)],\n",
    "                'min_samples_leaf':[x for x in range(1, 20, 6)],\n",
    "                'learning_rate':[0.1],\n",
    "                'n_estimators':[300],\n",
    "                'random_state':[random_state]}]\n",
    "\n",
    "gscv = GridSearchCV(model_lgbm, lgbm_params, scoring='neg_mean_absolute_error', cv=5)\n",
    "\n",
    "gscv.fit(features_train, target_train)\n",
    "\n",
    "best_params_LGBMR = gscv.best_params_\n",
    "print('Параметры:', gscv.best_params_)\n",
    "print()\n",
    "\n",
    "MAE_lgbm = (max(gscv.cv_results_['mean_test_score'])*-1)\n",
    "print('MAE для LGBMRegressor -', MAE_lgbm)\n",
    "print()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "373fc51a",
   "metadata": {},
   "source": [
    "Лучший результат у модели LGBMR, ее проверим на тестовой выборке"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c09cf2c",
   "metadata": {},
   "source": [
    "## Тестирование лучшей модели"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "50621822",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE on test of LGBMRegressor = 6.3468525568785275\n",
      "CPU times: user 21 s, sys: 237 ms, total: 21.2 s\n",
      "Wall time: 21.4 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "lgbm = LGBMRegressor()\n",
    "lgbm.fit(features_train, target_train)\n",
    "test_predict = lgbm.predict(features_test)\n",
    "test_MAE_lgbm = mean_absolute_error(test_predict, target_test)\n",
    "print('MAE on test of LGBMRegressor =', test_MAE_lgbm)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40ed1133",
   "metadata": {},
   "source": [
    "### Сравнение с константной моделью"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "b496ce83",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7.858406619139298"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_dummy = DummyRegressor()\n",
    "model_dummy.fit(features_train, target_train)\n",
    "predict = model_dummy.predict(features_test)\n",
    "mae_dummy = mean_absolute_error(target_test, predict)\n",
    "mae_dummy"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49b14e50",
   "metadata": {},
   "source": [
    "У константной модели МАЕ выше, следовательно, наша модель прошла проверку на адекватность."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76b77111",
   "metadata": {},
   "source": [
    "### Исследование важности признаков"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "ffea6cc3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>feature</th>\n",
       "      <th>importance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>start_temp</td>\n",
       "      <td>466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>heating_time_sec</td>\n",
       "      <td>381</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Wire 1</td>\n",
       "      <td>322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>gas</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>full_power</td>\n",
       "      <td>313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Bulk 14</td>\n",
       "      <td>291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Bulk 12</td>\n",
       "      <td>175</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Bulk 6</td>\n",
       "      <td>135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Bulk 15</td>\n",
       "      <td>132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Bulk 3</td>\n",
       "      <td>114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Wire 2</td>\n",
       "      <td>108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Bulk 4</td>\n",
       "      <td>85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Wire 3</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Bulk 1</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Bulk 11</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Bulk 10</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Bulk 5</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Wire 6</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Bulk 2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Wire 9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Wire 8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Bulk 7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Bulk 8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Wire 7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Bulk 13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Wire 4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             feature  importance\n",
       "0         start_temp         466\n",
       "1   heating_time_sec         381\n",
       "2             Wire 1         322\n",
       "3                gas         316\n",
       "4         full_power         313\n",
       "5            Bulk 14         291\n",
       "6            Bulk 12         175\n",
       "7             Bulk 6         135\n",
       "8            Bulk 15         132\n",
       "9             Bulk 3         114\n",
       "10            Wire 2         108\n",
       "11            Bulk 4          85\n",
       "12            Wire 3          46\n",
       "13            Bulk 1          45\n",
       "14           Bulk 11          32\n",
       "15           Bulk 10          14\n",
       "16            Bulk 5          14\n",
       "17            Wire 6          11\n",
       "18            Bulk 2           0\n",
       "19            Wire 9           0\n",
       "20            Wire 8           0\n",
       "21            Bulk 7           0\n",
       "22            Bulk 8           0\n",
       "23            Wire 7           0\n",
       "24           Bulk 13           0\n",
       "25            Wire 4           0"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "importances = lgbm.feature_importances_\n",
    "feature_list = list(features_train_before_scaler.columns)\n",
    "feature_results = pd.DataFrame({'feature': feature_list,'importance': importances})\n",
    "feature_results = feature_results.sort_values('importance',ascending = False).reset_index(drop=True)\n",
    "feature_results"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "becf7b3b",
   "metadata": {},
   "source": [
    "Важными признаками являются начальная температура и время нагрева"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98b82bb5",
   "metadata": {},
   "source": [
    "## Итоговый вывод\n",
    "Были проведены исследовательский анализ данных и их предобработка.\n",
    "Обучены три модели: линейная регрессия, CatBoost и LGBMR. Наилучший результат в предсказании конечной температуры стали - у модели LGBMR с МАЕ = 6.3. Эту модель рекомендовано использовать."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b8e97fad",
   "metadata": {},
   "source": [
    "## Отчет\n",
    "\n",
    "**1. Сравнение решения и плана.**\n",
    "\n",
    "В начальном плане были пропущены этапы предобработки данных, сравнения лучшей модели с константной и исследование важности признаков. В ходе решения эти этапы добавились.\n",
    "\n",
    "**2. Описание трудностей проекта и как они были решены.**\n",
    "\n",
    "Трудности были связаны с: \n",
    "- пониманием технологического процесса (решение - знакомство с процессом обработки стали),\n",
    "- наличием большого числа пропусков в таблице с добавками (решение - замена пропусков нулями),\n",
    "- обучение LGBMR тормозилось из-за неправильного подбора гиперпараметров (решение - с помощью тимлида были найдены нужные числа)\n",
    "\n",
    "**3. Описание ключевых шагов решения.**\n",
    "\n",
    "Ключевых шагов решения нет.\n",
    "\n",
    "**4. Все признаки итоговой модели.**\n",
    "\n",
    "Итоговой моделью стала LGBMR, все признаки в нее подавались после масштабирования(скалирования).\n",
    "- Самый важный признак - начальная температура (start_temp), ее мы получили из таблицы data_temp_new.csv по ключу(key), определив первый по счету замер температуры в каждом ковше. Предварительно из таблицы были убраны значения температуры меньше 1500°С.\n",
    "- Продолжительность нагрева дугой в сек (heating_time_sec). Дельта полученных из таблицы data_ark_new.csv данных о времени начала и конца нагрева дугой.\n",
    "- Продувка стали газом (gas). Обрабатывать эти данные не было нужды.\n",
    "- Полная мощность (full_power). Корень из суммы квадратов Активной и Реактивной мощностей. Последние две сильно коррелировали, поэтому решено было объединить их в один новый признак. Из столбца Реактивная мощность предварительно было удалено одно отрицательное значение.\n",
    "- Данные о проволочных материалах(Wire) и сыпучих добавках(Bulk). Все пропуски были заменены нулями. Высокоскоррелированные признаки удалены.\n",
    "\n",
    "**5. Полное описание итоговой модели.**\n",
    "\n",
    "Итоговой моделью была выбрана LGBMR, которая показала МАЕ=6.3 на обучающей и тестовой выборках. Гиперпараметры модели: 'learning_rate': 0.1, 'max_depth': 1, 'min_samples_leaf': 1, 'n_estimators': 300, 'num_leaves': 2, 'random_state': 310723. "
   ]
  }
 ],
 "metadata": {
  "ExecuteTimeLog": [
   {
    "duration": 437,
    "start_time": "2023-08-03T16:08:50.732Z"
   },
   {
    "duration": 1299,
    "start_time": "2023-08-03T16:08:51.172Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-03T16:08:52.473Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-03T16:08:52.513Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-03T16:08:52.524Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-03T16:08:52.536Z"
   },
   {
    "duration": 60,
    "start_time": "2023-08-03T16:08:52.561Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-03T16:08:52.623Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-03T16:08:52.654Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-03T16:08:52.681Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-03T16:08:52.698Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-03T16:08:52.732Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-03T16:08:52.760Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-03T16:08:52.771Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-03T16:08:52.780Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-03T16:08:52.796Z"
   },
   {
    "duration": 53,
    "start_time": "2023-08-03T16:08:52.817Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-03T16:08:52.872Z"
   },
   {
    "duration": 71,
    "start_time": "2023-08-03T16:09:06.396Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-03T16:14:18.994Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-03T16:14:31.465Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-03T16:17:02.603Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-03T16:22:50.249Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-03T16:23:13.907Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-03T16:24:21.949Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-03T16:47:27.512Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-03T16:51:19.929Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-03T16:51:33.732Z"
   },
   {
    "duration": 762,
    "start_time": "2023-08-03T16:51:34.236Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-03T16:51:35.001Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-03T16:51:35.037Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-03T16:51:35.446Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-03T16:51:35.868Z"
   },
   {
    "duration": 60,
    "start_time": "2023-08-03T16:51:36.233Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-03T16:51:36.638Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-03T16:51:37.041Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-03T16:51:37.494Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-03T16:51:37.897Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-03T16:51:38.330Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-03T16:51:38.766Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-03T16:51:39.205Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-03T16:51:39.677Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-03T16:51:41.343Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-03T16:51:41.817Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-03T16:51:45.076Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-03T16:51:45.836Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-03T16:53:31.880Z"
   },
   {
    "duration": 3038,
    "start_time": "2023-08-03T16:54:41.651Z"
   },
   {
    "duration": 440,
    "start_time": "2023-08-03T16:55:06.629Z"
   },
   {
    "duration": 715,
    "start_time": "2023-08-03T16:55:07.071Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-03T16:55:07.788Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-03T16:55:07.826Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-03T16:55:07.836Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-03T16:55:07.853Z"
   },
   {
    "duration": 72,
    "start_time": "2023-08-03T16:55:07.865Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-03T16:55:07.938Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-03T16:55:07.958Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-03T16:55:07.982Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-03T16:55:07.998Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-03T16:55:08.053Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-03T16:55:08.064Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-03T16:55:08.081Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-03T16:55:08.092Z"
   },
   {
    "duration": 45,
    "start_time": "2023-08-03T16:55:08.109Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-03T16:55:08.156Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-03T16:55:08.178Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-03T16:55:08.201Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-03T16:55:08.215Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-03T17:02:07.826Z"
   },
   {
    "duration": 79,
    "start_time": "2023-08-03T17:04:06.553Z"
   },
   {
    "duration": 397,
    "start_time": "2023-08-03T17:04:36.064Z"
   },
   {
    "duration": 999,
    "start_time": "2023-08-03T17:04:36.463Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-03T17:04:37.464Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-03T17:04:37.504Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-03T17:04:37.515Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-03T17:04:37.551Z"
   },
   {
    "duration": 87,
    "start_time": "2023-08-03T17:04:37.561Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-03T17:04:37.650Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-03T17:04:37.670Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-03T17:04:37.704Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-03T17:04:37.734Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-03T17:04:37.779Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-03T17:04:37.789Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-03T17:04:37.804Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-03T17:04:37.820Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-03T17:04:37.846Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-03T17:04:37.872Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-03T17:04:37.895Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-03T17:04:37.915Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-03T17:04:37.956Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-03T17:04:37.963Z"
   },
   {
    "duration": 93,
    "start_time": "2023-08-03T17:04:37.974Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-03T17:04:55.020Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-03T17:06:07.137Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-03T17:06:27.361Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-03T17:06:29.009Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-03T17:06:29.405Z"
   },
   {
    "duration": 248,
    "start_time": "2023-08-07T20:56:06.154Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-07T20:56:06.404Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-07T20:56:06.410Z"
   },
   {
    "duration": 128,
    "start_time": "2023-08-07T20:56:06.433Z"
   },
   {
    "duration": 1766,
    "start_time": "2023-08-08T18:21:50.552Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-08T18:21:52.321Z"
   },
   {
    "duration": 1025,
    "start_time": "2023-08-08T18:21:52.325Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-08T18:21:53.353Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-08T18:21:53.391Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-08T18:21:53.415Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-08T18:21:53.452Z"
   },
   {
    "duration": 97,
    "start_time": "2023-08-08T18:21:53.476Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-08T18:21:53.575Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-08T18:21:53.613Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-08T18:21:53.649Z"
   },
   {
    "duration": 51,
    "start_time": "2023-08-08T18:21:53.667Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-08T18:21:53.719Z"
   },
   {
    "duration": 268,
    "start_time": "2023-08-08T18:21:53.735Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-08T18:21:54.004Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-08T18:21:54.019Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-08T18:21:54.028Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-08T18:21:54.045Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-08T18:21:54.087Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-08T18:21:54.116Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-08T18:21:54.142Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-08T18:21:54.157Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-08T18:21:54.163Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-08T18:21:54.195Z"
   },
   {
    "duration": 183,
    "start_time": "2023-08-08T18:21:54.210Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-08T18:21:54.395Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-08T18:21:54.402Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-08T18:21:54.435Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-08T18:21:54.441Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-08T18:21:54.495Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-08T18:21:54.511Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-08T18:21:54.534Z"
   },
   {
    "duration": 96,
    "start_time": "2023-08-08T18:21:54.564Z"
   },
   {
    "duration": 54,
    "start_time": "2023-08-08T18:21:54.663Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-08T18:21:54.718Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-08T18:21:54.728Z"
   },
   {
    "duration": 419,
    "start_time": "2023-08-08T18:21:54.775Z"
   },
   {
    "duration": 296,
    "start_time": "2023-08-08T18:21:55.198Z"
   },
   {
    "duration": 283,
    "start_time": "2023-08-08T18:21:55.496Z"
   },
   {
    "duration": 264,
    "start_time": "2023-08-08T18:21:55.780Z"
   },
   {
    "duration": 294,
    "start_time": "2023-08-08T18:21:56.047Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-08T18:21:56.342Z"
   },
   {
    "duration": 3141,
    "start_time": "2023-08-08T18:21:56.348Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-08T18:21:59.492Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-08T18:21:59.499Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-08T18:21:59.518Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-08T18:21:59.527Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-08T18:21:59.540Z"
   },
   {
    "duration": 762,
    "start_time": "2023-08-08T18:21:59.554Z"
   },
   {
    "duration": 23837,
    "start_time": "2023-08-08T18:22:00.387Z"
   },
   {
    "duration": 5000,
    "start_time": "2023-08-08T18:22:24.226Z"
   },
   {
    "duration": 1417,
    "start_time": "2023-08-08T19:26:55.423Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-08T19:26:56.842Z"
   },
   {
    "duration": 1214,
    "start_time": "2023-08-08T19:26:56.846Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-08T19:26:58.062Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-08T19:26:58.097Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-08T19:26:58.121Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-08T19:26:58.149Z"
   },
   {
    "duration": 78,
    "start_time": "2023-08-08T19:26:58.187Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-08T19:26:58.267Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-08T19:26:58.289Z"
   },
   {
    "duration": 73,
    "start_time": "2023-08-08T19:26:58.326Z"
   },
   {
    "duration": 116,
    "start_time": "2023-08-08T19:26:58.400Z"
   },
   {
    "duration": 85,
    "start_time": "2023-08-08T19:26:58.518Z"
   },
   {
    "duration": 269,
    "start_time": "2023-08-08T19:26:58.605Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-08T19:26:58.875Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-08T19:26:58.889Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-08T19:26:58.902Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-08T19:26:58.920Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-08T19:26:58.955Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-08T19:26:58.989Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-08T19:26:59.019Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-08T19:26:59.042Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-08T19:26:59.062Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-08T19:26:59.078Z"
   },
   {
    "duration": 183,
    "start_time": "2023-08-08T19:26:59.104Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-08T19:26:59.289Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-08T19:26:59.294Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-08T19:26:59.324Z"
   },
   {
    "duration": 52,
    "start_time": "2023-08-08T19:26:59.333Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-08T19:26:59.386Z"
   },
   {
    "duration": 47,
    "start_time": "2023-08-08T19:26:59.397Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-08T19:26:59.446Z"
   },
   {
    "duration": 82,
    "start_time": "2023-08-08T19:26:59.481Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-08T19:26:59.565Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-08T19:26:59.601Z"
   },
   {
    "duration": 40,
    "start_time": "2023-08-08T19:26:59.607Z"
   },
   {
    "duration": 312,
    "start_time": "2023-08-08T19:26:59.649Z"
   },
   {
    "duration": 238,
    "start_time": "2023-08-08T19:26:59.963Z"
   },
   {
    "duration": 246,
    "start_time": "2023-08-08T19:27:00.203Z"
   },
   {
    "duration": 252,
    "start_time": "2023-08-08T19:27:00.451Z"
   },
   {
    "duration": 253,
    "start_time": "2023-08-08T19:27:00.705Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-08T19:27:00.960Z"
   },
   {
    "duration": 2915,
    "start_time": "2023-08-08T19:27:00.967Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-08T19:27:03.885Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-08T19:27:03.892Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-08T19:27:03.931Z"
   },
   {
    "duration": 99,
    "start_time": "2023-08-08T19:27:03.960Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-08T19:27:04.062Z"
   },
   {
    "duration": 180,
    "start_time": "2023-08-08T19:27:04.112Z"
   },
   {
    "duration": 19544,
    "start_time": "2023-08-08T19:27:04.294Z"
   },
   {
    "duration": 4215,
    "start_time": "2023-08-08T19:27:23.840Z"
   },
   {
    "duration": 1480,
    "start_time": "2023-08-08T20:15:16.529Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-08T20:15:18.011Z"
   },
   {
    "duration": 726,
    "start_time": "2023-08-08T20:15:18.016Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-08T20:15:18.744Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-08T20:15:18.778Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-08T20:15:18.788Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-08T20:15:18.804Z"
   },
   {
    "duration": 64,
    "start_time": "2023-08-08T20:15:18.824Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-08T20:15:18.890Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-08T20:15:18.912Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-08T20:15:18.944Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-08T20:15:18.968Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-08T20:15:19.007Z"
   },
   {
    "duration": 271,
    "start_time": "2023-08-08T20:15:19.017Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-08T20:15:19.290Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-08T20:15:19.299Z"
   },
   {
    "duration": 42,
    "start_time": "2023-08-08T20:15:19.309Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-08T20:15:19.353Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-08T20:15:19.384Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-08T20:15:19.404Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-08T20:15:19.440Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-08T20:15:19.467Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-08T20:15:19.493Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-08T20:15:19.511Z"
   },
   {
    "duration": 186,
    "start_time": "2023-08-08T20:15:19.526Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-08T20:15:19.714Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-08T20:15:19.719Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-08T20:15:19.744Z"
   },
   {
    "duration": 63,
    "start_time": "2023-08-08T20:15:19.751Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-08T20:15:19.816Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-08T20:15:19.829Z"
   },
   {
    "duration": 49,
    "start_time": "2023-08-08T20:15:19.853Z"
   },
   {
    "duration": 85,
    "start_time": "2023-08-08T20:15:19.904Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-08T20:15:19.991Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-08T20:15:20.029Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-08T20:15:20.044Z"
   },
   {
    "duration": 312,
    "start_time": "2023-08-08T20:15:20.075Z"
   },
   {
    "duration": 254,
    "start_time": "2023-08-08T20:15:20.389Z"
   },
   {
    "duration": 256,
    "start_time": "2023-08-08T20:15:20.646Z"
   },
   {
    "duration": 266,
    "start_time": "2023-08-08T20:15:20.903Z"
   },
   {
    "duration": 274,
    "start_time": "2023-08-08T20:15:21.170Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-08T20:15:21.446Z"
   },
   {
    "duration": 2811,
    "start_time": "2023-08-08T20:15:21.451Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-08T20:15:24.265Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-08T20:15:24.270Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-08T20:15:24.281Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-08T20:15:24.306Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-08T20:15:24.322Z"
   },
   {
    "duration": 240,
    "start_time": "2023-08-08T20:15:24.352Z"
   },
   {
    "duration": 20127,
    "start_time": "2023-08-08T20:15:24.594Z"
   },
   {
    "duration": 4292,
    "start_time": "2023-08-08T20:15:44.723Z"
   },
   {
    "duration": 1789,
    "start_time": "2023-08-09T08:12:22.616Z"
   },
   {
    "duration": 2,
    "start_time": "2023-08-09T08:12:24.408Z"
   },
   {
    "duration": 934,
    "start_time": "2023-08-09T08:12:24.412Z"
   },
   {
    "duration": 42,
    "start_time": "2023-08-09T08:12:25.348Z"
   },
   {
    "duration": 98,
    "start_time": "2023-08-09T08:12:25.392Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-09T08:12:25.492Z"
   },
   {
    "duration": 57,
    "start_time": "2023-08-09T08:12:25.522Z"
   },
   {
    "duration": 139,
    "start_time": "2023-08-09T08:12:25.580Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-09T08:12:25.720Z"
   },
   {
    "duration": 58,
    "start_time": "2023-08-09T08:12:25.755Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-09T08:12:25.814Z"
   },
   {
    "duration": 58,
    "start_time": "2023-08-09T08:12:25.832Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-09T08:12:25.891Z"
   },
   {
    "duration": 280,
    "start_time": "2023-08-09T08:12:25.915Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T08:12:26.197Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-09T08:12:26.205Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-09T08:12:26.227Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-09T08:12:26.256Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-09T08:12:26.288Z"
   },
   {
    "duration": 61,
    "start_time": "2023-08-09T08:12:26.314Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-09T08:12:26.377Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T08:12:26.404Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T08:12:26.412Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-09T08:12:26.422Z"
   },
   {
    "duration": 269,
    "start_time": "2023-08-09T08:12:26.455Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T08:12:26.726Z"
   },
   {
    "duration": 59,
    "start_time": "2023-08-09T08:12:26.732Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T08:12:26.795Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-09T08:12:26.807Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-09T08:12:26.847Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-09T08:12:26.876Z"
   },
   {
    "duration": 40,
    "start_time": "2023-08-09T08:12:26.900Z"
   },
   {
    "duration": 135,
    "start_time": "2023-08-09T08:12:26.941Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-09T08:12:27.079Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T08:12:27.110Z"
   },
   {
    "duration": 50,
    "start_time": "2023-08-09T08:12:27.132Z"
   },
   {
    "duration": 443,
    "start_time": "2023-08-09T08:12:27.186Z"
   },
   {
    "duration": 311,
    "start_time": "2023-08-09T08:12:27.631Z"
   },
   {
    "duration": 294,
    "start_time": "2023-08-09T08:12:27.944Z"
   },
   {
    "duration": 308,
    "start_time": "2023-08-09T08:12:28.240Z"
   },
   {
    "duration": 310,
    "start_time": "2023-08-09T08:12:28.550Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-09T08:12:28.865Z"
   },
   {
    "duration": 3276,
    "start_time": "2023-08-09T08:12:28.875Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T08:12:32.153Z"
   },
   {
    "duration": 35,
    "start_time": "2023-08-09T08:12:32.165Z"
   },
   {
    "duration": 104,
    "start_time": "2023-08-09T08:12:32.202Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-09T08:12:32.308Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-09T08:12:32.323Z"
   },
   {
    "duration": 433,
    "start_time": "2023-08-09T08:12:32.349Z"
   },
   {
    "duration": 22529,
    "start_time": "2023-08-09T08:12:32.857Z"
   },
   {
    "duration": 4543,
    "start_time": "2023-08-09T08:12:55.388Z"
   },
   {
    "duration": 1017625,
    "start_time": "2023-08-09T08:12:59.933Z"
   },
   {
    "duration": 398,
    "start_time": "2023-08-09T08:29:57.559Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T08:29:57.958Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-09T08:29:57.965Z"
   },
   {
    "duration": 217,
    "start_time": "2023-08-09T08:29:57.988Z"
   },
   {
    "duration": 1573,
    "start_time": "2023-08-09T08:42:36.240Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T08:42:37.816Z"
   },
   {
    "duration": 689,
    "start_time": "2023-08-09T08:42:37.821Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-09T08:42:38.512Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T08:42:38.552Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-09T08:42:38.563Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-09T08:42:38.583Z"
   },
   {
    "duration": 71,
    "start_time": "2023-08-09T08:42:38.606Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-09T08:42:38.679Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-09T08:42:38.700Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-09T08:42:38.739Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-09T08:42:38.778Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T08:42:38.828Z"
   },
   {
    "duration": 266,
    "start_time": "2023-08-09T08:42:38.856Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T08:42:39.124Z"
   },
   {
    "duration": 77,
    "start_time": "2023-08-09T08:42:39.136Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-09T08:42:39.216Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T08:42:39.246Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-09T08:42:39.281Z"
   },
   {
    "duration": 58,
    "start_time": "2023-08-09T08:42:39.317Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T08:42:39.377Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-09T08:42:39.399Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T08:42:39.408Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-09T08:42:39.423Z"
   },
   {
    "duration": 203,
    "start_time": "2023-08-09T08:42:39.460Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T08:42:39.665Z"
   },
   {
    "duration": 60,
    "start_time": "2023-08-09T08:42:39.673Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T08:42:39.735Z"
   },
   {
    "duration": 42,
    "start_time": "2023-08-09T08:42:39.744Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T08:42:39.788Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-09T08:42:39.800Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-09T08:42:39.838Z"
   },
   {
    "duration": 93,
    "start_time": "2023-08-09T08:42:39.881Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-09T08:42:39.976Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T08:42:40.004Z"
   },
   {
    "duration": 63,
    "start_time": "2023-08-09T08:42:40.010Z"
   },
   {
    "duration": 336,
    "start_time": "2023-08-09T08:42:40.075Z"
   },
   {
    "duration": 286,
    "start_time": "2023-08-09T08:42:40.413Z"
   },
   {
    "duration": 270,
    "start_time": "2023-08-09T08:42:40.701Z"
   },
   {
    "duration": 312,
    "start_time": "2023-08-09T08:42:40.973Z"
   },
   {
    "duration": 323,
    "start_time": "2023-08-09T08:42:41.289Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T08:42:41.614Z"
   },
   {
    "duration": 3192,
    "start_time": "2023-08-09T08:42:41.624Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T08:42:44.817Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-09T08:42:44.824Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T08:42:44.838Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-09T08:42:44.855Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T08:42:44.876Z"
   },
   {
    "duration": 164,
    "start_time": "2023-08-09T08:42:44.891Z"
   },
   {
    "duration": 24471,
    "start_time": "2023-08-09T08:42:45.057Z"
   },
   {
    "duration": 4647,
    "start_time": "2023-08-09T08:43:09.530Z"
   },
   {
    "duration": 1456,
    "start_time": "2023-08-09T09:11:20.547Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T09:11:22.005Z"
   },
   {
    "duration": 1105,
    "start_time": "2023-08-09T09:11:22.009Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-09T09:11:23.117Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T09:11:23.149Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-09T09:11:23.160Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T09:11:23.193Z"
   },
   {
    "duration": 80,
    "start_time": "2023-08-09T09:11:23.215Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-09T09:11:23.296Z"
   },
   {
    "duration": 35,
    "start_time": "2023-08-09T09:11:23.317Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-09T09:11:23.353Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T09:11:23.386Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-09T09:11:23.420Z"
   },
   {
    "duration": 242,
    "start_time": "2023-08-09T09:11:23.453Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-09T09:11:23.697Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T09:11:23.705Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-09T09:11:23.722Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-09T09:11:23.761Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T09:11:23.794Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-09T09:11:23.816Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T09:11:23.857Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-09T09:11:23.872Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T09:11:23.893Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-09T09:11:23.910Z"
   },
   {
    "duration": 173,
    "start_time": "2023-08-09T09:11:23.938Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T09:11:24.113Z"
   },
   {
    "duration": 42,
    "start_time": "2023-08-09T09:11:24.118Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T09:11:24.164Z"
   },
   {
    "duration": 66,
    "start_time": "2023-08-09T09:11:24.175Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T09:11:24.242Z"
   },
   {
    "duration": 61,
    "start_time": "2023-08-09T09:11:24.254Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-09T09:11:24.317Z"
   },
   {
    "duration": 82,
    "start_time": "2023-08-09T09:11:24.350Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T09:11:24.434Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T09:11:24.468Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-09T09:11:24.480Z"
   },
   {
    "duration": 328,
    "start_time": "2023-08-09T09:11:24.512Z"
   },
   {
    "duration": 252,
    "start_time": "2023-08-09T09:11:24.842Z"
   },
   {
    "duration": 290,
    "start_time": "2023-08-09T09:11:25.096Z"
   },
   {
    "duration": 284,
    "start_time": "2023-08-09T09:11:25.389Z"
   },
   {
    "duration": 257,
    "start_time": "2023-08-09T09:11:25.675Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T09:11:25.935Z"
   },
   {
    "duration": 2933,
    "start_time": "2023-08-09T09:11:25.943Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T09:11:28.878Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-09T09:11:28.886Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T09:11:28.899Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-09T09:11:28.910Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-09T09:11:28.930Z"
   },
   {
    "duration": 110,
    "start_time": "2023-08-09T09:11:28.948Z"
   },
   {
    "duration": 20233,
    "start_time": "2023-08-09T09:11:29.060Z"
   },
   {
    "duration": 4405,
    "start_time": "2023-08-09T09:11:49.295Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T09:11:53.701Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-09T09:11:53.707Z"
   },
   {
    "duration": 5498061,
    "start_time": "2023-08-09T09:11:53.720Z"
   },
   {
    "duration": 975,
    "start_time": "2023-08-09T10:43:31.783Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T10:43:32.760Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-09T10:43:32.768Z"
   },
   {
    "duration": 1576,
    "start_time": "2023-08-09T10:56:51.393Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T10:56:52.971Z"
   },
   {
    "duration": 1108,
    "start_time": "2023-08-09T10:56:52.976Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-09T10:56:54.086Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T10:56:54.122Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-09T10:56:54.132Z"
   },
   {
    "duration": 56,
    "start_time": "2023-08-09T10:56:54.152Z"
   },
   {
    "duration": 112,
    "start_time": "2023-08-09T10:56:54.210Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T10:56:54.323Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-09T10:56:54.354Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-09T10:56:54.386Z"
   },
   {
    "duration": 51,
    "start_time": "2023-08-09T10:56:54.411Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-09T10:56:54.464Z"
   },
   {
    "duration": 358,
    "start_time": "2023-08-09T10:56:54.485Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T10:56:54.844Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-09T10:56:54.859Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-09T10:56:54.889Z"
   },
   {
    "duration": 91,
    "start_time": "2023-08-09T10:56:54.935Z"
   },
   {
    "duration": 97,
    "start_time": "2023-08-09T10:56:55.027Z"
   },
   {
    "duration": 35,
    "start_time": "2023-08-09T10:56:55.126Z"
   },
   {
    "duration": 46,
    "start_time": "2023-08-09T10:56:55.163Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-09T10:56:55.211Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-09T10:56:55.253Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-09T10:56:55.283Z"
   },
   {
    "duration": 198,
    "start_time": "2023-08-09T10:56:55.304Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T10:56:55.504Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-09T10:56:55.510Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-09T10:56:55.556Z"
   },
   {
    "duration": 42,
    "start_time": "2023-08-09T10:56:55.572Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T10:56:55.616Z"
   },
   {
    "duration": 51,
    "start_time": "2023-08-09T10:56:55.626Z"
   },
   {
    "duration": 45,
    "start_time": "2023-08-09T10:56:55.678Z"
   },
   {
    "duration": 90,
    "start_time": "2023-08-09T10:56:55.724Z"
   },
   {
    "duration": 45,
    "start_time": "2023-08-09T10:56:55.816Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T10:56:55.862Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-09T10:56:55.869Z"
   },
   {
    "duration": 339,
    "start_time": "2023-08-09T10:56:55.910Z"
   },
   {
    "duration": 253,
    "start_time": "2023-08-09T10:56:56.254Z"
   },
   {
    "duration": 248,
    "start_time": "2023-08-09T10:56:56.509Z"
   },
   {
    "duration": 248,
    "start_time": "2023-08-09T10:56:56.759Z"
   },
   {
    "duration": 270,
    "start_time": "2023-08-09T10:56:57.011Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T10:56:57.283Z"
   },
   {
    "duration": 2905,
    "start_time": "2023-08-09T10:56:57.291Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T10:57:00.197Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-09T10:57:00.203Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-09T10:57:00.221Z"
   },
   {
    "duration": 57,
    "start_time": "2023-08-09T10:57:00.237Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-09T10:57:00.296Z"
   },
   {
    "duration": 227,
    "start_time": "2023-08-09T10:57:00.336Z"
   },
   {
    "duration": 22844,
    "start_time": "2023-08-09T10:57:00.565Z"
   },
   {
    "duration": 5004,
    "start_time": "2023-08-09T10:57:23.411Z"
   },
   {
    "duration": 1678,
    "start_time": "2023-08-09T11:26:34.664Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T11:26:36.345Z"
   },
   {
    "duration": 759,
    "start_time": "2023-08-09T11:26:36.350Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-09T11:26:37.111Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T11:26:37.149Z"
   },
   {
    "duration": 51,
    "start_time": "2023-08-09T11:26:37.164Z"
   },
   {
    "duration": 49,
    "start_time": "2023-08-09T11:26:37.218Z"
   },
   {
    "duration": 86,
    "start_time": "2023-08-09T11:26:37.269Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T11:26:37.356Z"
   },
   {
    "duration": 35,
    "start_time": "2023-08-09T11:26:37.379Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-09T11:26:37.416Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-09T11:26:37.457Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-09T11:26:37.501Z"
   },
   {
    "duration": 299,
    "start_time": "2023-08-09T11:26:37.514Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T11:26:37.815Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T11:26:37.825Z"
   },
   {
    "duration": 40,
    "start_time": "2023-08-09T11:26:37.840Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-09T11:26:37.882Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-09T11:26:37.911Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-09T11:26:37.935Z"
   },
   {
    "duration": 46,
    "start_time": "2023-08-09T11:26:37.971Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T11:26:38.019Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-09T11:26:38.027Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-09T11:26:38.040Z"
   },
   {
    "duration": 171,
    "start_time": "2023-08-09T11:26:38.056Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T11:26:38.229Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-09T11:26:38.234Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T11:26:38.267Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-09T11:26:38.275Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T11:26:38.306Z"
   },
   {
    "duration": 40,
    "start_time": "2023-08-09T11:26:38.317Z"
   },
   {
    "duration": 35,
    "start_time": "2023-08-09T11:26:38.359Z"
   },
   {
    "duration": 99,
    "start_time": "2023-08-09T11:26:38.396Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-09T11:26:38.497Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T11:26:38.526Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-09T11:26:38.532Z"
   },
   {
    "duration": 313,
    "start_time": "2023-08-09T11:26:38.574Z"
   },
   {
    "duration": 253,
    "start_time": "2023-08-09T11:26:38.889Z"
   },
   {
    "duration": 285,
    "start_time": "2023-08-09T11:26:39.143Z"
   },
   {
    "duration": 262,
    "start_time": "2023-08-09T11:26:39.431Z"
   },
   {
    "duration": 267,
    "start_time": "2023-08-09T11:26:39.695Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T11:26:39.963Z"
   },
   {
    "duration": 3243,
    "start_time": "2023-08-09T11:26:39.969Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T11:26:43.214Z"
   },
   {
    "duration": 40,
    "start_time": "2023-08-09T11:26:43.221Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-09T11:26:43.263Z"
   },
   {
    "duration": 102,
    "start_time": "2023-08-09T11:26:43.303Z"
   },
   {
    "duration": 49,
    "start_time": "2023-08-09T11:26:43.407Z"
   },
   {
    "duration": 210,
    "start_time": "2023-08-09T11:26:43.458Z"
   },
   {
    "duration": 24446,
    "start_time": "2023-08-09T11:26:43.759Z"
   },
   {
    "duration": 4520,
    "start_time": "2023-08-09T11:27:08.207Z"
   },
   {
    "duration": 46,
    "start_time": "2023-08-09T11:27:12.729Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-09T11:27:12.778Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-09T11:27:12.779Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-09T11:27:12.781Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-09T11:27:12.783Z"
   },
   {
    "duration": 191310,
    "start_time": "2023-08-09T11:27:46.747Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T11:32:36.376Z"
   },
   {
    "duration": 5712,
    "start_time": "2023-08-09T11:32:42.048Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-09T11:32:54.310Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T11:32:56.337Z"
   },
   {
    "duration": 1645,
    "start_time": "2023-08-09T11:33:13.234Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T11:33:14.882Z"
   },
   {
    "duration": 696,
    "start_time": "2023-08-09T11:33:14.890Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-09T11:33:15.588Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-09T11:33:15.624Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-09T11:33:15.648Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-09T11:33:15.698Z"
   },
   {
    "duration": 100,
    "start_time": "2023-08-09T11:33:15.728Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T11:33:15.832Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-09T11:33:15.866Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-09T11:33:15.901Z"
   },
   {
    "duration": 69,
    "start_time": "2023-08-09T11:33:15.925Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T11:33:15.996Z"
   },
   {
    "duration": 288,
    "start_time": "2023-08-09T11:33:16.013Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T11:33:16.302Z"
   },
   {
    "duration": 55,
    "start_time": "2023-08-09T11:33:16.315Z"
   },
   {
    "duration": 52,
    "start_time": "2023-08-09T11:33:16.371Z"
   },
   {
    "duration": 46,
    "start_time": "2023-08-09T11:33:16.425Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-09T11:33:16.473Z"
   },
   {
    "duration": 35,
    "start_time": "2023-08-09T11:33:16.509Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-09T11:33:16.546Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T11:33:16.573Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-09T11:33:16.583Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-09T11:33:16.608Z"
   },
   {
    "duration": 216,
    "start_time": "2023-08-09T11:33:16.631Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T11:33:16.849Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-09T11:33:16.860Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-09T11:33:16.898Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-09T11:33:16.913Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T11:33:16.952Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T11:33:16.965Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-09T11:33:16.999Z"
   },
   {
    "duration": 142,
    "start_time": "2023-08-09T11:33:17.037Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-09T11:33:17.181Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T11:33:17.208Z"
   },
   {
    "duration": 54,
    "start_time": "2023-08-09T11:33:17.242Z"
   },
   {
    "duration": 399,
    "start_time": "2023-08-09T11:33:17.298Z"
   },
   {
    "duration": 278,
    "start_time": "2023-08-09T11:33:17.699Z"
   },
   {
    "duration": 279,
    "start_time": "2023-08-09T11:33:17.979Z"
   },
   {
    "duration": 287,
    "start_time": "2023-08-09T11:33:18.261Z"
   },
   {
    "duration": 308,
    "start_time": "2023-08-09T11:33:18.549Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-09T11:33:18.860Z"
   },
   {
    "duration": 3163,
    "start_time": "2023-08-09T11:33:18.873Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T11:33:22.038Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-09T11:33:22.046Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-09T11:33:22.077Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-09T11:33:22.097Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T11:33:22.119Z"
   },
   {
    "duration": 826,
    "start_time": "2023-08-09T11:33:22.140Z"
   },
   {
    "duration": 23410,
    "start_time": "2023-08-09T11:33:22.974Z"
   },
   {
    "duration": 4805,
    "start_time": "2023-08-09T11:33:46.386Z"
   },
   {
    "duration": 721667,
    "start_time": "2023-08-09T11:33:51.193Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T11:45:52.861Z"
   },
   {
    "duration": 398,
    "start_time": "2023-08-09T11:45:52.866Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-09T11:45:53.266Z"
   },
   {
    "duration": 89,
    "start_time": "2023-08-09T11:45:53.274Z"
   },
   {
    "duration": 1482,
    "start_time": "2023-08-09T17:08:07.015Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T17:08:08.499Z"
   },
   {
    "duration": 678,
    "start_time": "2023-08-09T17:08:08.505Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-09T17:08:09.186Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T17:08:09.227Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T17:08:09.238Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-09T17:08:09.249Z"
   },
   {
    "duration": 63,
    "start_time": "2023-08-09T17:08:09.262Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-09T17:08:09.326Z"
   },
   {
    "duration": 60,
    "start_time": "2023-08-09T17:08:09.367Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T17:08:09.429Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-09T17:08:09.451Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T17:08:09.490Z"
   },
   {
    "duration": 302,
    "start_time": "2023-08-09T17:08:09.502Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-09T17:08:09.806Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T17:08:09.815Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T17:08:09.829Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-09T17:08:09.863Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-09T17:08:09.883Z"
   },
   {
    "duration": 52,
    "start_time": "2023-08-09T17:08:09.906Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-09T17:08:09.960Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T17:08:09.975Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T17:08:09.982Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T17:08:09.997Z"
   },
   {
    "duration": 221,
    "start_time": "2023-08-09T17:08:10.012Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T17:08:10.235Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T17:08:10.240Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T17:08:10.276Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-09T17:08:10.282Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-09T17:08:10.313Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-09T17:08:10.325Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-09T17:08:10.368Z"
   },
   {
    "duration": 100,
    "start_time": "2023-08-09T17:08:10.399Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-09T17:08:10.501Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T17:08:10.528Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-09T17:08:10.544Z"
   },
   {
    "duration": 321,
    "start_time": "2023-08-09T17:08:10.583Z"
   },
   {
    "duration": 261,
    "start_time": "2023-08-09T17:08:10.905Z"
   },
   {
    "duration": 252,
    "start_time": "2023-08-09T17:08:11.167Z"
   },
   {
    "duration": 259,
    "start_time": "2023-08-09T17:08:11.421Z"
   },
   {
    "duration": 267,
    "start_time": "2023-08-09T17:08:11.682Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T17:08:11.953Z"
   },
   {
    "duration": 3085,
    "start_time": "2023-08-09T17:08:11.958Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T17:08:15.045Z"
   },
   {
    "duration": 35,
    "start_time": "2023-08-09T17:08:15.051Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-09T17:08:15.088Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-09T17:08:15.116Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-09T17:08:15.154Z"
   },
   {
    "duration": 274,
    "start_time": "2023-08-09T17:08:15.189Z"
   },
   {
    "duration": 20455,
    "start_time": "2023-08-09T17:08:15.465Z"
   },
   {
    "duration": 4556,
    "start_time": "2023-08-09T17:08:35.921Z"
   },
   {
    "duration": 1568,
    "start_time": "2023-08-09T17:24:40.701Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T17:24:42.271Z"
   },
   {
    "duration": 1065,
    "start_time": "2023-08-09T17:24:42.276Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-09T17:24:43.343Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T17:24:43.386Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T17:24:43.395Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T17:24:43.406Z"
   },
   {
    "duration": 86,
    "start_time": "2023-08-09T17:24:43.417Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-09T17:24:43.505Z"
   },
   {
    "duration": 46,
    "start_time": "2023-08-09T17:24:43.532Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-09T17:24:43.580Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-09T17:24:43.597Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-09T17:24:43.629Z"
   },
   {
    "duration": 280,
    "start_time": "2023-08-09T17:24:43.660Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-09T17:24:43.942Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-09T17:24:43.956Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-09T17:24:43.989Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-09T17:24:44.008Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-09T17:24:44.039Z"
   },
   {
    "duration": 184,
    "start_time": "2023-08-09T17:24:44.063Z"
   },
   {
    "duration": 186,
    "start_time": "2023-08-09T17:24:44.250Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-09T17:24:44.437Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T17:24:44.462Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-09T17:24:44.479Z"
   },
   {
    "duration": 176,
    "start_time": "2023-08-09T17:24:44.492Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T17:24:44.671Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-09T17:24:44.676Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T17:24:44.699Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-09T17:24:44.704Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-09T17:24:44.733Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-09T17:24:44.765Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-09T17:24:44.800Z"
   },
   {
    "duration": 90,
    "start_time": "2023-08-09T17:24:44.829Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-09T17:24:44.921Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T17:24:44.959Z"
   },
   {
    "duration": 40,
    "start_time": "2023-08-09T17:24:44.967Z"
   },
   {
    "duration": 379,
    "start_time": "2023-08-09T17:24:45.009Z"
   },
   {
    "duration": 263,
    "start_time": "2023-08-09T17:24:45.390Z"
   },
   {
    "duration": 391,
    "start_time": "2023-08-09T17:24:45.656Z"
   },
   {
    "duration": 269,
    "start_time": "2023-08-09T17:24:46.049Z"
   },
   {
    "duration": 287,
    "start_time": "2023-08-09T17:24:46.322Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T17:24:46.611Z"
   },
   {
    "duration": 3090,
    "start_time": "2023-08-09T17:24:46.617Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T17:24:49.709Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T17:24:49.715Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T17:24:49.723Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-09T17:24:49.733Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-09T17:24:49.759Z"
   },
   {
    "duration": 200,
    "start_time": "2023-08-09T17:24:49.777Z"
   },
   {
    "duration": 22427,
    "start_time": "2023-08-09T17:24:50.055Z"
   },
   {
    "duration": 4547,
    "start_time": "2023-08-09T17:25:12.484Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T17:25:17.033Z"
   },
   {
    "duration": 1596,
    "start_time": "2023-08-09T17:27:05.727Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T17:27:07.324Z"
   },
   {
    "duration": 1188,
    "start_time": "2023-08-09T17:27:07.328Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T17:27:08.518Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-09T17:27:08.552Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-09T17:27:08.564Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-09T17:27:08.587Z"
   },
   {
    "duration": 77,
    "start_time": "2023-08-09T17:27:08.596Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-09T17:27:08.675Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T17:27:08.695Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-09T17:27:08.716Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-09T17:27:08.757Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T17:27:08.788Z"
   },
   {
    "duration": 301,
    "start_time": "2023-08-09T17:27:08.797Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-09T17:27:09.100Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T17:27:09.109Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-09T17:27:09.120Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-09T17:27:09.156Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-09T17:27:09.186Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-09T17:27:09.216Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T17:27:09.241Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T17:27:09.275Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T17:27:09.287Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-09T17:27:09.297Z"
   },
   {
    "duration": 203,
    "start_time": "2023-08-09T17:27:09.310Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T17:27:09.515Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-09T17:27:09.520Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-09T17:27:09.563Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-09T17:27:09.582Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T17:27:09.615Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-09T17:27:09.625Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-09T17:27:09.644Z"
   },
   {
    "duration": 92,
    "start_time": "2023-08-09T17:27:09.694Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-09T17:27:09.787Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T17:27:09.812Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-09T17:27:09.818Z"
   },
   {
    "duration": 349,
    "start_time": "2023-08-09T17:27:09.868Z"
   },
   {
    "duration": 276,
    "start_time": "2023-08-09T17:27:10.219Z"
   },
   {
    "duration": 295,
    "start_time": "2023-08-09T17:27:10.497Z"
   },
   {
    "duration": 268,
    "start_time": "2023-08-09T17:27:10.794Z"
   },
   {
    "duration": 291,
    "start_time": "2023-08-09T17:27:11.065Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T17:27:11.358Z"
   },
   {
    "duration": 3303,
    "start_time": "2023-08-09T17:27:11.365Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T17:27:14.670Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-09T17:27:14.676Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-09T17:27:14.688Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-09T17:27:14.701Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-09T17:27:14.721Z"
   },
   {
    "duration": 410,
    "start_time": "2023-08-09T17:27:14.745Z"
   },
   {
    "duration": 22754,
    "start_time": "2023-08-09T17:27:15.157Z"
   },
   {
    "duration": 4501,
    "start_time": "2023-08-09T17:27:37.913Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T17:27:42.416Z"
   },
   {
    "duration": 1428,
    "start_time": "2023-08-09T20:01:56.202Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T20:01:57.632Z"
   },
   {
    "duration": 1002,
    "start_time": "2023-08-09T20:01:57.636Z"
   },
   {
    "duration": 40,
    "start_time": "2023-08-09T20:01:58.640Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T20:01:58.682Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-09T20:01:58.692Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-09T20:01:58.719Z"
   },
   {
    "duration": 71,
    "start_time": "2023-08-09T20:01:58.745Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-09T20:01:58.817Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-09T20:01:58.838Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T20:01:58.874Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-09T20:01:58.891Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T20:01:58.920Z"
   },
   {
    "duration": 281,
    "start_time": "2023-08-09T20:01:58.929Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-09T20:01:59.211Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-09T20:01:59.220Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-09T20:01:59.239Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-09T20:01:59.273Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T20:01:59.302Z"
   },
   {
    "duration": 45,
    "start_time": "2023-08-09T20:01:59.324Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-09T20:01:59.371Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T20:01:59.385Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T20:01:59.394Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-09T20:01:59.408Z"
   },
   {
    "duration": 201,
    "start_time": "2023-08-09T20:01:59.427Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T20:01:59.630Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-09T20:01:59.635Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T20:01:59.675Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-09T20:01:59.680Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-09T20:01:59.711Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-09T20:01:59.721Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T20:01:59.765Z"
   },
   {
    "duration": 93,
    "start_time": "2023-08-09T20:01:59.800Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-09T20:01:59.895Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T20:01:59.923Z"
   },
   {
    "duration": 47,
    "start_time": "2023-08-09T20:01:59.929Z"
   },
   {
    "duration": 343,
    "start_time": "2023-08-09T20:01:59.978Z"
   },
   {
    "duration": 284,
    "start_time": "2023-08-09T20:02:00.323Z"
   },
   {
    "duration": 272,
    "start_time": "2023-08-09T20:02:00.610Z"
   },
   {
    "duration": 257,
    "start_time": "2023-08-09T20:02:00.884Z"
   },
   {
    "duration": 283,
    "start_time": "2023-08-09T20:02:01.143Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T20:02:01.428Z"
   },
   {
    "duration": 3265,
    "start_time": "2023-08-09T20:02:01.435Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T20:02:04.701Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T20:02:04.708Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T20:02:04.717Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-09T20:02:04.726Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-09T20:02:04.767Z"
   },
   {
    "duration": 475,
    "start_time": "2023-08-09T20:02:04.785Z"
   },
   {
    "duration": 21917,
    "start_time": "2023-08-09T20:02:05.264Z"
   },
   {
    "duration": 4410,
    "start_time": "2023-08-09T20:02:27.183Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T20:02:31.596Z"
   },
   {
    "duration": 135,
    "start_time": "2023-08-09T20:02:31.601Z"
   },
   {
    "duration": 1,
    "start_time": "2023-08-09T20:02:31.737Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-09T20:02:31.738Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-09T20:02:31.740Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T20:03:54.768Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T20:04:31.817Z"
   },
   {
    "duration": 92,
    "start_time": "2023-08-09T20:04:33.648Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-09T20:04:35.304Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T20:04:50.323Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T20:04:52.801Z"
   },
   {
    "duration": 1721,
    "start_time": "2023-08-09T20:07:25.197Z"
   },
   {
    "duration": 2,
    "start_time": "2023-08-09T20:07:26.921Z"
   },
   {
    "duration": 1762,
    "start_time": "2023-08-09T20:07:26.925Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-09T20:07:28.689Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T20:07:28.724Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-09T20:07:28.739Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T20:07:28.760Z"
   },
   {
    "duration": 65,
    "start_time": "2023-08-09T20:07:28.777Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T20:07:28.844Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-09T20:07:28.865Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-09T20:07:28.903Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-09T20:07:28.936Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T20:07:28.979Z"
   },
   {
    "duration": 251,
    "start_time": "2023-08-09T20:07:28.990Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-09T20:07:29.243Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T20:07:29.256Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-09T20:07:29.266Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-09T20:07:29.287Z"
   },
   {
    "duration": 58,
    "start_time": "2023-08-09T20:07:29.314Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-09T20:07:29.373Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T20:07:29.403Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T20:07:29.420Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T20:07:29.454Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-09T20:07:29.462Z"
   },
   {
    "duration": 182,
    "start_time": "2023-08-09T20:07:29.483Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T20:07:29.667Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-09T20:07:29.672Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T20:07:29.697Z"
   },
   {
    "duration": 55,
    "start_time": "2023-08-09T20:07:29.702Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T20:07:29.759Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-09T20:07:29.769Z"
   },
   {
    "duration": 59,
    "start_time": "2023-08-09T20:07:29.795Z"
   },
   {
    "duration": 80,
    "start_time": "2023-08-09T20:07:29.856Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-09T20:07:29.937Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T20:07:29.983Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-09T20:07:29.988Z"
   },
   {
    "duration": 358,
    "start_time": "2023-08-09T20:07:30.027Z"
   },
   {
    "duration": 255,
    "start_time": "2023-08-09T20:07:30.387Z"
   },
   {
    "duration": 264,
    "start_time": "2023-08-09T20:07:30.643Z"
   },
   {
    "duration": 246,
    "start_time": "2023-08-09T20:07:30.908Z"
   },
   {
    "duration": 270,
    "start_time": "2023-08-09T20:07:31.157Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T20:07:31.428Z"
   },
   {
    "duration": 3078,
    "start_time": "2023-08-09T20:07:31.434Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T20:07:34.514Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-09T20:07:34.521Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-09T20:07:34.552Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-09T20:07:34.564Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-09T20:07:34.579Z"
   },
   {
    "duration": 367,
    "start_time": "2023-08-09T20:07:34.595Z"
   },
   {
    "duration": 20657,
    "start_time": "2023-08-09T20:07:34.964Z"
   },
   {
    "duration": 4650,
    "start_time": "2023-08-09T20:07:55.623Z"
   },
   {
    "duration": 2,
    "start_time": "2023-08-09T20:08:00.275Z"
   },
   {
    "duration": 153,
    "start_time": "2023-08-09T20:08:00.279Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-09T20:08:00.433Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-09T20:08:00.435Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-09T20:08:00.436Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T20:10:26.827Z"
   },
   {
    "duration": 1474,
    "start_time": "2023-08-09T20:12:17.035Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T20:12:18.511Z"
   },
   {
    "duration": 763,
    "start_time": "2023-08-09T20:12:18.515Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-09T20:12:19.280Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T20:12:19.321Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-09T20:12:19.333Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-09T20:12:19.353Z"
   },
   {
    "duration": 73,
    "start_time": "2023-08-09T20:12:19.362Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-09T20:12:19.437Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-09T20:12:19.472Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-09T20:12:19.496Z"
   },
   {
    "duration": 57,
    "start_time": "2023-08-09T20:12:19.514Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T20:12:19.573Z"
   },
   {
    "duration": 255,
    "start_time": "2023-08-09T20:12:19.585Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T20:12:19.842Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-09T20:12:19.859Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T20:12:19.871Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-09T20:12:19.888Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-09T20:12:19.912Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-09T20:12:19.958Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-09T20:12:19.983Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T20:12:19.998Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-09T20:12:20.005Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-09T20:12:20.022Z"
   },
   {
    "duration": 165,
    "start_time": "2023-08-09T20:12:20.056Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-09T20:12:20.222Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-09T20:12:20.227Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T20:12:20.259Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-09T20:12:20.265Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T20:12:20.299Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-09T20:12:20.308Z"
   },
   {
    "duration": 47,
    "start_time": "2023-08-09T20:12:20.337Z"
   },
   {
    "duration": 97,
    "start_time": "2023-08-09T20:12:20.387Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-09T20:12:20.486Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-09T20:12:20.513Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-09T20:12:20.536Z"
   },
   {
    "duration": 328,
    "start_time": "2023-08-09T20:12:20.569Z"
   },
   {
    "duration": 257,
    "start_time": "2023-08-09T20:12:20.898Z"
   },
   {
    "duration": 260,
    "start_time": "2023-08-09T20:12:21.157Z"
   },
   {
    "duration": 250,
    "start_time": "2023-08-09T20:12:21.418Z"
   },
   {
    "duration": 265,
    "start_time": "2023-08-09T20:12:21.672Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-09T20:12:21.939Z"
   },
   {
    "duration": 3075,
    "start_time": "2023-08-09T20:12:21.953Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-09T20:12:25.029Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-09T20:12:25.035Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-09T20:12:25.044Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-09T20:12:25.067Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-09T20:12:25.080Z"
   },
   {
    "duration": 353,
    "start_time": "2023-08-09T20:12:25.105Z"
   },
   {
    "duration": 21071,
    "start_time": "2023-08-09T20:12:25.460Z"
   },
   {
    "duration": 4307,
    "start_time": "2023-08-09T20:12:46.533Z"
   },
   {
    "duration": 342826,
    "start_time": "2023-08-09T20:12:50.842Z"
   },
   {
    "duration": 97,
    "start_time": "2023-08-09T20:18:33.669Z"
   },
   {
    "duration": 259,
    "start_time": "2023-08-09T20:18:33.772Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-09T20:18:34.032Z"
   },
   {
    "duration": 42,
    "start_time": "2023-08-09T20:18:34.040Z"
   },
   {
    "duration": 1710,
    "start_time": "2023-08-10T13:29:33.491Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-10T13:29:35.204Z"
   },
   {
    "duration": 1185,
    "start_time": "2023-08-10T13:29:35.209Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-10T13:29:36.395Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-10T13:29:36.430Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-10T13:29:36.440Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-10T13:29:36.473Z"
   },
   {
    "duration": 94,
    "start_time": "2023-08-10T13:29:36.483Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-10T13:29:36.578Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-10T13:29:36.597Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-10T13:29:36.625Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-10T13:29:36.642Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-10T13:29:36.688Z"
   },
   {
    "duration": 273,
    "start_time": "2023-08-10T13:29:36.699Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-10T13:29:36.974Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-10T13:29:36.984Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-10T13:29:36.997Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-10T13:29:37.025Z"
   },
   {
    "duration": 124,
    "start_time": "2023-08-10T13:29:37.060Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-10T13:29:37.186Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-10T13:29:37.213Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-10T13:29:37.230Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-10T13:29:37.237Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-10T13:29:37.267Z"
   },
   {
    "duration": 184,
    "start_time": "2023-08-10T13:29:37.290Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-10T13:29:37.476Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-10T13:29:37.481Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-10T13:29:37.508Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-10T13:29:37.514Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-10T13:29:37.559Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-10T13:29:37.574Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-10T13:29:37.602Z"
   },
   {
    "duration": 96,
    "start_time": "2023-08-10T13:29:37.633Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-10T13:29:37.730Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-10T13:29:37.771Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-10T13:29:37.778Z"
   },
   {
    "duration": 269,
    "start_time": "2023-08-10T13:29:37.817Z"
   },
   {
    "duration": 271,
    "start_time": "2023-08-10T13:29:38.088Z"
   },
   {
    "duration": 251,
    "start_time": "2023-08-10T13:29:38.361Z"
   },
   {
    "duration": 244,
    "start_time": "2023-08-10T13:29:38.614Z"
   },
   {
    "duration": 274,
    "start_time": "2023-08-10T13:29:38.863Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-10T13:29:39.138Z"
   },
   {
    "duration": 2939,
    "start_time": "2023-08-10T13:29:39.144Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-10T13:29:42.087Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-10T13:29:42.094Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-10T13:29:42.102Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-10T13:29:42.115Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-10T13:29:42.127Z"
   },
   {
    "duration": 316,
    "start_time": "2023-08-10T13:29:42.144Z"
   },
   {
    "duration": 19752,
    "start_time": "2023-08-10T13:29:42.462Z"
   },
   {
    "duration": 4411,
    "start_time": "2023-08-10T13:30:02.217Z"
   },
   {
    "duration": 1231,
    "start_time": "2023-08-10T13:30:06.630Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-10T13:30:07.862Z"
   },
   {
    "duration": 226,
    "start_time": "2023-08-10T13:30:07.877Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-10T13:30:08.105Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-10T13:30:08.112Z"
   },
   {
    "duration": 1195,
    "start_time": "2023-08-10T13:36:28.069Z"
   },
   {
    "duration": 1368,
    "start_time": "2023-08-10T13:36:44.791Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-10T13:37:10.209Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-10T13:37:17.877Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-10T13:37:39.538Z"
   },
   {
    "duration": 1578,
    "start_time": "2023-08-10T13:39:08.726Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-10T13:39:10.306Z"
   },
   {
    "duration": 773,
    "start_time": "2023-08-10T13:39:10.310Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-10T13:39:11.085Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-10T13:39:11.118Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-10T13:39:11.127Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-10T13:39:11.137Z"
   },
   {
    "duration": 79,
    "start_time": "2023-08-10T13:39:11.145Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-10T13:39:11.226Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-10T13:39:11.259Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-10T13:39:11.293Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-10T13:39:11.315Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-10T13:39:11.357Z"
   },
   {
    "duration": 295,
    "start_time": "2023-08-10T13:39:11.372Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-10T13:39:11.670Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-10T13:39:11.686Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-10T13:39:11.705Z"
   },
   {
    "duration": 47,
    "start_time": "2023-08-10T13:39:11.723Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-10T13:39:11.772Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-10T13:39:11.799Z"
   },
   {
    "duration": 43,
    "start_time": "2023-08-10T13:39:11.822Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-10T13:39:11.868Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-10T13:39:11.878Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-10T13:39:11.888Z"
   },
   {
    "duration": 212,
    "start_time": "2023-08-10T13:39:11.910Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-10T13:39:12.124Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-10T13:39:12.129Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-10T13:39:12.162Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-10T13:39:12.169Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-10T13:39:12.202Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-10T13:39:12.211Z"
   },
   {
    "duration": 56,
    "start_time": "2023-08-10T13:39:12.229Z"
   },
   {
    "duration": 103,
    "start_time": "2023-08-10T13:39:12.286Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-10T13:39:12.391Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-10T13:39:12.415Z"
   },
   {
    "duration": 40,
    "start_time": "2023-08-10T13:39:12.420Z"
   },
   {
    "duration": 357,
    "start_time": "2023-08-10T13:39:12.463Z"
   },
   {
    "duration": 251,
    "start_time": "2023-08-10T13:39:12.821Z"
   },
   {
    "duration": 258,
    "start_time": "2023-08-10T13:39:13.074Z"
   },
   {
    "duration": 256,
    "start_time": "2023-08-10T13:39:13.334Z"
   },
   {
    "duration": 249,
    "start_time": "2023-08-10T13:39:13.591Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-10T13:39:13.842Z"
   },
   {
    "duration": 3194,
    "start_time": "2023-08-10T13:39:13.859Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-10T13:39:17.054Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-10T13:39:17.061Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-10T13:39:17.076Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-10T13:39:17.091Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-10T13:39:17.112Z"
   },
   {
    "duration": 250,
    "start_time": "2023-08-10T13:39:17.126Z"
   },
   {
    "duration": 20443,
    "start_time": "2023-08-10T13:39:17.458Z"
   },
   {
    "duration": 4045,
    "start_time": "2023-08-10T13:39:37.903Z"
   },
   {
    "duration": 39014,
    "start_time": "2023-08-10T13:39:41.949Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-10T13:40:20.965Z"
   },
   {
    "duration": 1284,
    "start_time": "2023-08-10T13:40:20.977Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-10T13:40:22.262Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-10T13:40:22.269Z"
   },
   {
    "duration": 1471,
    "start_time": "2023-08-10T13:51:46.405Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-10T13:51:47.878Z"
   },
   {
    "duration": 660,
    "start_time": "2023-08-10T13:51:47.882Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-10T13:51:48.544Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-10T13:51:48.578Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-10T13:51:48.588Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-10T13:51:48.604Z"
   },
   {
    "duration": 103,
    "start_time": "2023-08-10T13:51:48.614Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-10T13:51:48.718Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-10T13:51:48.741Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-10T13:51:48.779Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-10T13:51:48.802Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-10T13:51:48.842Z"
   },
   {
    "duration": 261,
    "start_time": "2023-08-10T13:51:48.862Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-10T13:51:49.124Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-10T13:51:49.134Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-10T13:51:49.160Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-10T13:51:49.177Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-10T13:51:49.201Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-10T13:51:49.258Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-10T13:51:49.281Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-10T13:51:49.297Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-10T13:51:49.304Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-10T13:51:49.320Z"
   },
   {
    "duration": 181,
    "start_time": "2023-08-10T13:51:49.360Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-10T13:51:49.543Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-10T13:51:49.547Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-10T13:51:49.579Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-10T13:51:49.585Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-10T13:51:49.618Z"
   },
   {
    "duration": 40,
    "start_time": "2023-08-10T13:51:49.627Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-10T13:51:49.669Z"
   },
   {
    "duration": 94,
    "start_time": "2023-08-10T13:51:49.700Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-10T13:51:49.796Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-10T13:51:49.822Z"
   },
   {
    "duration": 43,
    "start_time": "2023-08-10T13:51:49.828Z"
   },
   {
    "duration": 355,
    "start_time": "2023-08-10T13:51:49.872Z"
   },
   {
    "duration": 258,
    "start_time": "2023-08-10T13:51:50.229Z"
   },
   {
    "duration": 245,
    "start_time": "2023-08-10T13:51:50.489Z"
   },
   {
    "duration": 242,
    "start_time": "2023-08-10T13:51:50.736Z"
   },
   {
    "duration": 271,
    "start_time": "2023-08-10T13:51:50.979Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-10T13:51:51.252Z"
   },
   {
    "duration": 2860,
    "start_time": "2023-08-10T13:51:51.261Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-10T13:51:54.124Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-10T13:51:54.132Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-10T13:51:54.149Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-10T13:51:54.161Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-10T13:51:54.182Z"
   },
   {
    "duration": 160,
    "start_time": "2023-08-10T13:51:54.212Z"
   },
   {
    "duration": 19909,
    "start_time": "2023-08-10T13:51:54.374Z"
   },
   {
    "duration": 4168,
    "start_time": "2023-08-10T13:52:14.285Z"
   },
   {
    "duration": 49507,
    "start_time": "2023-08-10T13:52:18.455Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-10T13:53:07.964Z"
   },
   {
    "duration": 77,
    "start_time": "2023-08-10T13:53:07.983Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-10T13:53:08.063Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-10T13:53:08.065Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-10T13:53:08.066Z"
   },
   {
    "duration": 1679,
    "start_time": "2023-08-10T14:00:44.076Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-10T14:00:45.757Z"
   },
   {
    "duration": 780,
    "start_time": "2023-08-10T14:00:45.776Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-10T14:00:46.557Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-10T14:00:46.607Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-10T14:00:46.623Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-10T14:00:46.659Z"
   },
   {
    "duration": 72,
    "start_time": "2023-08-10T14:00:46.677Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-10T14:00:46.751Z"
   },
   {
    "duration": 40,
    "start_time": "2023-08-10T14:00:46.798Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-10T14:00:46.840Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-10T14:00:46.874Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-10T14:00:46.906Z"
   },
   {
    "duration": 295,
    "start_time": "2023-08-10T14:00:46.917Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-10T14:00:47.214Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-10T14:00:47.224Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-10T14:00:47.266Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-10T14:00:47.299Z"
   },
   {
    "duration": 62,
    "start_time": "2023-08-10T14:00:47.336Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-10T14:00:47.400Z"
   },
   {
    "duration": 58,
    "start_time": "2023-08-10T14:00:47.428Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-10T14:00:47.491Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-10T14:00:47.504Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-10T14:00:47.522Z"
   },
   {
    "duration": 235,
    "start_time": "2023-08-10T14:00:47.547Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-10T14:00:47.785Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-10T14:00:47.790Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-10T14:00:47.813Z"
   },
   {
    "duration": 49,
    "start_time": "2023-08-10T14:00:47.830Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-10T14:00:47.885Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-10T14:00:47.899Z"
   },
   {
    "duration": 55,
    "start_time": "2023-08-10T14:00:47.918Z"
   },
   {
    "duration": 98,
    "start_time": "2023-08-10T14:00:47.985Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-10T14:00:48.085Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-10T14:00:48.116Z"
   },
   {
    "duration": 66,
    "start_time": "2023-08-10T14:00:48.136Z"
   },
   {
    "duration": 358,
    "start_time": "2023-08-10T14:00:48.203Z"
   },
   {
    "duration": 269,
    "start_time": "2023-08-10T14:00:48.573Z"
   },
   {
    "duration": 287,
    "start_time": "2023-08-10T14:00:48.844Z"
   },
   {
    "duration": 286,
    "start_time": "2023-08-10T14:00:49.133Z"
   },
   {
    "duration": 284,
    "start_time": "2023-08-10T14:00:49.424Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-10T14:00:49.711Z"
   },
   {
    "duration": 3224,
    "start_time": "2023-08-10T14:00:49.717Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-10T14:00:52.942Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-10T14:00:52.948Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-10T14:00:52.978Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-10T14:00:52.997Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-10T14:00:53.011Z"
   },
   {
    "duration": 521,
    "start_time": "2023-08-10T14:00:53.045Z"
   },
   {
    "duration": 24686,
    "start_time": "2023-08-10T14:00:53.571Z"
   },
   {
    "duration": 5019,
    "start_time": "2023-08-10T14:01:18.258Z"
   },
   {
    "duration": 387185,
    "start_time": "2023-08-10T14:01:23.283Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-10T14:07:50.474Z"
   },
   {
    "duration": 349907,
    "start_time": "2023-08-10T14:07:50.498Z"
   },
   {
    "duration": 60,
    "start_time": "2023-08-10T14:13:40.407Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-10T14:13:40.470Z"
   },
   {
    "duration": 1624,
    "start_time": "2023-08-11T09:42:48.427Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-11T09:42:50.053Z"
   },
   {
    "duration": 1563,
    "start_time": "2023-08-11T09:42:50.057Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-11T09:42:51.622Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-11T09:42:51.656Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-11T09:42:51.680Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-11T09:42:51.717Z"
   },
   {
    "duration": 71,
    "start_time": "2023-08-11T09:42:51.759Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-11T09:42:51.832Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-11T09:42:51.858Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-11T09:42:51.894Z"
   },
   {
    "duration": 63,
    "start_time": "2023-08-11T09:42:51.934Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-11T09:42:51.999Z"
   },
   {
    "duration": 246,
    "start_time": "2023-08-11T09:42:52.015Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-11T09:42:52.263Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-11T09:42:52.273Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-11T09:42:52.293Z"
   },
   {
    "duration": 46,
    "start_time": "2023-08-11T09:42:52.320Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-11T09:42:52.367Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-11T09:42:52.389Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-11T09:42:52.411Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-11T09:42:52.441Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-11T09:42:52.472Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-11T09:42:52.481Z"
   },
   {
    "duration": 173,
    "start_time": "2023-08-11T09:42:52.498Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-11T09:42:52.673Z"
   },
   {
    "duration": 79,
    "start_time": "2023-08-11T09:42:52.677Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-11T09:42:52.760Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-11T09:42:52.770Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-11T09:42:52.820Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-11T09:42:52.843Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-11T09:42:52.863Z"
   },
   {
    "duration": 89,
    "start_time": "2023-08-11T09:42:52.890Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-11T09:42:52.980Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-11T09:42:53.000Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-11T09:42:53.024Z"
   },
   {
    "duration": 290,
    "start_time": "2023-08-11T09:42:53.059Z"
   },
   {
    "duration": 218,
    "start_time": "2023-08-11T09:42:53.350Z"
   },
   {
    "duration": 220,
    "start_time": "2023-08-11T09:42:53.570Z"
   },
   {
    "duration": 209,
    "start_time": "2023-08-11T09:42:53.792Z"
   },
   {
    "duration": 223,
    "start_time": "2023-08-11T09:42:54.003Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-11T09:42:54.228Z"
   },
   {
    "duration": 2597,
    "start_time": "2023-08-11T09:42:54.240Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-11T09:42:56.839Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-11T09:42:56.844Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-11T09:42:56.862Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-11T09:42:56.877Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-11T09:42:56.898Z"
   },
   {
    "duration": 227,
    "start_time": "2023-08-11T09:42:56.916Z"
   },
   {
    "duration": 18615,
    "start_time": "2023-08-11T09:42:57.145Z"
   },
   {
    "duration": 3598,
    "start_time": "2023-08-11T09:43:15.762Z"
   },
   {
    "duration": 1511,
    "start_time": "2023-08-11T10:14:21.568Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-11T10:14:23.081Z"
   },
   {
    "duration": 1884,
    "start_time": "2023-08-11T10:14:23.086Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-11T10:14:24.971Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-11T10:14:25.005Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-11T10:14:25.013Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-11T10:14:25.032Z"
   },
   {
    "duration": 58,
    "start_time": "2023-08-11T10:14:25.058Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-11T10:14:25.118Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-11T10:14:25.136Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-11T10:14:25.186Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-11T10:14:25.209Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-11T10:14:25.258Z"
   },
   {
    "duration": 211,
    "start_time": "2023-08-11T10:14:25.272Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-11T10:14:25.485Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-11T10:14:25.494Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-11T10:14:25.507Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-11T10:14:25.537Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-11T10:14:25.577Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-11T10:14:25.605Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-11T10:14:25.648Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-11T10:14:25.673Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-11T10:14:25.684Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-11T10:14:25.691Z"
   },
   {
    "duration": 158,
    "start_time": "2023-08-11T10:14:25.729Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-11T10:14:25.889Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-11T10:14:25.894Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-11T10:14:25.918Z"
   },
   {
    "duration": 45,
    "start_time": "2023-08-11T10:14:25.933Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-11T10:14:25.980Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-11T10:14:25.993Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-11T10:14:26.016Z"
   },
   {
    "duration": 70,
    "start_time": "2023-08-11T10:14:26.066Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-11T10:14:26.144Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-11T10:14:26.179Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-11T10:14:26.188Z"
   },
   {
    "duration": 299,
    "start_time": "2023-08-11T10:14:26.214Z"
   },
   {
    "duration": 243,
    "start_time": "2023-08-11T10:14:26.515Z"
   },
   {
    "duration": 222,
    "start_time": "2023-08-11T10:14:26.760Z"
   },
   {
    "duration": 223,
    "start_time": "2023-08-11T10:14:26.983Z"
   },
   {
    "duration": 245,
    "start_time": "2023-08-11T10:14:27.210Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-11T10:14:27.457Z"
   },
   {
    "duration": 2641,
    "start_time": "2023-08-11T10:14:27.464Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-11T10:14:30.107Z"
   },
   {
    "duration": 100,
    "start_time": "2023-08-11T10:14:30.114Z"
   },
   {
    "duration": 53,
    "start_time": "2023-08-11T10:14:30.216Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-11T10:14:30.271Z"
   },
   {
    "duration": 62,
    "start_time": "2023-08-11T10:14:30.314Z"
   },
   {
    "duration": 173,
    "start_time": "2023-08-11T10:14:30.378Z"
   },
   {
    "duration": 22300,
    "start_time": "2023-08-11T10:14:30.558Z"
   },
   {
    "duration": 4771,
    "start_time": "2023-08-11T10:14:52.860Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-11T10:14:57.633Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-11T10:14:57.647Z"
   },
   {
    "duration": 1492,
    "start_time": "2023-08-11T10:22:08.555Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-11T10:22:10.049Z"
   },
   {
    "duration": 836,
    "start_time": "2023-08-11T10:22:10.054Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-11T10:22:10.892Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-11T10:22:10.922Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-11T10:22:10.948Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-11T10:22:10.976Z"
   },
   {
    "duration": 72,
    "start_time": "2023-08-11T10:22:11.001Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-11T10:22:11.075Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-11T10:22:11.094Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-11T10:22:11.129Z"
   },
   {
    "duration": 55,
    "start_time": "2023-08-11T10:22:11.152Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-11T10:22:11.209Z"
   },
   {
    "duration": 247,
    "start_time": "2023-08-11T10:22:11.219Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-11T10:22:11.468Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-11T10:22:11.477Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-11T10:22:11.510Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-11T10:22:11.545Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-11T10:22:11.577Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-11T10:22:11.597Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-11T10:22:11.624Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-11T10:22:11.651Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-11T10:22:11.671Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-11T10:22:11.700Z"
   },
   {
    "duration": 192,
    "start_time": "2023-08-11T10:22:11.725Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-11T10:22:11.919Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-11T10:22:11.923Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-11T10:22:11.972Z"
   },
   {
    "duration": 52,
    "start_time": "2023-08-11T10:22:11.993Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-11T10:22:12.048Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-11T10:22:12.076Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-11T10:22:12.105Z"
   },
   {
    "duration": 90,
    "start_time": "2023-08-11T10:22:12.133Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-11T10:22:12.225Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-11T10:22:12.254Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-11T10:22:12.279Z"
   },
   {
    "duration": 281,
    "start_time": "2023-08-11T10:22:12.320Z"
   },
   {
    "duration": 255,
    "start_time": "2023-08-11T10:22:12.602Z"
   },
   {
    "duration": 254,
    "start_time": "2023-08-11T10:22:12.858Z"
   },
   {
    "duration": 245,
    "start_time": "2023-08-11T10:22:13.114Z"
   },
   {
    "duration": 243,
    "start_time": "2023-08-11T10:22:13.361Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-11T10:22:13.605Z"
   },
   {
    "duration": 2730,
    "start_time": "2023-08-11T10:22:13.611Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-11T10:22:16.343Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-11T10:22:16.348Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-11T10:22:16.358Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-11T10:22:16.369Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-11T10:22:16.390Z"
   },
   {
    "duration": 135,
    "start_time": "2023-08-11T10:22:16.406Z"
   },
   {
    "duration": 19065,
    "start_time": "2023-08-11T10:22:16.543Z"
   },
   {
    "duration": 3981,
    "start_time": "2023-08-11T10:22:35.609Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-11T10:22:39.592Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-11T10:22:39.597Z"
   },
   {
    "duration": 119,
    "start_time": "2023-08-11T10:22:39.606Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-11T10:22:39.727Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-11T10:22:39.728Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-11T10:22:39.730Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-11T10:25:50.367Z"
   },
   {
    "duration": 1454,
    "start_time": "2023-08-11T10:30:36.728Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-11T10:30:38.184Z"
   },
   {
    "duration": 1196,
    "start_time": "2023-08-11T10:30:38.188Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-11T10:30:39.385Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-11T10:30:39.415Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-11T10:30:39.424Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-11T10:30:39.453Z"
   },
   {
    "duration": 59,
    "start_time": "2023-08-11T10:30:39.466Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-11T10:30:39.528Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-11T10:30:39.556Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-11T10:30:39.591Z"
   },
   {
    "duration": 46,
    "start_time": "2023-08-11T10:30:39.606Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-11T10:30:39.654Z"
   },
   {
    "duration": 238,
    "start_time": "2023-08-11T10:30:39.668Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-11T10:30:39.907Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-11T10:30:39.915Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-11T10:30:39.932Z"
   },
   {
    "duration": 42,
    "start_time": "2023-08-11T10:30:39.959Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-11T10:30:40.003Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-11T10:30:40.028Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-11T10:30:40.052Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-11T10:30:40.086Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-11T10:30:40.100Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-11T10:30:40.120Z"
   },
   {
    "duration": 154,
    "start_time": "2023-08-11T10:30:40.140Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-11T10:30:40.295Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-11T10:30:40.299Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-11T10:30:40.337Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-11T10:30:40.348Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-11T10:30:40.388Z"
   },
   {
    "duration": 139,
    "start_time": "2023-08-11T10:30:40.397Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-11T10:30:40.538Z"
   },
   {
    "duration": 78,
    "start_time": "2023-08-11T10:30:40.564Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-11T10:30:40.644Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-11T10:30:40.664Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-11T10:30:40.679Z"
   },
   {
    "duration": 278,
    "start_time": "2023-08-11T10:30:40.702Z"
   },
   {
    "duration": 224,
    "start_time": "2023-08-11T10:30:40.981Z"
   },
   {
    "duration": 223,
    "start_time": "2023-08-11T10:30:41.207Z"
   },
   {
    "duration": 219,
    "start_time": "2023-08-11T10:30:41.431Z"
   },
   {
    "duration": 237,
    "start_time": "2023-08-11T10:30:41.651Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-11T10:30:41.890Z"
   },
   {
    "duration": 2603,
    "start_time": "2023-08-11T10:30:41.898Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-11T10:30:44.503Z"
   },
   {
    "duration": 45,
    "start_time": "2023-08-11T10:30:44.509Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-11T10:30:44.556Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-11T10:30:44.590Z"
   },
   {
    "duration": 50,
    "start_time": "2023-08-11T10:30:44.628Z"
   },
   {
    "duration": 67,
    "start_time": "2023-08-11T10:30:44.680Z"
   },
   {
    "duration": 19860,
    "start_time": "2023-08-11T10:30:44.749Z"
   },
   {
    "duration": 3909,
    "start_time": "2023-08-11T10:31:04.612Z"
   },
   {
    "duration": 1583,
    "start_time": "2023-08-11T11:11:51.083Z"
   },
   {
    "duration": 2,
    "start_time": "2023-08-11T11:11:52.667Z"
   },
   {
    "duration": 789,
    "start_time": "2023-08-11T11:11:52.670Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-11T11:11:53.460Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-11T11:11:53.489Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-11T11:11:53.500Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-11T11:11:53.513Z"
   },
   {
    "duration": 73,
    "start_time": "2023-08-11T11:11:53.555Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-11T11:11:53.629Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-11T11:11:53.653Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-11T11:11:53.684Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-11T11:11:53.699Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-11T11:11:53.729Z"
   },
   {
    "duration": 240,
    "start_time": "2023-08-11T11:11:53.762Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-11T11:11:54.003Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-11T11:11:54.011Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-11T11:11:54.051Z"
   },
   {
    "duration": 40,
    "start_time": "2023-08-11T11:11:54.076Z"
   },
   {
    "duration": 35,
    "start_time": "2023-08-11T11:11:54.117Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-11T11:11:54.154Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-11T11:11:54.188Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-11T11:11:54.200Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-11T11:11:54.206Z"
   },
   {
    "duration": 43,
    "start_time": "2023-08-11T11:11:54.216Z"
   },
   {
    "duration": 155,
    "start_time": "2023-08-11T11:11:54.261Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-11T11:11:54.417Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-11T11:11:54.421Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-11T11:11:54.470Z"
   },
   {
    "duration": 35,
    "start_time": "2023-08-11T11:11:54.484Z"
   },
   {
    "duration": 44,
    "start_time": "2023-08-11T11:11:54.521Z"
   },
   {
    "duration": 54,
    "start_time": "2023-08-11T11:11:54.567Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-11T11:11:54.623Z"
   },
   {
    "duration": 92,
    "start_time": "2023-08-11T11:11:54.661Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-11T11:11:54.755Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-11T11:11:54.777Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-11T11:11:54.793Z"
   },
   {
    "duration": 246,
    "start_time": "2023-08-11T11:11:54.816Z"
   },
   {
    "duration": 209,
    "start_time": "2023-08-11T11:11:55.063Z"
   },
   {
    "duration": 215,
    "start_time": "2023-08-11T11:11:55.273Z"
   },
   {
    "duration": 195,
    "start_time": "2023-08-11T11:11:55.490Z"
   },
   {
    "duration": 217,
    "start_time": "2023-08-11T11:11:55.687Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-11T11:11:55.905Z"
   },
   {
    "duration": 2506,
    "start_time": "2023-08-11T11:11:55.911Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-11T11:11:58.418Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-11T11:11:58.424Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-11T11:11:58.466Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-11T11:11:58.493Z"
   },
   {
    "duration": 41,
    "start_time": "2023-08-11T11:11:58.528Z"
   },
   {
    "duration": 273,
    "start_time": "2023-08-11T11:11:58.571Z"
   },
   {
    "duration": 25675,
    "start_time": "2023-08-11T11:11:58.851Z"
   },
   {
    "duration": 4336,
    "start_time": "2023-08-11T11:12:24.527Z"
   },
   {
    "duration": 1445,
    "start_time": "2023-08-11T11:21:20.979Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-11T11:21:22.426Z"
   },
   {
    "duration": 1737,
    "start_time": "2023-08-11T11:21:22.430Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-11T11:21:24.169Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-11T11:21:24.200Z"
   },
   {
    "duration": 52,
    "start_time": "2023-08-11T11:21:24.218Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-11T11:21:24.272Z"
   },
   {
    "duration": 110,
    "start_time": "2023-08-11T11:21:24.300Z"
   },
   {
    "duration": 16,
    "start_time": "2023-08-11T11:21:24.412Z"
   },
   {
    "duration": 87,
    "start_time": "2023-08-11T11:21:24.430Z"
   },
   {
    "duration": 42,
    "start_time": "2023-08-11T11:21:24.519Z"
   },
   {
    "duration": 97,
    "start_time": "2023-08-11T11:21:24.563Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-11T11:21:24.661Z"
   },
   {
    "duration": 239,
    "start_time": "2023-08-11T11:21:24.696Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-11T11:21:24.939Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-11T11:21:24.963Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-11T11:21:24.985Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-11T11:21:25.001Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-11T11:21:25.019Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-11T11:21:25.056Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-11T11:21:25.094Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-11T11:21:25.112Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-11T11:21:25.121Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-11T11:21:25.157Z"
   },
   {
    "duration": 168,
    "start_time": "2023-08-11T11:21:25.182Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-11T11:21:25.356Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-11T11:21:25.368Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-11T11:21:25.396Z"
   },
   {
    "duration": 58,
    "start_time": "2023-08-11T11:21:25.431Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-11T11:21:25.491Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-11T11:21:25.499Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-11T11:21:25.515Z"
   },
   {
    "duration": 87,
    "start_time": "2023-08-11T11:21:25.543Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-11T11:21:25.631Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-11T11:21:25.665Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-11T11:21:25.679Z"
   },
   {
    "duration": 262,
    "start_time": "2023-08-11T11:21:25.707Z"
   },
   {
    "duration": 211,
    "start_time": "2023-08-11T11:21:25.971Z"
   },
   {
    "duration": 221,
    "start_time": "2023-08-11T11:21:26.183Z"
   },
   {
    "duration": 218,
    "start_time": "2023-08-11T11:21:26.406Z"
   },
   {
    "duration": 225,
    "start_time": "2023-08-11T11:21:26.627Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-11T11:21:26.853Z"
   },
   {
    "duration": 2503,
    "start_time": "2023-08-11T11:21:26.863Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-11T11:21:29.367Z"
   },
   {
    "duration": 19,
    "start_time": "2023-08-11T11:21:29.373Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-11T11:21:29.394Z"
   },
   {
    "duration": 50,
    "start_time": "2023-08-11T11:21:29.425Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-11T11:21:29.477Z"
   },
   {
    "duration": 451,
    "start_time": "2023-08-11T11:21:29.509Z"
   },
   {
    "duration": 22297,
    "start_time": "2023-08-11T11:21:29.961Z"
   },
   {
    "duration": 4107,
    "start_time": "2023-08-11T11:21:52.260Z"
   },
   {
    "duration": 478177,
    "start_time": "2023-08-11T11:21:56.368Z"
   },
   {
    "duration": 122804,
    "start_time": "2023-08-11T11:29:54.547Z"
   },
   {
    "duration": 91,
    "start_time": "2023-08-11T11:31:57.353Z"
   },
   {
    "duration": 21,
    "start_time": "2023-08-11T11:31:57.450Z"
   },
   {
    "duration": 1590,
    "start_time": "2023-08-12T09:25:59.260Z"
   },
   {
    "duration": 2,
    "start_time": "2023-08-12T09:26:00.852Z"
   },
   {
    "duration": 926,
    "start_time": "2023-08-12T09:26:00.855Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-12T09:26:01.783Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-12T09:26:01.815Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-12T09:26:01.836Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-12T09:26:01.861Z"
   },
   {
    "duration": 66,
    "start_time": "2023-08-12T09:26:01.896Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-12T09:26:01.963Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-12T09:26:01.978Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-12T09:26:02.017Z"
   },
   {
    "duration": 35,
    "start_time": "2023-08-12T09:26:02.043Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-12T09:26:02.079Z"
   },
   {
    "duration": 204,
    "start_time": "2023-08-12T09:26:02.087Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-12T09:26:02.292Z"
   },
   {
    "duration": 47,
    "start_time": "2023-08-12T09:26:02.303Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-12T09:26:02.352Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-12T09:26:02.388Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-12T09:26:02.428Z"
   },
   {
    "duration": 53,
    "start_time": "2023-08-12T09:26:02.477Z"
   },
   {
    "duration": 31,
    "start_time": "2023-08-12T09:26:02.531Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-12T09:26:02.563Z"
   },
   {
    "duration": 39,
    "start_time": "2023-08-12T09:26:02.592Z"
   },
   {
    "duration": 42,
    "start_time": "2023-08-12T09:26:02.633Z"
   },
   {
    "duration": 154,
    "start_time": "2023-08-12T09:26:02.677Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-12T09:26:02.833Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-12T09:26:02.837Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-12T09:26:02.862Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-12T09:26:02.867Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-12T09:26:02.902Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-12T09:26:02.910Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-12T09:26:02.936Z"
   },
   {
    "duration": 67,
    "start_time": "2023-08-12T09:26:02.964Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-12T09:26:03.032Z"
   },
   {
    "duration": 28,
    "start_time": "2023-08-12T09:26:03.052Z"
   },
   {
    "duration": 30,
    "start_time": "2023-08-12T09:26:03.082Z"
   },
   {
    "duration": 245,
    "start_time": "2023-08-12T09:26:03.114Z"
   },
   {
    "duration": 201,
    "start_time": "2023-08-12T09:26:03.360Z"
   },
   {
    "duration": 196,
    "start_time": "2023-08-12T09:26:03.562Z"
   },
   {
    "duration": 183,
    "start_time": "2023-08-12T09:26:03.760Z"
   },
   {
    "duration": 197,
    "start_time": "2023-08-12T09:26:03.947Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-12T09:26:04.145Z"
   },
   {
    "duration": 2660,
    "start_time": "2023-08-12T09:26:04.150Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-12T09:26:06.811Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-12T09:26:06.816Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-12T09:26:06.830Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-12T09:26:06.844Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-12T09:26:06.855Z"
   },
   {
    "duration": 226,
    "start_time": "2023-08-12T09:26:06.877Z"
   },
   {
    "duration": 15791,
    "start_time": "2023-08-12T09:26:07.105Z"
   },
   {
    "duration": 3427,
    "start_time": "2023-08-12T09:26:22.897Z"
   },
   {
    "duration": 50,
    "start_time": "2023-08-12T09:26:26.325Z"
   },
   {
    "duration": 1,
    "start_time": "2023-08-12T09:26:26.376Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-12T09:26:26.377Z"
   },
   {
    "duration": 0,
    "start_time": "2023-08-12T09:26:26.378Z"
   },
   {
    "duration": 1366,
    "start_time": "2023-08-12T09:43:43.289Z"
   },
   {
    "duration": 2,
    "start_time": "2023-08-12T09:43:44.656Z"
   },
   {
    "duration": 742,
    "start_time": "2023-08-12T09:43:44.660Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-12T09:43:45.404Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-12T09:43:45.432Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-12T09:43:45.444Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-12T09:43:45.453Z"
   },
   {
    "duration": 53,
    "start_time": "2023-08-12T09:43:45.476Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-12T09:43:45.530Z"
   },
   {
    "duration": 42,
    "start_time": "2023-08-12T09:43:45.546Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-12T09:43:45.590Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-12T09:43:45.604Z"
   },
   {
    "duration": 50,
    "start_time": "2023-08-12T09:43:45.643Z"
   },
   {
    "duration": 204,
    "start_time": "2023-08-12T09:43:45.695Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-12T09:43:45.901Z"
   },
   {
    "duration": 46,
    "start_time": "2023-08-12T09:43:45.909Z"
   },
   {
    "duration": 38,
    "start_time": "2023-08-12T09:43:45.956Z"
   },
   {
    "duration": 59,
    "start_time": "2023-08-12T09:43:45.996Z"
   },
   {
    "duration": 29,
    "start_time": "2023-08-12T09:43:46.057Z"
   },
   {
    "duration": 71,
    "start_time": "2023-08-12T09:43:46.088Z"
   },
   {
    "duration": 42,
    "start_time": "2023-08-12T09:43:46.161Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-12T09:43:46.205Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-12T09:43:46.220Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-12T09:43:46.229Z"
   },
   {
    "duration": 152,
    "start_time": "2023-08-12T09:43:46.244Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-12T09:43:46.399Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-12T09:43:46.403Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-12T09:43:46.428Z"
   },
   {
    "duration": 25,
    "start_time": "2023-08-12T09:43:46.434Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-12T09:43:46.460Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-12T09:43:46.468Z"
   },
   {
    "duration": 24,
    "start_time": "2023-08-12T09:43:46.500Z"
   },
   {
    "duration": 75,
    "start_time": "2023-08-12T09:43:46.525Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-12T09:43:46.602Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-12T09:43:46.623Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-12T09:43:46.636Z"
   },
   {
    "duration": 260,
    "start_time": "2023-08-12T09:43:46.665Z"
   },
   {
    "duration": 189,
    "start_time": "2023-08-12T09:43:46.927Z"
   },
   {
    "duration": 189,
    "start_time": "2023-08-12T09:43:47.117Z"
   },
   {
    "duration": 178,
    "start_time": "2023-08-12T09:43:47.307Z"
   },
   {
    "duration": 218,
    "start_time": "2023-08-12T09:43:47.487Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-12T09:43:47.706Z"
   },
   {
    "duration": 2271,
    "start_time": "2023-08-12T09:43:47.711Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-12T09:43:49.983Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-12T09:43:49.988Z"
   },
   {
    "duration": 8,
    "start_time": "2023-08-12T09:43:49.996Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-12T09:43:50.006Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-12T09:43:50.017Z"
   },
   {
    "duration": 78,
    "start_time": "2023-08-12T09:43:50.033Z"
   },
   {
    "duration": 16878,
    "start_time": "2023-08-12T09:43:50.201Z"
   },
   {
    "duration": 3874,
    "start_time": "2023-08-12T09:44:07.081Z"
   },
   {
    "duration": 125345,
    "start_time": "2023-08-12T09:44:10.956Z"
   },
   {
    "duration": 1305,
    "start_time": "2023-08-12T09:46:16.303Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-12T09:46:17.610Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-12T09:46:17.616Z"
   },
   {
    "duration": 1764,
    "start_time": "2023-08-12T16:35:32.241Z"
   },
   {
    "duration": 3,
    "start_time": "2023-08-12T16:35:34.008Z"
   },
   {
    "duration": 856,
    "start_time": "2023-08-12T16:35:34.013Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-12T16:35:34.871Z"
   },
   {
    "duration": 14,
    "start_time": "2023-08-12T16:35:34.904Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-12T16:35:34.920Z"
   },
   {
    "duration": 20,
    "start_time": "2023-08-12T16:35:34.939Z"
   },
   {
    "duration": 69,
    "start_time": "2023-08-12T16:35:34.961Z"
   },
   {
    "duration": 27,
    "start_time": "2023-08-12T16:35:35.032Z"
   },
   {
    "duration": 32,
    "start_time": "2023-08-12T16:35:35.062Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-12T16:35:35.095Z"
   },
   {
    "duration": 48,
    "start_time": "2023-08-12T16:35:35.112Z"
   },
   {
    "duration": 10,
    "start_time": "2023-08-12T16:35:35.162Z"
   },
   {
    "duration": 322,
    "start_time": "2023-08-12T16:35:35.174Z"
   },
   {
    "duration": 7,
    "start_time": "2023-08-12T16:35:35.498Z"
   },
   {
    "duration": 17,
    "start_time": "2023-08-12T16:35:35.507Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-12T16:35:35.525Z"
   },
   {
    "duration": 37,
    "start_time": "2023-08-12T16:35:35.545Z"
   },
   {
    "duration": 22,
    "start_time": "2023-08-12T16:35:35.584Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-12T16:35:35.608Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-12T16:35:35.646Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-12T16:35:35.675Z"
   },
   {
    "duration": 12,
    "start_time": "2023-08-12T16:35:35.682Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-12T16:35:35.695Z"
   },
   {
    "duration": 206,
    "start_time": "2023-08-12T16:35:35.710Z"
   },
   {
    "duration": 4,
    "start_time": "2023-08-12T16:35:35.917Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-12T16:35:35.923Z"
   },
   {
    "duration": 26,
    "start_time": "2023-08-12T16:35:35.963Z"
   },
   {
    "duration": 47,
    "start_time": "2023-08-12T16:35:35.991Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-12T16:35:36.040Z"
   },
   {
    "duration": 34,
    "start_time": "2023-08-12T16:35:36.051Z"
   },
   {
    "duration": 33,
    "start_time": "2023-08-12T16:35:36.087Z"
   },
   {
    "duration": 102,
    "start_time": "2023-08-12T16:35:36.122Z"
   },
   {
    "duration": 45,
    "start_time": "2023-08-12T16:35:36.226Z"
   },
   {
    "duration": 13,
    "start_time": "2023-08-12T16:35:36.274Z"
   },
   {
    "duration": 36,
    "start_time": "2023-08-12T16:35:36.290Z"
   },
   {
    "duration": 347,
    "start_time": "2023-08-12T16:35:36.328Z"
   },
   {
    "duration": 265,
    "start_time": "2023-08-12T16:35:36.677Z"
   },
   {
    "duration": 311,
    "start_time": "2023-08-12T16:35:36.944Z"
   },
   {
    "duration": 269,
    "start_time": "2023-08-12T16:35:37.258Z"
   },
   {
    "duration": 265,
    "start_time": "2023-08-12T16:35:37.529Z"
   },
   {
    "duration": 5,
    "start_time": "2023-08-12T16:35:37.796Z"
   },
   {
    "duration": 3191,
    "start_time": "2023-08-12T16:35:37.803Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-12T16:35:40.996Z"
   },
   {
    "duration": 9,
    "start_time": "2023-08-12T16:35:41.004Z"
   },
   {
    "duration": 11,
    "start_time": "2023-08-12T16:35:41.015Z"
   },
   {
    "duration": 15,
    "start_time": "2023-08-12T16:35:41.027Z"
   },
   {
    "duration": 18,
    "start_time": "2023-08-12T16:35:41.044Z"
   },
   {
    "duration": 303,
    "start_time": "2023-08-12T16:35:41.064Z"
   },
   {
    "duration": 23243,
    "start_time": "2023-08-12T16:35:41.369Z"
   },
   {
    "duration": 4631,
    "start_time": "2023-08-12T16:36:04.614Z"
   },
   {
    "duration": 1630822,
    "start_time": "2023-08-12T16:36:09.246Z"
   },
   {
    "duration": 21399,
    "start_time": "2023-08-12T17:03:20.071Z"
   },
   {
    "duration": 6,
    "start_time": "2023-08-12T17:03:41.474Z"
   },
   {
    "duration": 23,
    "start_time": "2023-08-12T17:03:41.482Z"
   }
  ],
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "165px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
